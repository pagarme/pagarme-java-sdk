/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetAnticipationResponse type.
 */
public class GetAnticipationResponse {
    private OptionalNullable<String> id;
    private OptionalNullable<Integer> requestedAmount;
    private OptionalNullable<Integer> approvedAmount;
    private OptionalNullable<GetRecipientResponse> recipient;
    private OptionalNullable<String> pgid;
    private OptionalNullable<LocalDateTime> createdAt;
    private OptionalNullable<LocalDateTime> updatedAt;
    private OptionalNullable<LocalDateTime> paymentDate;
    private OptionalNullable<String> status;
    private OptionalNullable<String> timeframe;

    /**
     * Default constructor.
     */
    public GetAnticipationResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  requestedAmount  Integer value for requestedAmount.
     * @param  approvedAmount  Integer value for approvedAmount.
     * @param  recipient  GetRecipientResponse value for recipient.
     * @param  pgid  String value for pgid.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  paymentDate  LocalDateTime value for paymentDate.
     * @param  status  String value for status.
     * @param  timeframe  String value for timeframe.
     */
    public GetAnticipationResponse(
            String id,
            Integer requestedAmount,
            Integer approvedAmount,
            GetRecipientResponse recipient,
            String pgid,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            LocalDateTime paymentDate,
            String status,
            String timeframe) {
        this.id = OptionalNullable.of(id);
        this.requestedAmount = OptionalNullable.of(requestedAmount);
        this.approvedAmount = OptionalNullable.of(approvedAmount);
        this.recipient = OptionalNullable.of(recipient);
        this.pgid = OptionalNullable.of(pgid);
        this.createdAt = OptionalNullable.of(createdAt);
        this.updatedAt = OptionalNullable.of(updatedAt);
        this.paymentDate = OptionalNullable.of(paymentDate);
        this.status = OptionalNullable.of(status);
        this.timeframe = OptionalNullable.of(timeframe);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetAnticipationResponse(OptionalNullable<String> id,
            OptionalNullable<Integer> requestedAmount, OptionalNullable<Integer> approvedAmount,
            OptionalNullable<GetRecipientResponse> recipient, OptionalNullable<String> pgid,
            OptionalNullable<LocalDateTime> createdAt, OptionalNullable<LocalDateTime> updatedAt,
            OptionalNullable<LocalDateTime> paymentDate, OptionalNullable<String> status,
            OptionalNullable<String> timeframe) {
        this.id = id;
        this.requestedAmount = requestedAmount;
        this.approvedAmount = approvedAmount;
        this.recipient = recipient;
        this.pgid = pgid;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.paymentDate = paymentDate;
        this.status = status;
        this.timeframe = timeframe;
    }

    /**
     * Internal Getter for Id.
     * Id
     * @return Returns the Internal String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * Id
     * @return Returns the String
     */
    public String getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * Id
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     * Id
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for RequestedAmount.
     * Requested amount
     * @return Returns the Internal Integer
     */
    @JsonGetter("requested_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetRequestedAmount() {
        return this.requestedAmount;
    }

    /**
     * Getter for RequestedAmount.
     * Requested amount
     * @return Returns the Integer
     */
    public Integer getRequestedAmount() {
        return OptionalNullable.getFrom(requestedAmount);
    }

    /**
     * Setter for RequestedAmount.
     * Requested amount
     * @param requestedAmount Value for Integer
     */
    @JsonSetter("requested_amount")
    public void setRequestedAmount(Integer requestedAmount) {
        this.requestedAmount = OptionalNullable.of(requestedAmount);
    }

    /**
     * UnSetter for RequestedAmount.
     * Requested amount
     */
    public void unsetRequestedAmount() {
        requestedAmount = null;
    }

    /**
     * Internal Getter for ApprovedAmount.
     * Approved amount
     * @return Returns the Internal Integer
     */
    @JsonGetter("approved_amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetApprovedAmount() {
        return this.approvedAmount;
    }

    /**
     * Getter for ApprovedAmount.
     * Approved amount
     * @return Returns the Integer
     */
    public Integer getApprovedAmount() {
        return OptionalNullable.getFrom(approvedAmount);
    }

    /**
     * Setter for ApprovedAmount.
     * Approved amount
     * @param approvedAmount Value for Integer
     */
    @JsonSetter("approved_amount")
    public void setApprovedAmount(Integer approvedAmount) {
        this.approvedAmount = OptionalNullable.of(approvedAmount);
    }

    /**
     * UnSetter for ApprovedAmount.
     * Approved amount
     */
    public void unsetApprovedAmount() {
        approvedAmount = null;
    }

    /**
     * Internal Getter for Recipient.
     * Recipient
     * @return Returns the Internal GetRecipientResponse
     */
    @JsonGetter("recipient")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetRecipientResponse> internalGetRecipient() {
        return this.recipient;
    }

    /**
     * Getter for Recipient.
     * Recipient
     * @return Returns the GetRecipientResponse
     */
    public GetRecipientResponse getRecipient() {
        return OptionalNullable.getFrom(recipient);
    }

    /**
     * Setter for Recipient.
     * Recipient
     * @param recipient Value for GetRecipientResponse
     */
    @JsonSetter("recipient")
    public void setRecipient(GetRecipientResponse recipient) {
        this.recipient = OptionalNullable.of(recipient);
    }

    /**
     * UnSetter for Recipient.
     * Recipient
     */
    public void unsetRecipient() {
        recipient = null;
    }

    /**
     * Internal Getter for Pgid.
     * Anticipation id on the gateway
     * @return Returns the Internal String
     */
    @JsonGetter("pgid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPgid() {
        return this.pgid;
    }

    /**
     * Getter for Pgid.
     * Anticipation id on the gateway
     * @return Returns the String
     */
    public String getPgid() {
        return OptionalNullable.getFrom(pgid);
    }

    /**
     * Setter for Pgid.
     * Anticipation id on the gateway
     * @param pgid Value for String
     */
    @JsonSetter("pgid")
    public void setPgid(String pgid) {
        this.pgid = OptionalNullable.of(pgid);
    }

    /**
     * UnSetter for Pgid.
     * Anticipation id on the gateway
     */
    public void unsetPgid() {
        pgid = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * Creation date
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * Creation date
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * Creation date
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     * Creation date
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for UpdatedAt.
     * Last update date
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for UpdatedAt.
     * Last update date
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getUpdatedAt() {
        return OptionalNullable.getFrom(updatedAt);
    }

    /**
     * Setter for UpdatedAt.
     * Last update date
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = OptionalNullable.of(updatedAt);
    }

    /**
     * UnSetter for UpdatedAt.
     * Last update date
     */
    public void unsetUpdatedAt() {
        updatedAt = null;
    }

    /**
     * Internal Getter for PaymentDate.
     * Payment date
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("payment_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetPaymentDate() {
        return this.paymentDate;
    }

    /**
     * Getter for PaymentDate.
     * Payment date
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getPaymentDate() {
        return OptionalNullable.getFrom(paymentDate);
    }

    /**
     * Setter for PaymentDate.
     * Payment date
     * @param paymentDate Value for LocalDateTime
     */
    @JsonSetter("payment_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setPaymentDate(LocalDateTime paymentDate) {
        this.paymentDate = OptionalNullable.of(paymentDate);
    }

    /**
     * UnSetter for PaymentDate.
     * Payment date
     */
    public void unsetPaymentDate() {
        paymentDate = null;
    }

    /**
     * Internal Getter for Status.
     * Status
     * @return Returns the Internal String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * Status
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * Status
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     * Status
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for Timeframe.
     * Timeframe
     * @return Returns the Internal String
     */
    @JsonGetter("timeframe")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTimeframe() {
        return this.timeframe;
    }

    /**
     * Getter for Timeframe.
     * Timeframe
     * @return Returns the String
     */
    public String getTimeframe() {
        return OptionalNullable.getFrom(timeframe);
    }

    /**
     * Setter for Timeframe.
     * Timeframe
     * @param timeframe Value for String
     */
    @JsonSetter("timeframe")
    public void setTimeframe(String timeframe) {
        this.timeframe = OptionalNullable.of(timeframe);
    }

    /**
     * UnSetter for Timeframe.
     * Timeframe
     */
    public void unsetTimeframe() {
        timeframe = null;
    }

    /**
     * Converts this GetAnticipationResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetAnticipationResponse [" + "id=" + id + ", requestedAmount=" + requestedAmount
                + ", approvedAmount=" + approvedAmount + ", recipient=" + recipient + ", pgid="
                + pgid + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + ", paymentDate="
                + paymentDate + ", status=" + status + ", timeframe=" + timeframe + "]";
    }

    /**
     * Builds a new {@link GetAnticipationResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetAnticipationResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.id = internalGetId();
        builder.requestedAmount = internalGetRequestedAmount();
        builder.approvedAmount = internalGetApprovedAmount();
        builder.recipient = internalGetRecipient();
        builder.pgid = internalGetPgid();
        builder.createdAt = internalGetCreatedAt();
        builder.updatedAt = internalGetUpdatedAt();
        builder.paymentDate = internalGetPaymentDate();
        builder.status = internalGetStatus();
        builder.timeframe = internalGetTimeframe();
        return builder;
    }

    /**
     * Class to build instances of {@link GetAnticipationResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> id;
        private OptionalNullable<Integer> requestedAmount;
        private OptionalNullable<Integer> approvedAmount;
        private OptionalNullable<GetRecipientResponse> recipient;
        private OptionalNullable<String> pgid;
        private OptionalNullable<LocalDateTime> createdAt;
        private OptionalNullable<LocalDateTime> updatedAt;
        private OptionalNullable<LocalDateTime> paymentDate;
        private OptionalNullable<String> status;
        private OptionalNullable<String> timeframe;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for requestedAmount.
         * @param  requestedAmount  Integer value for requestedAmount.
         * @return Builder
         */
        public Builder requestedAmount(Integer requestedAmount) {
            this.requestedAmount = OptionalNullable.of(requestedAmount);
            return this;
        }

        /**
         * UnSetter for requestedAmount.
         * @return Builder
         */
        public Builder unsetRequestedAmount() {
            requestedAmount = null;
            return this;
        }

        /**
         * Setter for approvedAmount.
         * @param  approvedAmount  Integer value for approvedAmount.
         * @return Builder
         */
        public Builder approvedAmount(Integer approvedAmount) {
            this.approvedAmount = OptionalNullable.of(approvedAmount);
            return this;
        }

        /**
         * UnSetter for approvedAmount.
         * @return Builder
         */
        public Builder unsetApprovedAmount() {
            approvedAmount = null;
            return this;
        }

        /**
         * Setter for recipient.
         * @param  recipient  GetRecipientResponse value for recipient.
         * @return Builder
         */
        public Builder recipient(GetRecipientResponse recipient) {
            this.recipient = OptionalNullable.of(recipient);
            return this;
        }

        /**
         * UnSetter for recipient.
         * @return Builder
         */
        public Builder unsetRecipient() {
            recipient = null;
            return this;
        }

        /**
         * Setter for pgid.
         * @param  pgid  String value for pgid.
         * @return Builder
         */
        public Builder pgid(String pgid) {
            this.pgid = OptionalNullable.of(pgid);
            return this;
        }

        /**
         * UnSetter for pgid.
         * @return Builder
         */
        public Builder unsetPgid() {
            pgid = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = OptionalNullable.of(updatedAt);
            return this;
        }

        /**
         * UnSetter for updatedAt.
         * @return Builder
         */
        public Builder unsetUpdatedAt() {
            updatedAt = null;
            return this;
        }

        /**
         * Setter for paymentDate.
         * @param  paymentDate  LocalDateTime value for paymentDate.
         * @return Builder
         */
        public Builder paymentDate(LocalDateTime paymentDate) {
            this.paymentDate = OptionalNullable.of(paymentDate);
            return this;
        }

        /**
         * UnSetter for paymentDate.
         * @return Builder
         */
        public Builder unsetPaymentDate() {
            paymentDate = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for timeframe.
         * @param  timeframe  String value for timeframe.
         * @return Builder
         */
        public Builder timeframe(String timeframe) {
            this.timeframe = OptionalNullable.of(timeframe);
            return this;
        }

        /**
         * UnSetter for timeframe.
         * @return Builder
         */
        public Builder unsetTimeframe() {
            timeframe = null;
            return this;
        }

        /**
         * Builds a new {@link GetAnticipationResponse} object using the set fields.
         * @return {@link GetAnticipationResponse}
         */
        public GetAnticipationResponse build() {
            return new GetAnticipationResponse(id, requestedAmount, approvedAmount, recipient, pgid,
                    createdAt, updatedAt, paymentDate, status, timeframe);
        }
    }
}
