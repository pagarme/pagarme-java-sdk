/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetCardTokenResponse type.
 */
public class GetCardTokenResponse {
    private OptionalNullable<String> lastFourDigits;
    private OptionalNullable<String> holderName;
    private OptionalNullable<String> holderDocument;
    private OptionalNullable<Integer> expMonth;
    private OptionalNullable<Integer> expYear;
    private OptionalNullable<String> brand;
    private OptionalNullable<String> type;
    private OptionalNullable<String> label;

    /**
     * Default constructor.
     */
    public GetCardTokenResponse() {
    }

    /**
     * Initialization constructor.
     * @param  lastFourDigits  String value for lastFourDigits.
     * @param  holderName  String value for holderName.
     * @param  holderDocument  String value for holderDocument.
     * @param  expMonth  Integer value for expMonth.
     * @param  expYear  Integer value for expYear.
     * @param  brand  String value for brand.
     * @param  type  String value for type.
     * @param  label  String value for label.
     */
    public GetCardTokenResponse(
            String lastFourDigits,
            String holderName,
            String holderDocument,
            Integer expMonth,
            Integer expYear,
            String brand,
            String type,
            String label) {
        this.lastFourDigits = OptionalNullable.of(lastFourDigits);
        this.holderName = OptionalNullable.of(holderName);
        this.holderDocument = OptionalNullable.of(holderDocument);
        this.expMonth = OptionalNullable.of(expMonth);
        this.expYear = OptionalNullable.of(expYear);
        this.brand = OptionalNullable.of(brand);
        this.type = OptionalNullable.of(type);
        this.label = OptionalNullable.of(label);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetCardTokenResponse(OptionalNullable<String> lastFourDigits,
            OptionalNullable<String> holderName, OptionalNullable<String> holderDocument,
            OptionalNullable<Integer> expMonth, OptionalNullable<Integer> expYear,
            OptionalNullable<String> brand, OptionalNullable<String> type,
            OptionalNullable<String> label) {
        this.lastFourDigits = lastFourDigits;
        this.holderName = holderName;
        this.holderDocument = holderDocument;
        this.expMonth = expMonth;
        this.expYear = expYear;
        this.brand = brand;
        this.type = type;
        this.label = label;
    }

    /**
     * Internal Getter for LastFourDigits.
     * @return Returns the Internal String
     */
    @JsonGetter("last_four_digits")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLastFourDigits() {
        return this.lastFourDigits;
    }

    /**
     * Getter for LastFourDigits.
     * @return Returns the String
     */
    public String getLastFourDigits() {
        return OptionalNullable.getFrom(lastFourDigits);
    }

    /**
     * Setter for LastFourDigits.
     * @param lastFourDigits Value for String
     */
    @JsonSetter("last_four_digits")
    public void setLastFourDigits(String lastFourDigits) {
        this.lastFourDigits = OptionalNullable.of(lastFourDigits);
    }

    /**
     * UnSetter for LastFourDigits.
     */
    public void unsetLastFourDigits() {
        lastFourDigits = null;
    }

    /**
     * Internal Getter for HolderName.
     * @return Returns the Internal String
     */
    @JsonGetter("holder_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetHolderName() {
        return this.holderName;
    }

    /**
     * Getter for HolderName.
     * @return Returns the String
     */
    public String getHolderName() {
        return OptionalNullable.getFrom(holderName);
    }

    /**
     * Setter for HolderName.
     * @param holderName Value for String
     */
    @JsonSetter("holder_name")
    public void setHolderName(String holderName) {
        this.holderName = OptionalNullable.of(holderName);
    }

    /**
     * UnSetter for HolderName.
     */
    public void unsetHolderName() {
        holderName = null;
    }

    /**
     * Internal Getter for HolderDocument.
     * @return Returns the Internal String
     */
    @JsonGetter("holder_document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetHolderDocument() {
        return this.holderDocument;
    }

    /**
     * Getter for HolderDocument.
     * @return Returns the String
     */
    public String getHolderDocument() {
        return OptionalNullable.getFrom(holderDocument);
    }

    /**
     * Setter for HolderDocument.
     * @param holderDocument Value for String
     */
    @JsonSetter("holder_document")
    public void setHolderDocument(String holderDocument) {
        this.holderDocument = OptionalNullable.of(holderDocument);
    }

    /**
     * UnSetter for HolderDocument.
     */
    public void unsetHolderDocument() {
        holderDocument = null;
    }

    /**
     * Internal Getter for ExpMonth.
     * @return Returns the Internal Integer
     */
    @JsonGetter("exp_month")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetExpMonth() {
        return this.expMonth;
    }

    /**
     * Getter for ExpMonth.
     * @return Returns the Integer
     */
    public Integer getExpMonth() {
        return OptionalNullable.getFrom(expMonth);
    }

    /**
     * Setter for ExpMonth.
     * @param expMonth Value for Integer
     */
    @JsonSetter("exp_month")
    public void setExpMonth(Integer expMonth) {
        this.expMonth = OptionalNullable.of(expMonth);
    }

    /**
     * UnSetter for ExpMonth.
     */
    public void unsetExpMonth() {
        expMonth = null;
    }

    /**
     * Internal Getter for ExpYear.
     * @return Returns the Internal Integer
     */
    @JsonGetter("exp_year")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetExpYear() {
        return this.expYear;
    }

    /**
     * Getter for ExpYear.
     * @return Returns the Integer
     */
    public Integer getExpYear() {
        return OptionalNullable.getFrom(expYear);
    }

    /**
     * Setter for ExpYear.
     * @param expYear Value for Integer
     */
    @JsonSetter("exp_year")
    public void setExpYear(Integer expYear) {
        this.expYear = OptionalNullable.of(expYear);
    }

    /**
     * UnSetter for ExpYear.
     */
    public void unsetExpYear() {
        expYear = null;
    }

    /**
     * Internal Getter for Brand.
     * @return Returns the Internal String
     */
    @JsonGetter("brand")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBrand() {
        return this.brand;
    }

    /**
     * Getter for Brand.
     * @return Returns the String
     */
    public String getBrand() {
        return OptionalNullable.getFrom(brand);
    }

    /**
     * Setter for Brand.
     * @param brand Value for String
     */
    @JsonSetter("brand")
    public void setBrand(String brand) {
        this.brand = OptionalNullable.of(brand);
    }

    /**
     * UnSetter for Brand.
     */
    public void unsetBrand() {
        brand = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for Label.
     * @return Returns the Internal String
     */
    @JsonGetter("label")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLabel() {
        return this.label;
    }

    /**
     * Getter for Label.
     * @return Returns the String
     */
    public String getLabel() {
        return OptionalNullable.getFrom(label);
    }

    /**
     * Setter for Label.
     * @param label Value for String
     */
    @JsonSetter("label")
    public void setLabel(String label) {
        this.label = OptionalNullable.of(label);
    }

    /**
     * UnSetter for Label.
     */
    public void unsetLabel() {
        label = null;
    }

    /**
     * Converts this GetCardTokenResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetCardTokenResponse [" + "lastFourDigits=" + lastFourDigits + ", holderName="
                + holderName + ", holderDocument=" + holderDocument + ", expMonth=" + expMonth
                + ", expYear=" + expYear + ", brand=" + brand + ", type=" + type + ", label="
                + label + "]";
    }

    /**
     * Builds a new {@link GetCardTokenResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetCardTokenResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.lastFourDigits = internalGetLastFourDigits();
        builder.holderName = internalGetHolderName();
        builder.holderDocument = internalGetHolderDocument();
        builder.expMonth = internalGetExpMonth();
        builder.expYear = internalGetExpYear();
        builder.brand = internalGetBrand();
        builder.type = internalGetType();
        builder.label = internalGetLabel();
        return builder;
    }

    /**
     * Class to build instances of {@link GetCardTokenResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> lastFourDigits;
        private OptionalNullable<String> holderName;
        private OptionalNullable<String> holderDocument;
        private OptionalNullable<Integer> expMonth;
        private OptionalNullable<Integer> expYear;
        private OptionalNullable<String> brand;
        private OptionalNullable<String> type;
        private OptionalNullable<String> label;



        /**
         * Setter for lastFourDigits.
         * @param  lastFourDigits  String value for lastFourDigits.
         * @return Builder
         */
        public Builder lastFourDigits(String lastFourDigits) {
            this.lastFourDigits = OptionalNullable.of(lastFourDigits);
            return this;
        }

        /**
         * UnSetter for lastFourDigits.
         * @return Builder
         */
        public Builder unsetLastFourDigits() {
            lastFourDigits = null;
            return this;
        }

        /**
         * Setter for holderName.
         * @param  holderName  String value for holderName.
         * @return Builder
         */
        public Builder holderName(String holderName) {
            this.holderName = OptionalNullable.of(holderName);
            return this;
        }

        /**
         * UnSetter for holderName.
         * @return Builder
         */
        public Builder unsetHolderName() {
            holderName = null;
            return this;
        }

        /**
         * Setter for holderDocument.
         * @param  holderDocument  String value for holderDocument.
         * @return Builder
         */
        public Builder holderDocument(String holderDocument) {
            this.holderDocument = OptionalNullable.of(holderDocument);
            return this;
        }

        /**
         * UnSetter for holderDocument.
         * @return Builder
         */
        public Builder unsetHolderDocument() {
            holderDocument = null;
            return this;
        }

        /**
         * Setter for expMonth.
         * @param  expMonth  Integer value for expMonth.
         * @return Builder
         */
        public Builder expMonth(Integer expMonth) {
            this.expMonth = OptionalNullable.of(expMonth);
            return this;
        }

        /**
         * UnSetter for expMonth.
         * @return Builder
         */
        public Builder unsetExpMonth() {
            expMonth = null;
            return this;
        }

        /**
         * Setter for expYear.
         * @param  expYear  Integer value for expYear.
         * @return Builder
         */
        public Builder expYear(Integer expYear) {
            this.expYear = OptionalNullable.of(expYear);
            return this;
        }

        /**
         * UnSetter for expYear.
         * @return Builder
         */
        public Builder unsetExpYear() {
            expYear = null;
            return this;
        }

        /**
         * Setter for brand.
         * @param  brand  String value for brand.
         * @return Builder
         */
        public Builder brand(String brand) {
            this.brand = OptionalNullable.of(brand);
            return this;
        }

        /**
         * UnSetter for brand.
         * @return Builder
         */
        public Builder unsetBrand() {
            brand = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for label.
         * @param  label  String value for label.
         * @return Builder
         */
        public Builder label(String label) {
            this.label = OptionalNullable.of(label);
            return this;
        }

        /**
         * UnSetter for label.
         * @return Builder
         */
        public Builder unsetLabel() {
            label = null;
            return this;
        }

        /**
         * Builds a new {@link GetCardTokenResponse} object using the set fields.
         * @return {@link GetCardTokenResponse}
         */
        public GetCardTokenResponse build() {
            return new GetCardTokenResponse(lastFourDigits, holderName, holderDocument, expMonth,
                    expYear, brand, type, label);
        }
    }
}
