/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for GetAutomaticAnticipationResponse type.
 */
public class GetAutomaticAnticipationResponse {
    private OptionalNullable<Boolean> enabled;
    private OptionalNullable<String> type;
    private OptionalNullable<Integer> volumePercentage;
    private OptionalNullable<Integer> delay;
    private OptionalNullable<List<Integer>> days;

    /**
     * Default constructor.
     */
    public GetAutomaticAnticipationResponse() {
    }

    /**
     * Initialization constructor.
     * @param  enabled  Boolean value for enabled.
     * @param  type  String value for type.
     * @param  volumePercentage  Integer value for volumePercentage.
     * @param  delay  Integer value for delay.
     * @param  days  List of Integer value for days.
     */
    public GetAutomaticAnticipationResponse(
            Boolean enabled,
            String type,
            Integer volumePercentage,
            Integer delay,
            List<Integer> days) {
        this.enabled = OptionalNullable.of(enabled);
        this.type = OptionalNullable.of(type);
        this.volumePercentage = OptionalNullable.of(volumePercentage);
        this.delay = OptionalNullable.of(delay);
        this.days = OptionalNullable.of(days);
    }

    /**
     * Initialization constructor.
     * @param  enabled  Boolean value for enabled.
     * @param  type  String value for type.
     * @param  volumePercentage  Integer value for volumePercentage.
     * @param  delay  Integer value for delay.
     * @param  days  List of Integer value for days.
     */

    protected GetAutomaticAnticipationResponse(OptionalNullable<Boolean> enabled,
            OptionalNullable<String> type, OptionalNullable<Integer> volumePercentage,
            OptionalNullable<Integer> delay, OptionalNullable<List<Integer>> days) {
        this.enabled = enabled;
        this.type = type;
        this.volumePercentage = volumePercentage;
        this.delay = delay;
        this.days = days;
    }

    /**
     * Internal Getter for Enabled.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("enabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetEnabled() {
        return this.enabled;
    }

    /**
     * Getter for Enabled.
     * @return Returns the Boolean
     */
    public Boolean getEnabled() {
        return OptionalNullable.getFrom(enabled);
    }

    /**
     * Setter for Enabled.
     * @param enabled Value for Boolean
     */
    @JsonSetter("enabled")
    public void setEnabled(Boolean enabled) {
        this.enabled = OptionalNullable.of(enabled);
    }

    /**
     * UnSetter for Enabled.
     */
    public void unsetEnabled() {
        enabled = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for VolumePercentage.
     * @return Returns the Internal Integer
     */
    @JsonGetter("volume_percentage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetVolumePercentage() {
        return this.volumePercentage;
    }

    /**
     * Getter for VolumePercentage.
     * @return Returns the Integer
     */
    public Integer getVolumePercentage() {
        return OptionalNullable.getFrom(volumePercentage);
    }

    /**
     * Setter for VolumePercentage.
     * @param volumePercentage Value for Integer
     */
    @JsonSetter("volume_percentage")
    public void setVolumePercentage(Integer volumePercentage) {
        this.volumePercentage = OptionalNullable.of(volumePercentage);
    }

    /**
     * UnSetter for VolumePercentage.
     */
    public void unsetVolumePercentage() {
        volumePercentage = null;
    }

    /**
     * Internal Getter for Delay.
     * @return Returns the Internal Integer
     */
    @JsonGetter("delay")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDelay() {
        return this.delay;
    }

    /**
     * Getter for Delay.
     * @return Returns the Integer
     */
    public Integer getDelay() {
        return OptionalNullable.getFrom(delay);
    }

    /**
     * Setter for Delay.
     * @param delay Value for Integer
     */
    @JsonSetter("delay")
    public void setDelay(Integer delay) {
        this.delay = OptionalNullable.of(delay);
    }

    /**
     * UnSetter for Delay.
     */
    public void unsetDelay() {
        delay = null;
    }

    /**
     * Internal Getter for Days.
     * @return Returns the Internal List of Integer
     */
    @JsonGetter("days")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<Integer>> internalGetDays() {
        return this.days;
    }

    /**
     * Getter for Days.
     * @return Returns the List of Integer
     */
    public List<Integer> getDays() {
        return OptionalNullable.getFrom(days);
    }

    /**
     * Setter for Days.
     * @param days Value for List of Integer
     */
    @JsonSetter("days")
    public void setDays(List<Integer> days) {
        this.days = OptionalNullable.of(days);
    }

    /**
     * UnSetter for Days.
     */
    public void unsetDays() {
        days = null;
    }

    /**
     * Converts this GetAutomaticAnticipationResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetAutomaticAnticipationResponse [" + "enabled=" + enabled + ", type=" + type
                + ", volumePercentage=" + volumePercentage + ", delay=" + delay + ", days=" + days
                + "]";
    }

    /**
     * Builds a new {@link GetAutomaticAnticipationResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetAutomaticAnticipationResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.enabled = internalGetEnabled();
        builder.type = internalGetType();
        builder.volumePercentage = internalGetVolumePercentage();
        builder.delay = internalGetDelay();
        builder.days = internalGetDays();
        return builder;
    }

    /**
     * Class to build instances of {@link GetAutomaticAnticipationResponse}.
     */
    public static class Builder {
        private OptionalNullable<Boolean> enabled;
        private OptionalNullable<String> type;
        private OptionalNullable<Integer> volumePercentage;
        private OptionalNullable<Integer> delay;
        private OptionalNullable<List<Integer>> days;



        /**
         * Setter for enabled.
         * @param  enabled  Boolean value for enabled.
         * @return Builder
         */
        public Builder enabled(Boolean enabled) {
            this.enabled = OptionalNullable.of(enabled);
            return this;
        }

        /**
         * UnSetter for enabled.
         * @return Builder
         */
        public Builder unsetEnabled() {
            enabled = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for volumePercentage.
         * @param  volumePercentage  Integer value for volumePercentage.
         * @return Builder
         */
        public Builder volumePercentage(Integer volumePercentage) {
            this.volumePercentage = OptionalNullable.of(volumePercentage);
            return this;
        }

        /**
         * UnSetter for volumePercentage.
         * @return Builder
         */
        public Builder unsetVolumePercentage() {
            volumePercentage = null;
            return this;
        }

        /**
         * Setter for delay.
         * @param  delay  Integer value for delay.
         * @return Builder
         */
        public Builder delay(Integer delay) {
            this.delay = OptionalNullable.of(delay);
            return this;
        }

        /**
         * UnSetter for delay.
         * @return Builder
         */
        public Builder unsetDelay() {
            delay = null;
            return this;
        }

        /**
         * Setter for days.
         * @param  days  List of Integer value for days.
         * @return Builder
         */
        public Builder days(List<Integer> days) {
            this.days = OptionalNullable.of(days);
            return this;
        }

        /**
         * UnSetter for days.
         * @return Builder
         */
        public Builder unsetDays() {
            days = null;
            return this;
        }

        /**
         * Builds a new {@link GetAutomaticAnticipationResponse} object using the set fields.
         * @return {@link GetAutomaticAnticipationResponse}
         */
        public GetAutomaticAnticipationResponse build() {
            return new GetAutomaticAnticipationResponse(enabled, type, volumePercentage, delay,
                    days);
        }
    }
}
