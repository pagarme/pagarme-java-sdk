/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetPeriodResponse type.
 */
public class GetPeriodResponse {
    private OptionalNullable<LocalDateTime> startAt;
    private OptionalNullable<LocalDateTime> endAt;
    private OptionalNullable<String> id;
    private OptionalNullable<LocalDateTime> billingAt;
    private OptionalNullable<GetSubscriptionResponse> subscription;
    private OptionalNullable<String> status;
    private OptionalNullable<Integer> duration;
    private OptionalNullable<String> createdAt;
    private OptionalNullable<String> updatedAt;
    private OptionalNullable<Integer> cycle;

    /**
     * Default constructor.
     */
    public GetPeriodResponse() {
    }

    /**
     * Initialization constructor.
     * @param  startAt  LocalDateTime value for startAt.
     * @param  endAt  LocalDateTime value for endAt.
     * @param  id  String value for id.
     * @param  billingAt  LocalDateTime value for billingAt.
     * @param  subscription  GetSubscriptionResponse value for subscription.
     * @param  status  String value for status.
     * @param  duration  Integer value for duration.
     * @param  createdAt  String value for createdAt.
     * @param  updatedAt  String value for updatedAt.
     * @param  cycle  Integer value for cycle.
     */
    public GetPeriodResponse(
            LocalDateTime startAt,
            LocalDateTime endAt,
            String id,
            LocalDateTime billingAt,
            GetSubscriptionResponse subscription,
            String status,
            Integer duration,
            String createdAt,
            String updatedAt,
            Integer cycle) {
        this.startAt = OptionalNullable.of(startAt);
        this.endAt = OptionalNullable.of(endAt);
        this.id = OptionalNullable.of(id);
        this.billingAt = OptionalNullable.of(billingAt);
        this.subscription = OptionalNullable.of(subscription);
        this.status = OptionalNullable.of(status);
        this.duration = OptionalNullable.of(duration);
        this.createdAt = OptionalNullable.of(createdAt);
        this.updatedAt = OptionalNullable.of(updatedAt);
        this.cycle = OptionalNullable.of(cycle);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetPeriodResponse(OptionalNullable<LocalDateTime> startAt,
            OptionalNullable<LocalDateTime> endAt, OptionalNullable<String> id,
            OptionalNullable<LocalDateTime> billingAt,
            OptionalNullable<GetSubscriptionResponse> subscription, OptionalNullable<String> status,
            OptionalNullable<Integer> duration, OptionalNullable<String> createdAt,
            OptionalNullable<String> updatedAt, OptionalNullable<Integer> cycle) {
        this.startAt = startAt;
        this.endAt = endAt;
        this.id = id;
        this.billingAt = billingAt;
        this.subscription = subscription;
        this.status = status;
        this.duration = duration;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.cycle = cycle;
    }

    /**
     * Internal Getter for StartAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("start_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetStartAt() {
        return this.startAt;
    }

    /**
     * Getter for StartAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getStartAt() {
        return OptionalNullable.getFrom(startAt);
    }

    /**
     * Setter for StartAt.
     * @param startAt Value for LocalDateTime
     */
    @JsonSetter("start_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setStartAt(LocalDateTime startAt) {
        this.startAt = OptionalNullable.of(startAt);
    }

    /**
     * UnSetter for StartAt.
     */
    public void unsetStartAt() {
        startAt = null;
    }

    /**
     * Internal Getter for EndAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("end_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetEndAt() {
        return this.endAt;
    }

    /**
     * Getter for EndAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getEndAt() {
        return OptionalNullable.getFrom(endAt);
    }

    /**
     * Setter for EndAt.
     * @param endAt Value for LocalDateTime
     */
    @JsonSetter("end_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setEndAt(LocalDateTime endAt) {
        this.endAt = OptionalNullable.of(endAt);
    }

    /**
     * UnSetter for EndAt.
     */
    public void unsetEndAt() {
        endAt = null;
    }

    /**
     * Internal Getter for Id.
     * @return Returns the Internal String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    public String getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for BillingAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("billing_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetBillingAt() {
        return this.billingAt;
    }

    /**
     * Getter for BillingAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getBillingAt() {
        return OptionalNullable.getFrom(billingAt);
    }

    /**
     * Setter for BillingAt.
     * @param billingAt Value for LocalDateTime
     */
    @JsonSetter("billing_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setBillingAt(LocalDateTime billingAt) {
        this.billingAt = OptionalNullable.of(billingAt);
    }

    /**
     * UnSetter for BillingAt.
     */
    public void unsetBillingAt() {
        billingAt = null;
    }

    /**
     * Internal Getter for Subscription.
     * @return Returns the Internal GetSubscriptionResponse
     */
    @JsonGetter("subscription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetSubscriptionResponse> internalGetSubscription() {
        return this.subscription;
    }

    /**
     * Getter for Subscription.
     * @return Returns the GetSubscriptionResponse
     */
    public GetSubscriptionResponse getSubscription() {
        return OptionalNullable.getFrom(subscription);
    }

    /**
     * Setter for Subscription.
     * @param subscription Value for GetSubscriptionResponse
     */
    @JsonSetter("subscription")
    public void setSubscription(GetSubscriptionResponse subscription) {
        this.subscription = OptionalNullable.of(subscription);
    }

    /**
     * UnSetter for Subscription.
     */
    public void unsetSubscription() {
        subscription = null;
    }

    /**
     * Internal Getter for Status.
     * @return Returns the Internal String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for Duration.
     * @return Returns the Internal Integer
     */
    @JsonGetter("duration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetDuration() {
        return this.duration;
    }

    /**
     * Getter for Duration.
     * @return Returns the Integer
     */
    public Integer getDuration() {
        return OptionalNullable.getFrom(duration);
    }

    /**
     * Setter for Duration.
     * @param duration Value for Integer
     */
    @JsonSetter("duration")
    public void setDuration(Integer duration) {
        this.duration = OptionalNullable.of(duration);
    }

    /**
     * UnSetter for Duration.
     */
    public void unsetDuration() {
        duration = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * @return Returns the Internal String
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the String
     */
    public String getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for String
     */
    @JsonSetter("created_at")
    public void setCreatedAt(String createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for UpdatedAt.
     * @return Returns the Internal String
     */
    @JsonGetter("updated_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the String
     */
    public String getUpdatedAt() {
        return OptionalNullable.getFrom(updatedAt);
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for String
     */
    @JsonSetter("updated_at")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = OptionalNullable.of(updatedAt);
    }

    /**
     * UnSetter for UpdatedAt.
     */
    public void unsetUpdatedAt() {
        updatedAt = null;
    }

    /**
     * Internal Getter for Cycle.
     * @return Returns the Internal Integer
     */
    @JsonGetter("cycle")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCycle() {
        return this.cycle;
    }

    /**
     * Getter for Cycle.
     * @return Returns the Integer
     */
    public Integer getCycle() {
        return OptionalNullable.getFrom(cycle);
    }

    /**
     * Setter for Cycle.
     * @param cycle Value for Integer
     */
    @JsonSetter("cycle")
    public void setCycle(Integer cycle) {
        this.cycle = OptionalNullable.of(cycle);
    }

    /**
     * UnSetter for Cycle.
     */
    public void unsetCycle() {
        cycle = null;
    }

    /**
     * Converts this GetPeriodResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetPeriodResponse [" + "startAt=" + startAt + ", endAt=" + endAt + ", id=" + id
                + ", billingAt=" + billingAt + ", subscription=" + subscription + ", status="
                + status + ", duration=" + duration + ", createdAt=" + createdAt + ", updatedAt="
                + updatedAt + ", cycle=" + cycle + "]";
    }

    /**
     * Builds a new {@link GetPeriodResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetPeriodResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.startAt = internalGetStartAt();
        builder.endAt = internalGetEndAt();
        builder.id = internalGetId();
        builder.billingAt = internalGetBillingAt();
        builder.subscription = internalGetSubscription();
        builder.status = internalGetStatus();
        builder.duration = internalGetDuration();
        builder.createdAt = internalGetCreatedAt();
        builder.updatedAt = internalGetUpdatedAt();
        builder.cycle = internalGetCycle();
        return builder;
    }

    /**
     * Class to build instances of {@link GetPeriodResponse}.
     */
    public static class Builder {
        private OptionalNullable<LocalDateTime> startAt;
        private OptionalNullable<LocalDateTime> endAt;
        private OptionalNullable<String> id;
        private OptionalNullable<LocalDateTime> billingAt;
        private OptionalNullable<GetSubscriptionResponse> subscription;
        private OptionalNullable<String> status;
        private OptionalNullable<Integer> duration;
        private OptionalNullable<String> createdAt;
        private OptionalNullable<String> updatedAt;
        private OptionalNullable<Integer> cycle;



        /**
         * Setter for startAt.
         * @param  startAt  LocalDateTime value for startAt.
         * @return Builder
         */
        public Builder startAt(LocalDateTime startAt) {
            this.startAt = OptionalNullable.of(startAt);
            return this;
        }

        /**
         * UnSetter for startAt.
         * @return Builder
         */
        public Builder unsetStartAt() {
            startAt = null;
            return this;
        }

        /**
         * Setter for endAt.
         * @param  endAt  LocalDateTime value for endAt.
         * @return Builder
         */
        public Builder endAt(LocalDateTime endAt) {
            this.endAt = OptionalNullable.of(endAt);
            return this;
        }

        /**
         * UnSetter for endAt.
         * @return Builder
         */
        public Builder unsetEndAt() {
            endAt = null;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for billingAt.
         * @param  billingAt  LocalDateTime value for billingAt.
         * @return Builder
         */
        public Builder billingAt(LocalDateTime billingAt) {
            this.billingAt = OptionalNullable.of(billingAt);
            return this;
        }

        /**
         * UnSetter for billingAt.
         * @return Builder
         */
        public Builder unsetBillingAt() {
            billingAt = null;
            return this;
        }

        /**
         * Setter for subscription.
         * @param  subscription  GetSubscriptionResponse value for subscription.
         * @return Builder
         */
        public Builder subscription(GetSubscriptionResponse subscription) {
            this.subscription = OptionalNullable.of(subscription);
            return this;
        }

        /**
         * UnSetter for subscription.
         * @return Builder
         */
        public Builder unsetSubscription() {
            subscription = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for duration.
         * @param  duration  Integer value for duration.
         * @return Builder
         */
        public Builder duration(Integer duration) {
            this.duration = OptionalNullable.of(duration);
            return this;
        }

        /**
         * UnSetter for duration.
         * @return Builder
         */
        public Builder unsetDuration() {
            duration = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = OptionalNullable.of(updatedAt);
            return this;
        }

        /**
         * UnSetter for updatedAt.
         * @return Builder
         */
        public Builder unsetUpdatedAt() {
            updatedAt = null;
            return this;
        }

        /**
         * Setter for cycle.
         * @param  cycle  Integer value for cycle.
         * @return Builder
         */
        public Builder cycle(Integer cycle) {
            this.cycle = OptionalNullable.of(cycle);
            return this;
        }

        /**
         * UnSetter for cycle.
         * @return Builder
         */
        public Builder unsetCycle() {
            cycle = null;
            return this;
        }

        /**
         * Builds a new {@link GetPeriodResponse} object using the set fields.
         * @return {@link GetPeriodResponse}
         */
        public GetPeriodResponse build() {
            return new GetPeriodResponse(startAt, endAt, id, billingAt, subscription, status,
                    duration, createdAt, updatedAt, cycle);
        }
    }
}
