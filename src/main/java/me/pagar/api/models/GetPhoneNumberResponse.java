/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetPhoneNumberResponse type.
 */
public class GetPhoneNumberResponse {
    private OptionalNullable<String> ddd;
    private OptionalNullable<String> number;
    private OptionalNullable<String> type;

    /**
     * Default constructor.
     */
    public GetPhoneNumberResponse() {
    }

    /**
     * Initialization constructor.
     * @param  ddd  String value for ddd.
     * @param  number  String value for number.
     * @param  type  String value for type.
     */
    public GetPhoneNumberResponse(
            String ddd,
            String number,
            String type) {
        this.ddd = OptionalNullable.of(ddd);
        this.number = OptionalNullable.of(number);
        this.type = OptionalNullable.of(type);
    }

    /**
     * Initialization constructor.
     * @param  ddd  String value for ddd.
     * @param  number  String value for number.
     * @param  type  String value for type.
     */

    protected GetPhoneNumberResponse(OptionalNullable<String> ddd, OptionalNullable<String> number,
            OptionalNullable<String> type) {
        this.ddd = ddd;
        this.number = number;
        this.type = type;
    }

    /**
     * Internal Getter for Ddd.
     * @return Returns the Internal String
     */
    @JsonGetter("ddd")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDdd() {
        return this.ddd;
    }

    /**
     * Getter for Ddd.
     * @return Returns the String
     */
    public String getDdd() {
        return OptionalNullable.getFrom(ddd);
    }

    /**
     * Setter for Ddd.
     * @param ddd Value for String
     */
    @JsonSetter("ddd")
    public void setDdd(String ddd) {
        this.ddd = OptionalNullable.of(ddd);
    }

    /**
     * UnSetter for Ddd.
     */
    public void unsetDdd() {
        ddd = null;
    }

    /**
     * Internal Getter for Number.
     * @return Returns the Internal String
     */
    @JsonGetter("number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNumber() {
        return this.number;
    }

    /**
     * Getter for Number.
     * @return Returns the String
     */
    public String getNumber() {
        return OptionalNullable.getFrom(number);
    }

    /**
     * Setter for Number.
     * @param number Value for String
     */
    @JsonSetter("number")
    public void setNumber(String number) {
        this.number = OptionalNullable.of(number);
    }

    /**
     * UnSetter for Number.
     */
    public void unsetNumber() {
        number = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Converts this GetPhoneNumberResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetPhoneNumberResponse [" + "ddd=" + ddd + ", number=" + number + ", type=" + type
                + "]";
    }

    /**
     * Builds a new {@link GetPhoneNumberResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetPhoneNumberResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.ddd = internalGetDdd();
        builder.number = internalGetNumber();
        builder.type = internalGetType();
        return builder;
    }

    /**
     * Class to build instances of {@link GetPhoneNumberResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> ddd;
        private OptionalNullable<String> number;
        private OptionalNullable<String> type;



        /**
         * Setter for ddd.
         * @param  ddd  String value for ddd.
         * @return Builder
         */
        public Builder ddd(String ddd) {
            this.ddd = OptionalNullable.of(ddd);
            return this;
        }

        /**
         * UnSetter for ddd.
         * @return Builder
         */
        public Builder unsetDdd() {
            ddd = null;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  String value for number.
         * @return Builder
         */
        public Builder number(String number) {
            this.number = OptionalNullable.of(number);
            return this;
        }

        /**
         * UnSetter for number.
         * @return Builder
         */
        public Builder unsetNumber() {
            number = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Builds a new {@link GetPhoneNumberResponse} object using the set fields.
         * @return {@link GetPhoneNumberResponse}
         */
        public GetPhoneNumberResponse build() {
            return new GetPhoneNumberResponse(ddd, number, type);
        }
    }
}
