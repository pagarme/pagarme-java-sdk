/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for GetRegisterInformationResponse type.
 */
public class GetRegisterInformationResponse {
    private OptionalNullable<String> email;
    private OptionalNullable<String> document;
    private OptionalNullable<String> type;
    private OptionalNullable<String> siteUrl;
    private OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers;
    private OptionalNullable<String> name;
    private OptionalNullable<String> motherName;
    private OptionalNullable<String> birthdate;
    private OptionalNullable<String> monthlyIncome;
    private OptionalNullable<String> professionalOccupation;
    private OptionalNullable<GetRegisterInformationAddressResponse> address;
    private OptionalNullable<String> companyName;
    private OptionalNullable<String> tradingName;
    private OptionalNullable<String> annualRevenue;
    private OptionalNullable<String> corporationType;
    private OptionalNullable<String> foundingDate;
    private OptionalNullable<String> cnae;
    private OptionalNullable<GetRegisterInformationAddressResponse> mainAddress;
    private OptionalNullable<List<GetManagingPartnerResponse>> managingPartners;

    /**
     * Default constructor.
     */
    public GetRegisterInformationResponse() {
    }

    /**
     * Initialization constructor.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  siteUrl  String value for siteUrl.
     * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
     * @param  name  String value for name.
     * @param  motherName  String value for motherName.
     * @param  birthdate  String value for birthdate.
     * @param  monthlyIncome  String value for monthlyIncome.
     * @param  professionalOccupation  String value for professionalOccupation.
     * @param  address  GetRegisterInformationAddressResponse value for address.
     * @param  companyName  String value for companyName.
     * @param  tradingName  String value for tradingName.
     * @param  annualRevenue  String value for annualRevenue.
     * @param  corporationType  String value for corporationType.
     * @param  foundingDate  String value for foundingDate.
     * @param  cnae  String value for cnae.
     * @param  mainAddress  GetRegisterInformationAddressResponse value for mainAddress.
     * @param  managingPartners  List of GetManagingPartnerResponse value for managingPartners.
     */
    public GetRegisterInformationResponse(
            String email,
            String document,
            String type,
            String siteUrl,
            List<GetPhoneNumberResponse> phoneNumbers,
            String name,
            String motherName,
            String birthdate,
            String monthlyIncome,
            String professionalOccupation,
            GetRegisterInformationAddressResponse address,
            String companyName,
            String tradingName,
            String annualRevenue,
            String corporationType,
            String foundingDate,
            String cnae,
            GetRegisterInformationAddressResponse mainAddress,
            List<GetManagingPartnerResponse> managingPartners) {
        this.email = OptionalNullable.of(email);
        this.document = OptionalNullable.of(document);
        this.type = OptionalNullable.of(type);
        this.siteUrl = OptionalNullable.of(siteUrl);
        this.phoneNumbers = OptionalNullable.of(phoneNumbers);
        this.name = OptionalNullable.of(name);
        this.motherName = OptionalNullable.of(motherName);
        this.birthdate = OptionalNullable.of(birthdate);
        this.monthlyIncome = OptionalNullable.of(monthlyIncome);
        this.professionalOccupation = OptionalNullable.of(professionalOccupation);
        this.address = OptionalNullable.of(address);
        this.companyName = OptionalNullable.of(companyName);
        this.tradingName = OptionalNullable.of(tradingName);
        this.annualRevenue = OptionalNullable.of(annualRevenue);
        this.corporationType = OptionalNullable.of(corporationType);
        this.foundingDate = OptionalNullable.of(foundingDate);
        this.cnae = OptionalNullable.of(cnae);
        this.mainAddress = OptionalNullable.of(mainAddress);
        this.managingPartners = OptionalNullable.of(managingPartners);
    }

    /**
     * Initialization constructor.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  siteUrl  String value for siteUrl.
     * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
     * @param  name  String value for name.
     * @param  motherName  String value for motherName.
     * @param  birthdate  String value for birthdate.
     * @param  monthlyIncome  String value for monthlyIncome.
     * @param  professionalOccupation  String value for professionalOccupation.
     * @param  address  GetRegisterInformationAddressResponse value for address.
     * @param  companyName  String value for companyName.
     * @param  tradingName  String value for tradingName.
     * @param  annualRevenue  String value for annualRevenue.
     * @param  corporationType  String value for corporationType.
     * @param  foundingDate  String value for foundingDate.
     * @param  cnae  String value for cnae.
     * @param  mainAddress  GetRegisterInformationAddressResponse value for mainAddress.
     * @param  managingPartners  List of GetManagingPartnerResponse value for managingPartners.
     */

    protected GetRegisterInformationResponse(OptionalNullable<String> email,
            OptionalNullable<String> document, OptionalNullable<String> type,
            OptionalNullable<String> siteUrl,
            OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers,
            OptionalNullable<String> name, OptionalNullable<String> motherName,
            OptionalNullable<String> birthdate, OptionalNullable<String> monthlyIncome,
            OptionalNullable<String> professionalOccupation,
            OptionalNullable<GetRegisterInformationAddressResponse> address,
            OptionalNullable<String> companyName, OptionalNullable<String> tradingName,
            OptionalNullable<String> annualRevenue, OptionalNullable<String> corporationType,
            OptionalNullable<String> foundingDate, OptionalNullable<String> cnae,
            OptionalNullable<GetRegisterInformationAddressResponse> mainAddress,
            OptionalNullable<List<GetManagingPartnerResponse>> managingPartners) {
        this.email = email;
        this.document = document;
        this.type = type;
        this.siteUrl = siteUrl;
        this.phoneNumbers = phoneNumbers;
        this.name = name;
        this.motherName = motherName;
        this.birthdate = birthdate;
        this.monthlyIncome = monthlyIncome;
        this.professionalOccupation = professionalOccupation;
        this.address = address;
        this.companyName = companyName;
        this.tradingName = tradingName;
        this.annualRevenue = annualRevenue;
        this.corporationType = corporationType;
        this.foundingDate = foundingDate;
        this.cnae = cnae;
        this.mainAddress = mainAddress;
        this.managingPartners = managingPartners;
    }

    /**
     * Internal Getter for Email.
     * @return Returns the Internal String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmail() {
        return this.email;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    public String getEmail() {
        return OptionalNullable.getFrom(email);
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = OptionalNullable.of(email);
    }

    /**
     * UnSetter for Email.
     */
    public void unsetEmail() {
        email = null;
    }

    /**
     * Internal Getter for Document.
     * @return Returns the Internal String
     */
    @JsonGetter("document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocument() {
        return this.document;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    public String getDocument() {
        return OptionalNullable.getFrom(document);
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = OptionalNullable.of(document);
    }

    /**
     * UnSetter for Document.
     */
    public void unsetDocument() {
        document = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for SiteUrl.
     * @return Returns the Internal String
     */
    @JsonGetter("site_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteUrl() {
        return this.siteUrl;
    }

    /**
     * Getter for SiteUrl.
     * @return Returns the String
     */
    public String getSiteUrl() {
        return OptionalNullable.getFrom(siteUrl);
    }

    /**
     * Setter for SiteUrl.
     * @param siteUrl Value for String
     */
    @JsonSetter("site_url")
    public void setSiteUrl(String siteUrl) {
        this.siteUrl = OptionalNullable.of(siteUrl);
    }

    /**
     * UnSetter for SiteUrl.
     */
    public void unsetSiteUrl() {
        siteUrl = null;
    }

    /**
     * Internal Getter for PhoneNumbers.
     * @return Returns the Internal List of GetPhoneNumberResponse
     */
    @JsonGetter("phone_numbers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<GetPhoneNumberResponse>> internalGetPhoneNumbers() {
        return this.phoneNumbers;
    }

    /**
     * Getter for PhoneNumbers.
     * @return Returns the List of GetPhoneNumberResponse
     */
    public List<GetPhoneNumberResponse> getPhoneNumbers() {
        return OptionalNullable.getFrom(phoneNumbers);
    }

    /**
     * Setter for PhoneNumbers.
     * @param phoneNumbers Value for List of GetPhoneNumberResponse
     */
    @JsonSetter("phone_numbers")
    public void setPhoneNumbers(List<GetPhoneNumberResponse> phoneNumbers) {
        this.phoneNumbers = OptionalNullable.of(phoneNumbers);
    }

    /**
     * UnSetter for PhoneNumbers.
     */
    public void unsetPhoneNumbers() {
        phoneNumbers = null;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for MotherName.
     * @return Returns the Internal String
     */
    @JsonGetter("mother_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMotherName() {
        return this.motherName;
    }

    /**
     * Getter for MotherName.
     * @return Returns the String
     */
    public String getMotherName() {
        return OptionalNullable.getFrom(motherName);
    }

    /**
     * Setter for MotherName.
     * @param motherName Value for String
     */
    @JsonSetter("mother_name")
    public void setMotherName(String motherName) {
        this.motherName = OptionalNullable.of(motherName);
    }

    /**
     * UnSetter for MotherName.
     */
    public void unsetMotherName() {
        motherName = null;
    }

    /**
     * Internal Getter for Birthdate.
     * @return Returns the Internal String
     */
    @JsonGetter("birthdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBirthdate() {
        return this.birthdate;
    }

    /**
     * Getter for Birthdate.
     * @return Returns the String
     */
    public String getBirthdate() {
        return OptionalNullable.getFrom(birthdate);
    }

    /**
     * Setter for Birthdate.
     * @param birthdate Value for String
     */
    @JsonSetter("birthdate")
    public void setBirthdate(String birthdate) {
        this.birthdate = OptionalNullable.of(birthdate);
    }

    /**
     * UnSetter for Birthdate.
     */
    public void unsetBirthdate() {
        birthdate = null;
    }

    /**
     * Internal Getter for MonthlyIncome.
     * @return Returns the Internal String
     */
    @JsonGetter("monthly_income")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMonthlyIncome() {
        return this.monthlyIncome;
    }

    /**
     * Getter for MonthlyIncome.
     * @return Returns the String
     */
    public String getMonthlyIncome() {
        return OptionalNullable.getFrom(monthlyIncome);
    }

    /**
     * Setter for MonthlyIncome.
     * @param monthlyIncome Value for String
     */
    @JsonSetter("monthly_income")
    public void setMonthlyIncome(String monthlyIncome) {
        this.monthlyIncome = OptionalNullable.of(monthlyIncome);
    }

    /**
     * UnSetter for MonthlyIncome.
     */
    public void unsetMonthlyIncome() {
        monthlyIncome = null;
    }

    /**
     * Internal Getter for ProfessionalOccupation.
     * @return Returns the Internal String
     */
    @JsonGetter("professional_occupation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProfessionalOccupation() {
        return this.professionalOccupation;
    }

    /**
     * Getter for ProfessionalOccupation.
     * @return Returns the String
     */
    public String getProfessionalOccupation() {
        return OptionalNullable.getFrom(professionalOccupation);
    }

    /**
     * Setter for ProfessionalOccupation.
     * @param professionalOccupation Value for String
     */
    @JsonSetter("professional_occupation")
    public void setProfessionalOccupation(String professionalOccupation) {
        this.professionalOccupation = OptionalNullable.of(professionalOccupation);
    }

    /**
     * UnSetter for ProfessionalOccupation.
     */
    public void unsetProfessionalOccupation() {
        professionalOccupation = null;
    }

    /**
     * Internal Getter for Address.
     * @return Returns the Internal GetRegisterInformationAddressResponse
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetRegisterInformationAddressResponse> internalGetAddress() {
        return this.address;
    }

    /**
     * Getter for Address.
     * @return Returns the GetRegisterInformationAddressResponse
     */
    public GetRegisterInformationAddressResponse getAddress() {
        return OptionalNullable.getFrom(address);
    }

    /**
     * Setter for Address.
     * @param address Value for GetRegisterInformationAddressResponse
     */
    @JsonSetter("address")
    public void setAddress(GetRegisterInformationAddressResponse address) {
        this.address = OptionalNullable.of(address);
    }

    /**
     * UnSetter for Address.
     */
    public void unsetAddress() {
        address = null;
    }

    /**
     * Internal Getter for CompanyName.
     * @return Returns the Internal String
     */
    @JsonGetter("company_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCompanyName() {
        return this.companyName;
    }

    /**
     * Getter for CompanyName.
     * @return Returns the String
     */
    public String getCompanyName() {
        return OptionalNullable.getFrom(companyName);
    }

    /**
     * Setter for CompanyName.
     * @param companyName Value for String
     */
    @JsonSetter("company_name")
    public void setCompanyName(String companyName) {
        this.companyName = OptionalNullable.of(companyName);
    }

    /**
     * UnSetter for CompanyName.
     */
    public void unsetCompanyName() {
        companyName = null;
    }

    /**
     * Internal Getter for TradingName.
     * @return Returns the Internal String
     */
    @JsonGetter("trading_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTradingName() {
        return this.tradingName;
    }

    /**
     * Getter for TradingName.
     * @return Returns the String
     */
    public String getTradingName() {
        return OptionalNullable.getFrom(tradingName);
    }

    /**
     * Setter for TradingName.
     * @param tradingName Value for String
     */
    @JsonSetter("trading_name")
    public void setTradingName(String tradingName) {
        this.tradingName = OptionalNullable.of(tradingName);
    }

    /**
     * UnSetter for TradingName.
     */
    public void unsetTradingName() {
        tradingName = null;
    }

    /**
     * Internal Getter for AnnualRevenue.
     * @return Returns the Internal String
     */
    @JsonGetter("annual_revenue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAnnualRevenue() {
        return this.annualRevenue;
    }

    /**
     * Getter for AnnualRevenue.
     * @return Returns the String
     */
    public String getAnnualRevenue() {
        return OptionalNullable.getFrom(annualRevenue);
    }

    /**
     * Setter for AnnualRevenue.
     * @param annualRevenue Value for String
     */
    @JsonSetter("annual_revenue")
    public void setAnnualRevenue(String annualRevenue) {
        this.annualRevenue = OptionalNullable.of(annualRevenue);
    }

    /**
     * UnSetter for AnnualRevenue.
     */
    public void unsetAnnualRevenue() {
        annualRevenue = null;
    }

    /**
     * Internal Getter for CorporationType.
     * @return Returns the Internal String
     */
    @JsonGetter("corporation_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCorporationType() {
        return this.corporationType;
    }

    /**
     * Getter for CorporationType.
     * @return Returns the String
     */
    public String getCorporationType() {
        return OptionalNullable.getFrom(corporationType);
    }

    /**
     * Setter for CorporationType.
     * @param corporationType Value for String
     */
    @JsonSetter("corporation_type")
    public void setCorporationType(String corporationType) {
        this.corporationType = OptionalNullable.of(corporationType);
    }

    /**
     * UnSetter for CorporationType.
     */
    public void unsetCorporationType() {
        corporationType = null;
    }

    /**
     * Internal Getter for FoundingDate.
     * @return Returns the Internal String
     */
    @JsonGetter("founding_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFoundingDate() {
        return this.foundingDate;
    }

    /**
     * Getter for FoundingDate.
     * @return Returns the String
     */
    public String getFoundingDate() {
        return OptionalNullable.getFrom(foundingDate);
    }

    /**
     * Setter for FoundingDate.
     * @param foundingDate Value for String
     */
    @JsonSetter("founding_date")
    public void setFoundingDate(String foundingDate) {
        this.foundingDate = OptionalNullable.of(foundingDate);
    }

    /**
     * UnSetter for FoundingDate.
     */
    public void unsetFoundingDate() {
        foundingDate = null;
    }

    /**
     * Internal Getter for Cnae.
     * @return Returns the Internal String
     */
    @JsonGetter("cnae")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCnae() {
        return this.cnae;
    }

    /**
     * Getter for Cnae.
     * @return Returns the String
     */
    public String getCnae() {
        return OptionalNullable.getFrom(cnae);
    }

    /**
     * Setter for Cnae.
     * @param cnae Value for String
     */
    @JsonSetter("cnae")
    public void setCnae(String cnae) {
        this.cnae = OptionalNullable.of(cnae);
    }

    /**
     * UnSetter for Cnae.
     */
    public void unsetCnae() {
        cnae = null;
    }

    /**
     * Internal Getter for MainAddress.
     * @return Returns the Internal GetRegisterInformationAddressResponse
     */
    @JsonGetter("main_address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetRegisterInformationAddressResponse> internalGetMainAddress() {
        return this.mainAddress;
    }

    /**
     * Getter for MainAddress.
     * @return Returns the GetRegisterInformationAddressResponse
     */
    public GetRegisterInformationAddressResponse getMainAddress() {
        return OptionalNullable.getFrom(mainAddress);
    }

    /**
     * Setter for MainAddress.
     * @param mainAddress Value for GetRegisterInformationAddressResponse
     */
    @JsonSetter("main_address")
    public void setMainAddress(GetRegisterInformationAddressResponse mainAddress) {
        this.mainAddress = OptionalNullable.of(mainAddress);
    }

    /**
     * UnSetter for MainAddress.
     */
    public void unsetMainAddress() {
        mainAddress = null;
    }

    /**
     * Internal Getter for ManagingPartners.
     * @return Returns the Internal List of GetManagingPartnerResponse
     */
    @JsonGetter("managing_partners")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<GetManagingPartnerResponse>> internalGetManagingPartners() {
        return this.managingPartners;
    }

    /**
     * Getter for ManagingPartners.
     * @return Returns the List of GetManagingPartnerResponse
     */
    public List<GetManagingPartnerResponse> getManagingPartners() {
        return OptionalNullable.getFrom(managingPartners);
    }

    /**
     * Setter for ManagingPartners.
     * @param managingPartners Value for List of GetManagingPartnerResponse
     */
    @JsonSetter("managing_partners")
    public void setManagingPartners(List<GetManagingPartnerResponse> managingPartners) {
        this.managingPartners = OptionalNullable.of(managingPartners);
    }

    /**
     * UnSetter for ManagingPartners.
     */
    public void unsetManagingPartners() {
        managingPartners = null;
    }

    /**
     * Converts this GetRegisterInformationResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetRegisterInformationResponse [" + "email=" + email + ", document=" + document
                + ", type=" + type + ", siteUrl=" + siteUrl + ", phoneNumbers=" + phoneNumbers
                + ", name=" + name + ", motherName=" + motherName + ", birthdate=" + birthdate
                + ", monthlyIncome=" + monthlyIncome + ", professionalOccupation="
                + professionalOccupation + ", address=" + address + ", companyName=" + companyName
                + ", tradingName=" + tradingName + ", annualRevenue=" + annualRevenue
                + ", corporationType=" + corporationType + ", foundingDate=" + foundingDate
                + ", cnae=" + cnae + ", mainAddress=" + mainAddress + ", managingPartners="
                + managingPartners + "]";
    }

    /**
     * Builds a new {@link GetRegisterInformationResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetRegisterInformationResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.email = internalGetEmail();
        builder.document = internalGetDocument();
        builder.type = internalGetType();
        builder.siteUrl = internalGetSiteUrl();
        builder.phoneNumbers = internalGetPhoneNumbers();
        builder.name = internalGetName();
        builder.motherName = internalGetMotherName();
        builder.birthdate = internalGetBirthdate();
        builder.monthlyIncome = internalGetMonthlyIncome();
        builder.professionalOccupation = internalGetProfessionalOccupation();
        builder.address = internalGetAddress();
        builder.companyName = internalGetCompanyName();
        builder.tradingName = internalGetTradingName();
        builder.annualRevenue = internalGetAnnualRevenue();
        builder.corporationType = internalGetCorporationType();
        builder.foundingDate = internalGetFoundingDate();
        builder.cnae = internalGetCnae();
        builder.mainAddress = internalGetMainAddress();
        builder.managingPartners = internalGetManagingPartners();
        return builder;
    }

    /**
     * Class to build instances of {@link GetRegisterInformationResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> email;
        private OptionalNullable<String> document;
        private OptionalNullable<String> type;
        private OptionalNullable<String> siteUrl;
        private OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers;
        private OptionalNullable<String> name;
        private OptionalNullable<String> motherName;
        private OptionalNullable<String> birthdate;
        private OptionalNullable<String> monthlyIncome;
        private OptionalNullable<String> professionalOccupation;
        private OptionalNullable<GetRegisterInformationAddressResponse> address;
        private OptionalNullable<String> companyName;
        private OptionalNullable<String> tradingName;
        private OptionalNullable<String> annualRevenue;
        private OptionalNullable<String> corporationType;
        private OptionalNullable<String> foundingDate;
        private OptionalNullable<String> cnae;
        private OptionalNullable<GetRegisterInformationAddressResponse> mainAddress;
        private OptionalNullable<List<GetManagingPartnerResponse>> managingPartners;



        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = OptionalNullable.of(email);
            return this;
        }

        /**
         * UnSetter for email.
         * @return Builder
         */
        public Builder unsetEmail() {
            email = null;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = OptionalNullable.of(document);
            return this;
        }

        /**
         * UnSetter for document.
         * @return Builder
         */
        public Builder unsetDocument() {
            document = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for siteUrl.
         * @param  siteUrl  String value for siteUrl.
         * @return Builder
         */
        public Builder siteUrl(String siteUrl) {
            this.siteUrl = OptionalNullable.of(siteUrl);
            return this;
        }

        /**
         * UnSetter for siteUrl.
         * @return Builder
         */
        public Builder unsetSiteUrl() {
            siteUrl = null;
            return this;
        }

        /**
         * Setter for phoneNumbers.
         * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
         * @return Builder
         */
        public Builder phoneNumbers(List<GetPhoneNumberResponse> phoneNumbers) {
            this.phoneNumbers = OptionalNullable.of(phoneNumbers);
            return this;
        }

        /**
         * UnSetter for phoneNumbers.
         * @return Builder
         */
        public Builder unsetPhoneNumbers() {
            phoneNumbers = null;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for motherName.
         * @param  motherName  String value for motherName.
         * @return Builder
         */
        public Builder motherName(String motherName) {
            this.motherName = OptionalNullable.of(motherName);
            return this;
        }

        /**
         * UnSetter for motherName.
         * @return Builder
         */
        public Builder unsetMotherName() {
            motherName = null;
            return this;
        }

        /**
         * Setter for birthdate.
         * @param  birthdate  String value for birthdate.
         * @return Builder
         */
        public Builder birthdate(String birthdate) {
            this.birthdate = OptionalNullable.of(birthdate);
            return this;
        }

        /**
         * UnSetter for birthdate.
         * @return Builder
         */
        public Builder unsetBirthdate() {
            birthdate = null;
            return this;
        }

        /**
         * Setter for monthlyIncome.
         * @param  monthlyIncome  String value for monthlyIncome.
         * @return Builder
         */
        public Builder monthlyIncome(String monthlyIncome) {
            this.monthlyIncome = OptionalNullable.of(monthlyIncome);
            return this;
        }

        /**
         * UnSetter for monthlyIncome.
         * @return Builder
         */
        public Builder unsetMonthlyIncome() {
            monthlyIncome = null;
            return this;
        }

        /**
         * Setter for professionalOccupation.
         * @param  professionalOccupation  String value for professionalOccupation.
         * @return Builder
         */
        public Builder professionalOccupation(String professionalOccupation) {
            this.professionalOccupation = OptionalNullable.of(professionalOccupation);
            return this;
        }

        /**
         * UnSetter for professionalOccupation.
         * @return Builder
         */
        public Builder unsetProfessionalOccupation() {
            professionalOccupation = null;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  GetRegisterInformationAddressResponse value for address.
         * @return Builder
         */
        public Builder address(GetRegisterInformationAddressResponse address) {
            this.address = OptionalNullable.of(address);
            return this;
        }

        /**
         * UnSetter for address.
         * @return Builder
         */
        public Builder unsetAddress() {
            address = null;
            return this;
        }

        /**
         * Setter for companyName.
         * @param  companyName  String value for companyName.
         * @return Builder
         */
        public Builder companyName(String companyName) {
            this.companyName = OptionalNullable.of(companyName);
            return this;
        }

        /**
         * UnSetter for companyName.
         * @return Builder
         */
        public Builder unsetCompanyName() {
            companyName = null;
            return this;
        }

        /**
         * Setter for tradingName.
         * @param  tradingName  String value for tradingName.
         * @return Builder
         */
        public Builder tradingName(String tradingName) {
            this.tradingName = OptionalNullable.of(tradingName);
            return this;
        }

        /**
         * UnSetter for tradingName.
         * @return Builder
         */
        public Builder unsetTradingName() {
            tradingName = null;
            return this;
        }

        /**
         * Setter for annualRevenue.
         * @param  annualRevenue  String value for annualRevenue.
         * @return Builder
         */
        public Builder annualRevenue(String annualRevenue) {
            this.annualRevenue = OptionalNullable.of(annualRevenue);
            return this;
        }

        /**
         * UnSetter for annualRevenue.
         * @return Builder
         */
        public Builder unsetAnnualRevenue() {
            annualRevenue = null;
            return this;
        }

        /**
         * Setter for corporationType.
         * @param  corporationType  String value for corporationType.
         * @return Builder
         */
        public Builder corporationType(String corporationType) {
            this.corporationType = OptionalNullable.of(corporationType);
            return this;
        }

        /**
         * UnSetter for corporationType.
         * @return Builder
         */
        public Builder unsetCorporationType() {
            corporationType = null;
            return this;
        }

        /**
         * Setter for foundingDate.
         * @param  foundingDate  String value for foundingDate.
         * @return Builder
         */
        public Builder foundingDate(String foundingDate) {
            this.foundingDate = OptionalNullable.of(foundingDate);
            return this;
        }

        /**
         * UnSetter for foundingDate.
         * @return Builder
         */
        public Builder unsetFoundingDate() {
            foundingDate = null;
            return this;
        }

        /**
         * Setter for cnae.
         * @param  cnae  String value for cnae.
         * @return Builder
         */
        public Builder cnae(String cnae) {
            this.cnae = OptionalNullable.of(cnae);
            return this;
        }

        /**
         * UnSetter for cnae.
         * @return Builder
         */
        public Builder unsetCnae() {
            cnae = null;
            return this;
        }

        /**
         * Setter for mainAddress.
         * @param  mainAddress  GetRegisterInformationAddressResponse value for mainAddress.
         * @return Builder
         */
        public Builder mainAddress(GetRegisterInformationAddressResponse mainAddress) {
            this.mainAddress = OptionalNullable.of(mainAddress);
            return this;
        }

        /**
         * UnSetter for mainAddress.
         * @return Builder
         */
        public Builder unsetMainAddress() {
            mainAddress = null;
            return this;
        }

        /**
         * Setter for managingPartners.
         * @param  managingPartners  List of GetManagingPartnerResponse value for managingPartners.
         * @return Builder
         */
        public Builder managingPartners(List<GetManagingPartnerResponse> managingPartners) {
            this.managingPartners = OptionalNullable.of(managingPartners);
            return this;
        }

        /**
         * UnSetter for managingPartners.
         * @return Builder
         */
        public Builder unsetManagingPartners() {
            managingPartners = null;
            return this;
        }

        /**
         * Builds a new {@link GetRegisterInformationResponse} object using the set fields.
         * @return {@link GetRegisterInformationResponse}
         */
        public GetRegisterInformationResponse build() {
            return new GetRegisterInformationResponse(email, document, type, siteUrl, phoneNumbers,
                    name, motherName, birthdate, monthlyIncome, professionalOccupation, address,
                    companyName, tradingName, annualRevenue, corporationType, foundingDate, cnae,
                    mainAddress, managingPartners);
        }
    }
}
