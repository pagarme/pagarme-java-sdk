/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetPhoneResponse type.
 */
public class GetPhoneResponse {
    private OptionalNullable<String> countryCode;
    private OptionalNullable<String> number;
    private OptionalNullable<String> areaCode;

    /**
     * Default constructor.
     */
    public GetPhoneResponse() {
    }

    /**
     * Initialization constructor.
     * @param  countryCode  String value for countryCode.
     * @param  number  String value for number.
     * @param  areaCode  String value for areaCode.
     */
    public GetPhoneResponse(
            String countryCode,
            String number,
            String areaCode) {
        this.countryCode = OptionalNullable.of(countryCode);
        this.number = OptionalNullable.of(number);
        this.areaCode = OptionalNullable.of(areaCode);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetPhoneResponse(OptionalNullable<String> countryCode,
            OptionalNullable<String> number, OptionalNullable<String> areaCode) {
        this.countryCode = countryCode;
        this.number = number;
        this.areaCode = areaCode;
    }

    /**
     * Internal Getter for CountryCode.
     * @return Returns the Internal String
     */
    @JsonGetter("country_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCountryCode() {
        return this.countryCode;
    }

    /**
     * Getter for CountryCode.
     * @return Returns the String
     */
    public String getCountryCode() {
        return OptionalNullable.getFrom(countryCode);
    }

    /**
     * Setter for CountryCode.
     * @param countryCode Value for String
     */
    @JsonSetter("country_code")
    public void setCountryCode(String countryCode) {
        this.countryCode = OptionalNullable.of(countryCode);
    }

    /**
     * UnSetter for CountryCode.
     */
    public void unsetCountryCode() {
        countryCode = null;
    }

    /**
     * Internal Getter for Number.
     * @return Returns the Internal String
     */
    @JsonGetter("number")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetNumber() {
        return this.number;
    }

    /**
     * Getter for Number.
     * @return Returns the String
     */
    public String getNumber() {
        return OptionalNullable.getFrom(number);
    }

    /**
     * Setter for Number.
     * @param number Value for String
     */
    @JsonSetter("number")
    public void setNumber(String number) {
        this.number = OptionalNullable.of(number);
    }

    /**
     * UnSetter for Number.
     */
    public void unsetNumber() {
        number = null;
    }

    /**
     * Internal Getter for AreaCode.
     * @return Returns the Internal String
     */
    @JsonGetter("area_code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAreaCode() {
        return this.areaCode;
    }

    /**
     * Getter for AreaCode.
     * @return Returns the String
     */
    public String getAreaCode() {
        return OptionalNullable.getFrom(areaCode);
    }

    /**
     * Setter for AreaCode.
     * @param areaCode Value for String
     */
    @JsonSetter("area_code")
    public void setAreaCode(String areaCode) {
        this.areaCode = OptionalNullable.of(areaCode);
    }

    /**
     * UnSetter for AreaCode.
     */
    public void unsetAreaCode() {
        areaCode = null;
    }

    /**
     * Converts this GetPhoneResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetPhoneResponse [" + "countryCode=" + countryCode + ", number=" + number
                + ", areaCode=" + areaCode + "]";
    }

    /**
     * Builds a new {@link GetPhoneResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetPhoneResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.countryCode = internalGetCountryCode();
        builder.number = internalGetNumber();
        builder.areaCode = internalGetAreaCode();
        return builder;
    }

    /**
     * Class to build instances of {@link GetPhoneResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> countryCode;
        private OptionalNullable<String> number;
        private OptionalNullable<String> areaCode;



        /**
         * Setter for countryCode.
         * @param  countryCode  String value for countryCode.
         * @return Builder
         */
        public Builder countryCode(String countryCode) {
            this.countryCode = OptionalNullable.of(countryCode);
            return this;
        }

        /**
         * UnSetter for countryCode.
         * @return Builder
         */
        public Builder unsetCountryCode() {
            countryCode = null;
            return this;
        }

        /**
         * Setter for number.
         * @param  number  String value for number.
         * @return Builder
         */
        public Builder number(String number) {
            this.number = OptionalNullable.of(number);
            return this;
        }

        /**
         * UnSetter for number.
         * @return Builder
         */
        public Builder unsetNumber() {
            number = null;
            return this;
        }

        /**
         * Setter for areaCode.
         * @param  areaCode  String value for areaCode.
         * @return Builder
         */
        public Builder areaCode(String areaCode) {
            this.areaCode = OptionalNullable.of(areaCode);
            return this;
        }

        /**
         * UnSetter for areaCode.
         * @return Builder
         */
        public Builder unsetAreaCode() {
            areaCode = null;
            return this;
        }

        /**
         * Builds a new {@link GetPhoneResponse} object using the set fields.
         * @return {@link GetPhoneResponse}
         */
        public GetPhoneResponse build() {
            return new GetPhoneResponse(countryCode, number, areaCode);
        }
    }
}
