/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetCustomerResponse type.
 */
public class GetCustomerResponse {
    private OptionalNullable<String> id;
    private OptionalNullable<String> name;
    private OptionalNullable<String> email;
    private OptionalNullable<Boolean> delinquent;
    private OptionalNullable<LocalDateTime> createdAt;
    private OptionalNullable<LocalDateTime> updatedAt;
    private OptionalNullable<String> document;
    private OptionalNullable<String> type;
    private OptionalNullable<String> fbAccessToken;
    private OptionalNullable<GetAddressResponse> address;
    private OptionalNullable<Map<String, String>> metadata;
    private OptionalNullable<GetPhonesResponse> phones;
    private OptionalNullable<Long> fbId;
    private OptionalNullable<String> code;
    private OptionalNullable<String> documentType;

    /**
     * Default constructor.
     */
    public GetCustomerResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  name  String value for name.
     * @param  email  String value for email.
     * @param  delinquent  Boolean value for delinquent.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  updatedAt  LocalDateTime value for updatedAt.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  fbAccessToken  String value for fbAccessToken.
     * @param  address  GetAddressResponse value for address.
     * @param  metadata  Map of String, value for metadata.
     * @param  phones  GetPhonesResponse value for phones.
     * @param  fbId  Long value for fbId.
     * @param  code  String value for code.
     * @param  documentType  String value for documentType.
     */
    public GetCustomerResponse(
            String id,
            String name,
            String email,
            Boolean delinquent,
            LocalDateTime createdAt,
            LocalDateTime updatedAt,
            String document,
            String type,
            String fbAccessToken,
            GetAddressResponse address,
            Map<String, String> metadata,
            GetPhonesResponse phones,
            Long fbId,
            String code,
            String documentType) {
        this.id = OptionalNullable.of(id);
        this.name = OptionalNullable.of(name);
        this.email = OptionalNullable.of(email);
        this.delinquent = OptionalNullable.of(delinquent);
        this.createdAt = OptionalNullable.of(createdAt);
        this.updatedAt = OptionalNullable.of(updatedAt);
        this.document = OptionalNullable.of(document);
        this.type = OptionalNullable.of(type);
        this.fbAccessToken = OptionalNullable.of(fbAccessToken);
        this.address = OptionalNullable.of(address);
        this.metadata = OptionalNullable.of(metadata);
        this.phones = OptionalNullable.of(phones);
        this.fbId = OptionalNullable.of(fbId);
        this.code = OptionalNullable.of(code);
        this.documentType = OptionalNullable.of(documentType);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetCustomerResponse(OptionalNullable<String> id, OptionalNullable<String> name,
            OptionalNullable<String> email, OptionalNullable<Boolean> delinquent,
            OptionalNullable<LocalDateTime> createdAt, OptionalNullable<LocalDateTime> updatedAt,
            OptionalNullable<String> document, OptionalNullable<String> type,
            OptionalNullable<String> fbAccessToken, OptionalNullable<GetAddressResponse> address,
            OptionalNullable<Map<String, String>> metadata,
            OptionalNullable<GetPhonesResponse> phones, OptionalNullable<Long> fbId,
            OptionalNullable<String> code, OptionalNullable<String> documentType) {
        this.id = id;
        this.name = name;
        this.email = email;
        this.delinquent = delinquent;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.document = document;
        this.type = type;
        this.fbAccessToken = fbAccessToken;
        this.address = address;
        this.metadata = metadata;
        this.phones = phones;
        this.fbId = fbId;
        this.code = code;
        this.documentType = documentType;
    }

    /**
     * Internal Getter for Id.
     * @return Returns the Internal String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    public String getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for Email.
     * @return Returns the Internal String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmail() {
        return this.email;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    public String getEmail() {
        return OptionalNullable.getFrom(email);
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = OptionalNullable.of(email);
    }

    /**
     * UnSetter for Email.
     */
    public void unsetEmail() {
        email = null;
    }

    /**
     * Internal Getter for Delinquent.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("delinquent")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetDelinquent() {
        return this.delinquent;
    }

    /**
     * Getter for Delinquent.
     * @return Returns the Boolean
     */
    public Boolean getDelinquent() {
        return OptionalNullable.getFrom(delinquent);
    }

    /**
     * Setter for Delinquent.
     * @param delinquent Value for Boolean
     */
    @JsonSetter("delinquent")
    public void setDelinquent(Boolean delinquent) {
        this.delinquent = OptionalNullable.of(delinquent);
    }

    /**
     * UnSetter for Delinquent.
     */
    public void unsetDelinquent() {
        delinquent = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for UpdatedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("updated_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetUpdatedAt() {
        return this.updatedAt;
    }

    /**
     * Getter for UpdatedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getUpdatedAt() {
        return OptionalNullable.getFrom(updatedAt);
    }

    /**
     * Setter for UpdatedAt.
     * @param updatedAt Value for LocalDateTime
     */
    @JsonSetter("updated_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = OptionalNullable.of(updatedAt);
    }

    /**
     * UnSetter for UpdatedAt.
     */
    public void unsetUpdatedAt() {
        updatedAt = null;
    }

    /**
     * Internal Getter for Document.
     * @return Returns the Internal String
     */
    @JsonGetter("document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocument() {
        return this.document;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    public String getDocument() {
        return OptionalNullable.getFrom(document);
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = OptionalNullable.of(document);
    }

    /**
     * UnSetter for Document.
     */
    public void unsetDocument() {
        document = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for FbAccessToken.
     * @return Returns the Internal String
     */
    @JsonGetter("fb_access_token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetFbAccessToken() {
        return this.fbAccessToken;
    }

    /**
     * Getter for FbAccessToken.
     * @return Returns the String
     */
    public String getFbAccessToken() {
        return OptionalNullable.getFrom(fbAccessToken);
    }

    /**
     * Setter for FbAccessToken.
     * @param fbAccessToken Value for String
     */
    @JsonSetter("fb_access_token")
    public void setFbAccessToken(String fbAccessToken) {
        this.fbAccessToken = OptionalNullable.of(fbAccessToken);
    }

    /**
     * UnSetter for FbAccessToken.
     */
    public void unsetFbAccessToken() {
        fbAccessToken = null;
    }

    /**
     * Internal Getter for Address.
     * @return Returns the Internal GetAddressResponse
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetAddressResponse> internalGetAddress() {
        return this.address;
    }

    /**
     * Getter for Address.
     * @return Returns the GetAddressResponse
     */
    public GetAddressResponse getAddress() {
        return OptionalNullable.getFrom(address);
    }

    /**
     * Setter for Address.
     * @param address Value for GetAddressResponse
     */
    @JsonSetter("address")
    public void setAddress(GetAddressResponse address) {
        this.address = OptionalNullable.of(address);
    }

    /**
     * UnSetter for Address.
     */
    public void unsetAddress() {
        address = null;
    }

    /**
     * Internal Getter for Metadata.
     * @return Returns the Internal Map of String, String
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Map<String, String>> internalGetMetadata() {
        return this.metadata;
    }

    /**
     * Getter for Metadata.
     * @return Returns the Map of String, String
     */
    public Map<String, String> getMetadata() {
        return OptionalNullable.getFrom(metadata);
    }

    /**
     * Setter for Metadata.
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = OptionalNullable.of(metadata);
    }

    /**
     * UnSetter for Metadata.
     */
    public void unsetMetadata() {
        metadata = null;
    }

    /**
     * Internal Getter for Phones.
     * @return Returns the Internal GetPhonesResponse
     */
    @JsonGetter("phones")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetPhonesResponse> internalGetPhones() {
        return this.phones;
    }

    /**
     * Getter for Phones.
     * @return Returns the GetPhonesResponse
     */
    public GetPhonesResponse getPhones() {
        return OptionalNullable.getFrom(phones);
    }

    /**
     * Setter for Phones.
     * @param phones Value for GetPhonesResponse
     */
    @JsonSetter("phones")
    public void setPhones(GetPhonesResponse phones) {
        this.phones = OptionalNullable.of(phones);
    }

    /**
     * UnSetter for Phones.
     */
    public void unsetPhones() {
        phones = null;
    }

    /**
     * Internal Getter for FbId.
     * @return Returns the Internal Long
     */
    @JsonGetter("fb_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Long> internalGetFbId() {
        return this.fbId;
    }

    /**
     * Getter for FbId.
     * @return Returns the Long
     */
    public Long getFbId() {
        return OptionalNullable.getFrom(fbId);
    }

    /**
     * Setter for FbId.
     * @param fbId Value for Long
     */
    @JsonSetter("fb_id")
    public void setFbId(Long fbId) {
        this.fbId = OptionalNullable.of(fbId);
    }

    /**
     * UnSetter for FbId.
     */
    public void unsetFbId() {
        fbId = null;
    }

    /**
     * Internal Getter for Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     * @return Returns the Internal String
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCode() {
        return this.code;
    }

    /**
     * Getter for Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     * @return Returns the String
     */
    public String getCode() {
        return OptionalNullable.getFrom(code);
    }

    /**
     * Setter for Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = OptionalNullable.of(code);
    }

    /**
     * UnSetter for Code.
     * Código de referência do cliente no sistema da loja. Max: 52 caracteres
     */
    public void unsetCode() {
        code = null;
    }

    /**
     * Internal Getter for DocumentType.
     * @return Returns the Internal String
     */
    @JsonGetter("document_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocumentType() {
        return this.documentType;
    }

    /**
     * Getter for DocumentType.
     * @return Returns the String
     */
    public String getDocumentType() {
        return OptionalNullable.getFrom(documentType);
    }

    /**
     * Setter for DocumentType.
     * @param documentType Value for String
     */
    @JsonSetter("document_type")
    public void setDocumentType(String documentType) {
        this.documentType = OptionalNullable.of(documentType);
    }

    /**
     * UnSetter for DocumentType.
     */
    public void unsetDocumentType() {
        documentType = null;
    }

    /**
     * Converts this GetCustomerResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetCustomerResponse [" + "id=" + id + ", name=" + name + ", email=" + email
                + ", delinquent=" + delinquent + ", createdAt=" + createdAt + ", updatedAt="
                + updatedAt + ", document=" + document + ", type=" + type + ", fbAccessToken="
                + fbAccessToken + ", address=" + address + ", metadata=" + metadata + ", phones="
                + phones + ", fbId=" + fbId + ", code=" + code + ", documentType=" + documentType
                + "]";
    }

    /**
     * Builds a new {@link GetCustomerResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetCustomerResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.id = internalGetId();
        builder.name = internalGetName();
        builder.email = internalGetEmail();
        builder.delinquent = internalGetDelinquent();
        builder.createdAt = internalGetCreatedAt();
        builder.updatedAt = internalGetUpdatedAt();
        builder.document = internalGetDocument();
        builder.type = internalGetType();
        builder.fbAccessToken = internalGetFbAccessToken();
        builder.address = internalGetAddress();
        builder.metadata = internalGetMetadata();
        builder.phones = internalGetPhones();
        builder.fbId = internalGetFbId();
        builder.code = internalGetCode();
        builder.documentType = internalGetDocumentType();
        return builder;
    }

    /**
     * Class to build instances of {@link GetCustomerResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> id;
        private OptionalNullable<String> name;
        private OptionalNullable<String> email;
        private OptionalNullable<Boolean> delinquent;
        private OptionalNullable<LocalDateTime> createdAt;
        private OptionalNullable<LocalDateTime> updatedAt;
        private OptionalNullable<String> document;
        private OptionalNullable<String> type;
        private OptionalNullable<String> fbAccessToken;
        private OptionalNullable<GetAddressResponse> address;
        private OptionalNullable<Map<String, String>> metadata;
        private OptionalNullable<GetPhonesResponse> phones;
        private OptionalNullable<Long> fbId;
        private OptionalNullable<String> code;
        private OptionalNullable<String> documentType;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = OptionalNullable.of(email);
            return this;
        }

        /**
         * UnSetter for email.
         * @return Builder
         */
        public Builder unsetEmail() {
            email = null;
            return this;
        }

        /**
         * Setter for delinquent.
         * @param  delinquent  Boolean value for delinquent.
         * @return Builder
         */
        public Builder delinquent(Boolean delinquent) {
            this.delinquent = OptionalNullable.of(delinquent);
            return this;
        }

        /**
         * UnSetter for delinquent.
         * @return Builder
         */
        public Builder unsetDelinquent() {
            delinquent = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  LocalDateTime value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(LocalDateTime updatedAt) {
            this.updatedAt = OptionalNullable.of(updatedAt);
            return this;
        }

        /**
         * UnSetter for updatedAt.
         * @return Builder
         */
        public Builder unsetUpdatedAt() {
            updatedAt = null;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = OptionalNullable.of(document);
            return this;
        }

        /**
         * UnSetter for document.
         * @return Builder
         */
        public Builder unsetDocument() {
            document = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for fbAccessToken.
         * @param  fbAccessToken  String value for fbAccessToken.
         * @return Builder
         */
        public Builder fbAccessToken(String fbAccessToken) {
            this.fbAccessToken = OptionalNullable.of(fbAccessToken);
            return this;
        }

        /**
         * UnSetter for fbAccessToken.
         * @return Builder
         */
        public Builder unsetFbAccessToken() {
            fbAccessToken = null;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  GetAddressResponse value for address.
         * @return Builder
         */
        public Builder address(GetAddressResponse address) {
            this.address = OptionalNullable.of(address);
            return this;
        }

        /**
         * UnSetter for address.
         * @return Builder
         */
        public Builder unsetAddress() {
            address = null;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = OptionalNullable.of(metadata);
            return this;
        }

        /**
         * UnSetter for metadata.
         * @return Builder
         */
        public Builder unsetMetadata() {
            metadata = null;
            return this;
        }

        /**
         * Setter for phones.
         * @param  phones  GetPhonesResponse value for phones.
         * @return Builder
         */
        public Builder phones(GetPhonesResponse phones) {
            this.phones = OptionalNullable.of(phones);
            return this;
        }

        /**
         * UnSetter for phones.
         * @return Builder
         */
        public Builder unsetPhones() {
            phones = null;
            return this;
        }

        /**
         * Setter for fbId.
         * @param  fbId  Long value for fbId.
         * @return Builder
         */
        public Builder fbId(Long fbId) {
            this.fbId = OptionalNullable.of(fbId);
            return this;
        }

        /**
         * UnSetter for fbId.
         * @return Builder
         */
        public Builder unsetFbId() {
            fbId = null;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = OptionalNullable.of(code);
            return this;
        }

        /**
         * UnSetter for code.
         * @return Builder
         */
        public Builder unsetCode() {
            code = null;
            return this;
        }

        /**
         * Setter for documentType.
         * @param  documentType  String value for documentType.
         * @return Builder
         */
        public Builder documentType(String documentType) {
            this.documentType = OptionalNullable.of(documentType);
            return this;
        }

        /**
         * UnSetter for documentType.
         * @return Builder
         */
        public Builder unsetDocumentType() {
            documentType = null;
            return this;
        }

        /**
         * Builds a new {@link GetCustomerResponse} object using the set fields.
         * @return {@link GetCustomerResponse}
         */
        public GetCustomerResponse build() {
            return new GetCustomerResponse(id, name, email, delinquent, createdAt, updatedAt,
                    document, type, fbAccessToken, address, metadata, phones, fbId, code,
                    documentType);
        }
    }
}
