/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for CreateRegisterInformationBaseRequest type.
 */
public class CreateRegisterInformationBaseRequest {
    private String email;
    private String document;
    private String type;
    private OptionalNullable<String> siteUrl;
    private List<CreateRegisterInformationPhoneRequest> phoneNumbers;

    /**
     * Default constructor.
     */
    public CreateRegisterInformationBaseRequest() {
    }

    /**
     * Initialization constructor.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  phoneNumbers  List of CreateRegisterInformationPhoneRequest value for phoneNumbers.
     * @param  siteUrl  String value for siteUrl.
     */
    public CreateRegisterInformationBaseRequest(
            String email,
            String document,
            String type,
            List<CreateRegisterInformationPhoneRequest> phoneNumbers,
            String siteUrl) {
        this.email = email;
        this.document = document;
        this.type = type;
        this.siteUrl = OptionalNullable.of(siteUrl);
        this.phoneNumbers = phoneNumbers;
    }

    /**
     * Initialization constructor.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  phoneNumbers  List of CreateRegisterInformationPhoneRequest value for phoneNumbers.
     * @param  siteUrl  String value for siteUrl.
     */

    protected CreateRegisterInformationBaseRequest(String email, String document, String type,
            List<CreateRegisterInformationPhoneRequest> phoneNumbers,
            OptionalNullable<String> siteUrl) {
        this.email = email;
        this.document = document;
        this.type = type;
        this.siteUrl = siteUrl;
        this.phoneNumbers = phoneNumbers;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    @JsonGetter("email")
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    @JsonGetter("document")
    public String getDocument() {
        return document;
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = document;
    }

    /**
     * Getter for Type.
     * "individual" ou "corporation"
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * "individual" ou "corporation"
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Internal Getter for SiteUrl.
     * @return Returns the Internal String
     */
    @JsonGetter("site_url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSiteUrl() {
        return this.siteUrl;
    }

    /**
     * Getter for SiteUrl.
     * @return Returns the String
     */
    public String getSiteUrl() {
        return OptionalNullable.getFrom(siteUrl);
    }

    /**
     * Setter for SiteUrl.
     * @param siteUrl Value for String
     */
    @JsonSetter("site_url")
    public void setSiteUrl(String siteUrl) {
        this.siteUrl = OptionalNullable.of(siteUrl);
    }

    /**
     * UnSetter for SiteUrl.
     */
    public void unsetSiteUrl() {
        siteUrl = null;
    }

    /**
     * Getter for PhoneNumbers.
     * @return Returns the List of CreateRegisterInformationPhoneRequest
     */
    @JsonGetter("phone_numbers")
    public List<CreateRegisterInformationPhoneRequest> getPhoneNumbers() {
        return phoneNumbers;
    }

    /**
     * Setter for PhoneNumbers.
     * @param phoneNumbers Value for List of CreateRegisterInformationPhoneRequest
     */
    @JsonSetter("phone_numbers")
    public void setPhoneNumbers(List<CreateRegisterInformationPhoneRequest> phoneNumbers) {
        this.phoneNumbers = phoneNumbers;
    }

    /**
     * Converts this CreateRegisterInformationBaseRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateRegisterInformationBaseRequest [" + "email=" + email + ", document="
                + document + ", type=" + type + ", phoneNumbers=" + phoneNumbers + ", siteUrl="
                + siteUrl + "]";
    }

    /**
     * Builds a new {@link CreateRegisterInformationBaseRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateRegisterInformationBaseRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(email, document, type, phoneNumbers);
        builder.siteUrl = internalGetSiteUrl();
        return builder;
    }

    /**
     * Class to build instances of {@link CreateRegisterInformationBaseRequest}.
     */
    public static class Builder {
        private String email;
        private String document;
        private String type;
        private List<CreateRegisterInformationPhoneRequest> phoneNumbers;
        private OptionalNullable<String> siteUrl;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  email  String value for email.
         * @param  document  String value for document.
         * @param  type  String value for type.
         * @param  phoneNumbers  List of CreateRegisterInformationPhoneRequest value for
         *         phoneNumbers.
         */
        public Builder(String email, String document, String type,
                List<CreateRegisterInformationPhoneRequest> phoneNumbers) {
            this.email = email;
            this.document = document;
            this.type = type;
            this.phoneNumbers = phoneNumbers;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = document;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for phoneNumbers.
         * @param  phoneNumbers  List of CreateRegisterInformationPhoneRequest value for
         *         phoneNumbers.
         * @return Builder
         */
        public Builder phoneNumbers(List<CreateRegisterInformationPhoneRequest> phoneNumbers) {
            this.phoneNumbers = phoneNumbers;
            return this;
        }

        /**
         * Setter for siteUrl.
         * @param  siteUrl  String value for siteUrl.
         * @return Builder
         */
        public Builder siteUrl(String siteUrl) {
            this.siteUrl = OptionalNullable.of(siteUrl);
            return this;
        }

        /**
         * UnSetter for siteUrl.
         * @return Builder
         */
        public Builder unsetSiteUrl() {
            siteUrl = null;
            return this;
        }

        /**
         * Builds a new {@link CreateRegisterInformationBaseRequest} object using the set fields.
         * @return {@link CreateRegisterInformationBaseRequest}
         */
        public CreateRegisterInformationBaseRequest build() {
            return new CreateRegisterInformationBaseRequest(email, document, type, phoneNumbers,
                    siteUrl);
        }
    }
}
