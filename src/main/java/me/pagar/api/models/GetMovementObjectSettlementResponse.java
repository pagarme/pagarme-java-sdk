/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonInclude.Include;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.annotation.JsonTypeInfo;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetMovementObjectSettlementResponse type.
 */
@JsonTypeInfo(
        use = JsonTypeInfo.Id.NAME,
        include = JsonTypeInfo.As.EXISTING_PROPERTY,
        property = "object",
        defaultImpl = GetMovementObjectSettlementResponse.class,
        visible = true)
@JsonInclude(Include.ALWAYS)
public class GetMovementObjectSettlementResponse
        extends GetMovementObjectBaseResponse {
    private OptionalNullable<String> product;
    private OptionalNullable<String> brand;
    private OptionalNullable<String> paymentDate;
    private OptionalNullable<String> recipientId;
    private OptionalNullable<String> documentType;
    private OptionalNullable<String> document;
    private OptionalNullable<String> contractObligationId;
    private OptionalNullable<String> liquidationArrangementId;
    private OptionalNullable<String> externalEnginePaymentId;

    /**
     * Default constructor.
     */
    public GetMovementObjectSettlementResponse() {
        super();
        setObject("settlement");
    }

    /**
     * Initialization constructor.
     * @param  object  String value for object.
     * @param  id  String value for id.
     * @param  status  String value for status.
     * @param  amount  String value for amount.
     * @param  createdAt  String value for createdAt.
     * @param  type  String value for type.
     * @param  chargeId  String value for chargeId.
     * @param  gatewayId  String value for gatewayId.
     * @param  product  String value for product.
     * @param  brand  String value for brand.
     * @param  paymentDate  String value for paymentDate.
     * @param  recipientId  String value for recipientId.
     * @param  documentType  String value for documentType.
     * @param  document  String value for document.
     * @param  contractObligationId  String value for contractObligationId.
     * @param  liquidationArrangementId  String value for liquidationArrangementId.
     * @param  externalEnginePaymentId  String value for externalEnginePaymentId.
     */
    public GetMovementObjectSettlementResponse(
            String object,
            String id,
            String status,
            String amount,
            String createdAt,
            String type,
            String chargeId,
            String gatewayId,
            String product,
            String brand,
            String paymentDate,
            String recipientId,
            String documentType,
            String document,
            String contractObligationId,
            String liquidationArrangementId,
            String externalEnginePaymentId) {
        super(object, id, status, amount, createdAt, type, chargeId, gatewayId);
        this.product = OptionalNullable.of(product);
        this.brand = OptionalNullable.of(brand);
        this.paymentDate = OptionalNullable.of(paymentDate);
        this.recipientId = OptionalNullable.of(recipientId);
        this.documentType = OptionalNullable.of(documentType);
        this.document = OptionalNullable.of(document);
        this.contractObligationId = OptionalNullable.of(contractObligationId);
        this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
        this.externalEnginePaymentId = OptionalNullable.of(externalEnginePaymentId);
    }

    /**
     * Initialization constructor.
     * @param  object  String value for object.
     * @param  id  String value for id.
     * @param  status  String value for status.
     * @param  amount  String value for amount.
     * @param  createdAt  String value for createdAt.
     * @param  type  String value for type.
     * @param  chargeId  String value for chargeId.
     * @param  gatewayId  String value for gatewayId.
     * @param  product  String value for product.
     * @param  brand  String value for brand.
     * @param  paymentDate  String value for paymentDate.
     * @param  recipientId  String value for recipientId.
     * @param  documentType  String value for documentType.
     * @param  document  String value for document.
     * @param  contractObligationId  String value for contractObligationId.
     * @param  liquidationArrangementId  String value for liquidationArrangementId.
     * @param  externalEnginePaymentId  String value for externalEnginePaymentId.
     */

    protected GetMovementObjectSettlementResponse(String object, OptionalNullable<String> id,
            OptionalNullable<String> status, OptionalNullable<String> amount,
            OptionalNullable<String> createdAt, OptionalNullable<String> type,
            OptionalNullable<String> chargeId, OptionalNullable<String> gatewayId,
            OptionalNullable<String> product, OptionalNullable<String> brand,
            OptionalNullable<String> paymentDate, OptionalNullable<String> recipientId,
            OptionalNullable<String> documentType, OptionalNullable<String> document,
            OptionalNullable<String> contractObligationId,
            OptionalNullable<String> liquidationArrangementId,
            OptionalNullable<String> externalEnginePaymentId) {
        super(object, id, status, amount, createdAt, type, chargeId, gatewayId);
        this.product = product;
        this.brand = brand;
        this.paymentDate = paymentDate;
        this.recipientId = recipientId;
        this.documentType = documentType;
        this.document = document;
        this.contractObligationId = contractObligationId;
        this.liquidationArrangementId = liquidationArrangementId;
        this.externalEnginePaymentId = externalEnginePaymentId;
    }

    /**
     * Internal Getter for Product.
     * @return Returns the Internal String
     */
    @JsonGetter("product")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProduct() {
        return this.product;
    }

    /**
     * Getter for Product.
     * @return Returns the String
     */
    public String getProduct() {
        return OptionalNullable.getFrom(product);
    }

    /**
     * Setter for Product.
     * @param product Value for String
     */
    @JsonSetter("product")
    public void setProduct(String product) {
        this.product = OptionalNullable.of(product);
    }

    /**
     * UnSetter for Product.
     */
    public void unsetProduct() {
        product = null;
    }

    /**
     * Internal Getter for Brand.
     * @return Returns the Internal String
     */
    @JsonGetter("brand")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBrand() {
        return this.brand;
    }

    /**
     * Getter for Brand.
     * @return Returns the String
     */
    public String getBrand() {
        return OptionalNullable.getFrom(brand);
    }

    /**
     * Setter for Brand.
     * @param brand Value for String
     */
    @JsonSetter("brand")
    public void setBrand(String brand) {
        this.brand = OptionalNullable.of(brand);
    }

    /**
     * UnSetter for Brand.
     */
    public void unsetBrand() {
        brand = null;
    }

    /**
     * Internal Getter for PaymentDate.
     * @return Returns the Internal String
     */
    @JsonGetter("payment_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPaymentDate() {
        return this.paymentDate;
    }

    /**
     * Getter for PaymentDate.
     * @return Returns the String
     */
    public String getPaymentDate() {
        return OptionalNullable.getFrom(paymentDate);
    }

    /**
     * Setter for PaymentDate.
     * @param paymentDate Value for String
     */
    @JsonSetter("payment_date")
    public void setPaymentDate(String paymentDate) {
        this.paymentDate = OptionalNullable.of(paymentDate);
    }

    /**
     * UnSetter for PaymentDate.
     */
    public void unsetPaymentDate() {
        paymentDate = null;
    }

    /**
     * Internal Getter for RecipientId.
     * @return Returns the Internal String
     */
    @JsonGetter("recipient_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRecipientId() {
        return this.recipientId;
    }

    /**
     * Getter for RecipientId.
     * @return Returns the String
     */
    public String getRecipientId() {
        return OptionalNullable.getFrom(recipientId);
    }

    /**
     * Setter for RecipientId.
     * @param recipientId Value for String
     */
    @JsonSetter("recipient_id")
    public void setRecipientId(String recipientId) {
        this.recipientId = OptionalNullable.of(recipientId);
    }

    /**
     * UnSetter for RecipientId.
     */
    public void unsetRecipientId() {
        recipientId = null;
    }

    /**
     * Internal Getter for DocumentType.
     * @return Returns the Internal String
     */
    @JsonGetter("document_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocumentType() {
        return this.documentType;
    }

    /**
     * Getter for DocumentType.
     * @return Returns the String
     */
    public String getDocumentType() {
        return OptionalNullable.getFrom(documentType);
    }

    /**
     * Setter for DocumentType.
     * @param documentType Value for String
     */
    @JsonSetter("document_type")
    public void setDocumentType(String documentType) {
        this.documentType = OptionalNullable.of(documentType);
    }

    /**
     * UnSetter for DocumentType.
     */
    public void unsetDocumentType() {
        documentType = null;
    }

    /**
     * Internal Getter for Document.
     * @return Returns the Internal String
     */
    @JsonGetter("document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocument() {
        return this.document;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    public String getDocument() {
        return OptionalNullable.getFrom(document);
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = OptionalNullable.of(document);
    }

    /**
     * UnSetter for Document.
     */
    public void unsetDocument() {
        document = null;
    }

    /**
     * Internal Getter for ContractObligationId.
     * @return Returns the Internal String
     */
    @JsonGetter("contract_obligation_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetContractObligationId() {
        return this.contractObligationId;
    }

    /**
     * Getter for ContractObligationId.
     * @return Returns the String
     */
    public String getContractObligationId() {
        return OptionalNullable.getFrom(contractObligationId);
    }

    /**
     * Setter for ContractObligationId.
     * @param contractObligationId Value for String
     */
    @JsonSetter("contract_obligation_id")
    public void setContractObligationId(String contractObligationId) {
        this.contractObligationId = OptionalNullable.of(contractObligationId);
    }

    /**
     * UnSetter for ContractObligationId.
     */
    public void unsetContractObligationId() {
        contractObligationId = null;
    }

    /**
     * Internal Getter for LiquidationArrangementId.
     * @return Returns the Internal String
     */
    @JsonGetter("liquidation_arrangement_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLiquidationArrangementId() {
        return this.liquidationArrangementId;
    }

    /**
     * Getter for LiquidationArrangementId.
     * @return Returns the String
     */
    public String getLiquidationArrangementId() {
        return OptionalNullable.getFrom(liquidationArrangementId);
    }

    /**
     * Setter for LiquidationArrangementId.
     * @param liquidationArrangementId Value for String
     */
    @JsonSetter("liquidation_arrangement_id")
    public void setLiquidationArrangementId(String liquidationArrangementId) {
        this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
    }

    /**
     * UnSetter for LiquidationArrangementId.
     */
    public void unsetLiquidationArrangementId() {
        liquidationArrangementId = null;
    }

    /**
     * Internal Getter for ExternalEnginePaymentId.
     * @return Returns the Internal String
     */
    @JsonGetter("external_engine_payment_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetExternalEnginePaymentId() {
        return this.externalEnginePaymentId;
    }

    /**
     * Getter for ExternalEnginePaymentId.
     * @return Returns the String
     */
    public String getExternalEnginePaymentId() {
        return OptionalNullable.getFrom(externalEnginePaymentId);
    }

    /**
     * Setter for ExternalEnginePaymentId.
     * @param externalEnginePaymentId Value for String
     */
    @JsonSetter("external_engine_payment_id")
    public void setExternalEnginePaymentId(String externalEnginePaymentId) {
        this.externalEnginePaymentId = OptionalNullable.of(externalEnginePaymentId);
    }

    /**
     * UnSetter for ExternalEnginePaymentId.
     */
    public void unsetExternalEnginePaymentId() {
        externalEnginePaymentId = null;
    }

    /**
     * Converts this GetMovementObjectSettlementResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetMovementObjectSettlementResponse [" + "product=" + product + ", brand=" + brand
                + ", paymentDate=" + paymentDate + ", recipientId=" + recipientId
                + ", documentType=" + documentType + ", document=" + document
                + ", contractObligationId=" + contractObligationId + ", liquidationArrangementId="
                + liquidationArrangementId + ", externalEnginePaymentId=" + externalEnginePaymentId
                + ", object=" + getObject() + ", id=" + getId() + ", status=" + getStatus()
                + ", amount=" + getAmount() + ", createdAt=" + getCreatedAt() + ", type="
                + getType() + ", chargeId=" + getChargeId() + ", gatewayId=" + getGatewayId() + "]";
    }

    /**
     * Builds a new {@link GetMovementObjectSettlementResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetMovementObjectSettlementResponse.Builder} object
     */
    public Builder toGetMovementObjectSettlementResponseBuilder() {
        Builder builder = new Builder()
                .object(getObject());
        builder.product = internalGetProduct();
        builder.brand = internalGetBrand();
        builder.paymentDate = internalGetPaymentDate();
        builder.recipientId = internalGetRecipientId();
        builder.documentType = internalGetDocumentType();
        builder.document = internalGetDocument();
        builder.contractObligationId = internalGetContractObligationId();
        builder.liquidationArrangementId = internalGetLiquidationArrangementId();
        builder.externalEnginePaymentId = internalGetExternalEnginePaymentId();
        builder.id = internalGetId();
        builder.status = internalGetStatus();
        builder.amount = internalGetAmount();
        builder.createdAt = internalGetCreatedAt();
        builder.type = internalGetType();
        builder.chargeId = internalGetChargeId();
        builder.gatewayId = internalGetGatewayId();
        return builder;
    }

    /**
     * Class to build instances of {@link GetMovementObjectSettlementResponse}.
     */
    public static class Builder {
        private String object = "settlement";
        private OptionalNullable<String> id;
        private OptionalNullable<String> status;
        private OptionalNullable<String> amount;
        private OptionalNullable<String> createdAt;
        private OptionalNullable<String> type;
        private OptionalNullable<String> chargeId;
        private OptionalNullable<String> gatewayId;
        private OptionalNullable<String> product;
        private OptionalNullable<String> brand;
        private OptionalNullable<String> paymentDate;
        private OptionalNullable<String> recipientId;
        private OptionalNullable<String> documentType;
        private OptionalNullable<String> document;
        private OptionalNullable<String> contractObligationId;
        private OptionalNullable<String> liquidationArrangementId;
        private OptionalNullable<String> externalEnginePaymentId;



        /**
         * Setter for object.
         * @param  object  String value for object.
         * @return Builder
         */
        public Builder object(String object) {
            this.object = object;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  String value for amount.
         * @return Builder
         */
        public Builder amount(String amount) {
            this.amount = OptionalNullable.of(amount);
            return this;
        }

        /**
         * UnSetter for amount.
         * @return Builder
         */
        public Builder unsetAmount() {
            amount = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for chargeId.
         * @param  chargeId  String value for chargeId.
         * @return Builder
         */
        public Builder chargeId(String chargeId) {
            this.chargeId = OptionalNullable.of(chargeId);
            return this;
        }

        /**
         * UnSetter for chargeId.
         * @return Builder
         */
        public Builder unsetChargeId() {
            chargeId = null;
            return this;
        }

        /**
         * Setter for gatewayId.
         * @param  gatewayId  String value for gatewayId.
         * @return Builder
         */
        public Builder gatewayId(String gatewayId) {
            this.gatewayId = OptionalNullable.of(gatewayId);
            return this;
        }

        /**
         * UnSetter for gatewayId.
         * @return Builder
         */
        public Builder unsetGatewayId() {
            gatewayId = null;
            return this;
        }

        /**
         * Setter for product.
         * @param  product  String value for product.
         * @return Builder
         */
        public Builder product(String product) {
            this.product = OptionalNullable.of(product);
            return this;
        }

        /**
         * UnSetter for product.
         * @return Builder
         */
        public Builder unsetProduct() {
            product = null;
            return this;
        }

        /**
         * Setter for brand.
         * @param  brand  String value for brand.
         * @return Builder
         */
        public Builder brand(String brand) {
            this.brand = OptionalNullable.of(brand);
            return this;
        }

        /**
         * UnSetter for brand.
         * @return Builder
         */
        public Builder unsetBrand() {
            brand = null;
            return this;
        }

        /**
         * Setter for paymentDate.
         * @param  paymentDate  String value for paymentDate.
         * @return Builder
         */
        public Builder paymentDate(String paymentDate) {
            this.paymentDate = OptionalNullable.of(paymentDate);
            return this;
        }

        /**
         * UnSetter for paymentDate.
         * @return Builder
         */
        public Builder unsetPaymentDate() {
            paymentDate = null;
            return this;
        }

        /**
         * Setter for recipientId.
         * @param  recipientId  String value for recipientId.
         * @return Builder
         */
        public Builder recipientId(String recipientId) {
            this.recipientId = OptionalNullable.of(recipientId);
            return this;
        }

        /**
         * UnSetter for recipientId.
         * @return Builder
         */
        public Builder unsetRecipientId() {
            recipientId = null;
            return this;
        }

        /**
         * Setter for documentType.
         * @param  documentType  String value for documentType.
         * @return Builder
         */
        public Builder documentType(String documentType) {
            this.documentType = OptionalNullable.of(documentType);
            return this;
        }

        /**
         * UnSetter for documentType.
         * @return Builder
         */
        public Builder unsetDocumentType() {
            documentType = null;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = OptionalNullable.of(document);
            return this;
        }

        /**
         * UnSetter for document.
         * @return Builder
         */
        public Builder unsetDocument() {
            document = null;
            return this;
        }

        /**
         * Setter for contractObligationId.
         * @param  contractObligationId  String value for contractObligationId.
         * @return Builder
         */
        public Builder contractObligationId(String contractObligationId) {
            this.contractObligationId = OptionalNullable.of(contractObligationId);
            return this;
        }

        /**
         * UnSetter for contractObligationId.
         * @return Builder
         */
        public Builder unsetContractObligationId() {
            contractObligationId = null;
            return this;
        }

        /**
         * Setter for liquidationArrangementId.
         * @param  liquidationArrangementId  String value for liquidationArrangementId.
         * @return Builder
         */
        public Builder liquidationArrangementId(String liquidationArrangementId) {
            this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
            return this;
        }

        /**
         * UnSetter for liquidationArrangementId.
         * @return Builder
         */
        public Builder unsetLiquidationArrangementId() {
            liquidationArrangementId = null;
            return this;
        }

        /**
         * Setter for externalEnginePaymentId.
         * @param  externalEnginePaymentId  String value for externalEnginePaymentId.
         * @return Builder
         */
        public Builder externalEnginePaymentId(String externalEnginePaymentId) {
            this.externalEnginePaymentId = OptionalNullable.of(externalEnginePaymentId);
            return this;
        }

        /**
         * UnSetter for externalEnginePaymentId.
         * @return Builder
         */
        public Builder unsetExternalEnginePaymentId() {
            externalEnginePaymentId = null;
            return this;
        }

        /**
         * Builds a new {@link GetMovementObjectSettlementResponse} object using the set fields.
         * @return {@link GetMovementObjectSettlementResponse}
         */
        public GetMovementObjectSettlementResponse build() {
            return new GetMovementObjectSettlementResponse(object, id, status, amount, createdAt,
                    type, chargeId, gatewayId, product, brand, paymentDate, recipientId,
                    documentType, document, contractObligationId, liquidationArrangementId,
                    externalEnginePaymentId);
        }
    }
}
