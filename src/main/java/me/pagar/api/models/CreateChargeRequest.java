/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import java.util.Map;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for CreateChargeRequest type.
 */
public class CreateChargeRequest {
    private OptionalNullable<String> code;
    private int amount;
    private OptionalNullable<String> customerId;
    private OptionalNullable<CreateCustomerRequest> customer;
    private CreatePaymentRequest payment;
    private OptionalNullable<Map<String, String>> metadata;
    private OptionalNullable<LocalDateTime> dueAt;
    private OptionalNullable<CreateAntifraudRequest> antifraud;
    private String orderId;

    /**
     * Default constructor.
     */
    public CreateChargeRequest() {
    }

    /**
     * Initialization constructor.
     * @param  amount  int value for amount.
     * @param  payment  CreatePaymentRequest value for payment.
     * @param  orderId  String value for orderId.
     * @param  code  String value for code.
     * @param  customerId  String value for customerId.
     * @param  customer  CreateCustomerRequest value for customer.
     * @param  metadata  Map of String, value for metadata.
     * @param  dueAt  LocalDateTime value for dueAt.
     * @param  antifraud  CreateAntifraudRequest value for antifraud.
     */
    public CreateChargeRequest(
            int amount,
            CreatePaymentRequest payment,
            String orderId,
            String code,
            String customerId,
            CreateCustomerRequest customer,
            Map<String, String> metadata,
            LocalDateTime dueAt,
            CreateAntifraudRequest antifraud) {
        this.code = OptionalNullable.of(code);
        this.amount = amount;
        this.customerId = OptionalNullable.of(customerId);
        this.customer = OptionalNullable.of(customer);
        this.payment = payment;
        this.metadata = OptionalNullable.of(metadata);
        this.dueAt = OptionalNullable.of(dueAt);
        this.antifraud = OptionalNullable.of(antifraud);
        this.orderId = orderId;
    }

    /**
     * Internal initialization constructor.
     */
    protected CreateChargeRequest(int amount, CreatePaymentRequest payment, String orderId,
            OptionalNullable<String> code, OptionalNullable<String> customerId,
            OptionalNullable<CreateCustomerRequest> customer,
            OptionalNullable<Map<String, String>> metadata, OptionalNullable<LocalDateTime> dueAt,
            OptionalNullable<CreateAntifraudRequest> antifraud) {
        this.code = code;
        this.amount = amount;
        this.customerId = customerId;
        this.customer = customer;
        this.payment = payment;
        this.metadata = metadata;
        this.dueAt = dueAt;
        this.antifraud = antifraud;
        this.orderId = orderId;
    }

    /**
     * Internal Getter for Code.
     * Code
     * @return Returns the Internal String
     */
    @JsonGetter("code")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCode() {
        return this.code;
    }

    /**
     * Getter for Code.
     * Code
     * @return Returns the String
     */
    public String getCode() {
        return OptionalNullable.getFrom(code);
    }

    /**
     * Setter for Code.
     * Code
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = OptionalNullable.of(code);
    }

    /**
     * UnSetter for Code.
     * Code
     */
    public void unsetCode() {
        code = null;
    }

    /**
     * Getter for Amount.
     * The amount of the charge, in cents
     * @return Returns the int
     */
    @JsonGetter("amount")
    public int getAmount() {
        return amount;
    }

    /**
     * Setter for Amount.
     * The amount of the charge, in cents
     * @param amount Value for int
     */
    @JsonSetter("amount")
    public void setAmount(int amount) {
        this.amount = amount;
    }

    /**
     * Internal Getter for CustomerId.
     * The customer's id
     * @return Returns the Internal String
     */
    @JsonGetter("customer_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetCustomerId() {
        return this.customerId;
    }

    /**
     * Getter for CustomerId.
     * The customer's id
     * @return Returns the String
     */
    public String getCustomerId() {
        return OptionalNullable.getFrom(customerId);
    }

    /**
     * Setter for CustomerId.
     * The customer's id
     * @param customerId Value for String
     */
    @JsonSetter("customer_id")
    public void setCustomerId(String customerId) {
        this.customerId = OptionalNullable.of(customerId);
    }

    /**
     * UnSetter for CustomerId.
     * The customer's id
     */
    public void unsetCustomerId() {
        customerId = null;
    }

    /**
     * Internal Getter for Customer.
     * Customer data
     * @return Returns the Internal CreateCustomerRequest
     */
    @JsonGetter("customer")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<CreateCustomerRequest> internalGetCustomer() {
        return this.customer;
    }

    /**
     * Getter for Customer.
     * Customer data
     * @return Returns the CreateCustomerRequest
     */
    public CreateCustomerRequest getCustomer() {
        return OptionalNullable.getFrom(customer);
    }

    /**
     * Setter for Customer.
     * Customer data
     * @param customer Value for CreateCustomerRequest
     */
    @JsonSetter("customer")
    public void setCustomer(CreateCustomerRequest customer) {
        this.customer = OptionalNullable.of(customer);
    }

    /**
     * UnSetter for Customer.
     * Customer data
     */
    public void unsetCustomer() {
        customer = null;
    }

    /**
     * Getter for Payment.
     * Payment data
     * @return Returns the CreatePaymentRequest
     */
    @JsonGetter("payment")
    public CreatePaymentRequest getPayment() {
        return payment;
    }

    /**
     * Setter for Payment.
     * Payment data
     * @param payment Value for CreatePaymentRequest
     */
    @JsonSetter("payment")
    public void setPayment(CreatePaymentRequest payment) {
        this.payment = payment;
    }

    /**
     * Internal Getter for Metadata.
     * Metadata
     * @return Returns the Internal Map of String, String
     */
    @JsonGetter("metadata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Map<String, String>> internalGetMetadata() {
        return this.metadata;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    public Map<String, String> getMetadata() {
        return OptionalNullable.getFrom(metadata);
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = OptionalNullable.of(metadata);
    }

    /**
     * UnSetter for Metadata.
     * Metadata
     */
    public void unsetMetadata() {
        metadata = null;
    }

    /**
     * Internal Getter for DueAt.
     * The charge due date
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("due_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetDueAt() {
        return this.dueAt;
    }

    /**
     * Getter for DueAt.
     * The charge due date
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getDueAt() {
        return OptionalNullable.getFrom(dueAt);
    }

    /**
     * Setter for DueAt.
     * The charge due date
     * @param dueAt Value for LocalDateTime
     */
    @JsonSetter("due_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDueAt(LocalDateTime dueAt) {
        this.dueAt = OptionalNullable.of(dueAt);
    }

    /**
     * UnSetter for DueAt.
     * The charge due date
     */
    public void unsetDueAt() {
        dueAt = null;
    }

    /**
     * Internal Getter for Antifraud.
     * @return Returns the Internal CreateAntifraudRequest
     */
    @JsonGetter("antifraud")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<CreateAntifraudRequest> internalGetAntifraud() {
        return this.antifraud;
    }

    /**
     * Getter for Antifraud.
     * @return Returns the CreateAntifraudRequest
     */
    public CreateAntifraudRequest getAntifraud() {
        return OptionalNullable.getFrom(antifraud);
    }

    /**
     * Setter for Antifraud.
     * @param antifraud Value for CreateAntifraudRequest
     */
    @JsonSetter("antifraud")
    public void setAntifraud(CreateAntifraudRequest antifraud) {
        this.antifraud = OptionalNullable.of(antifraud);
    }

    /**
     * UnSetter for Antifraud.
     */
    public void unsetAntifraud() {
        antifraud = null;
    }

    /**
     * Getter for OrderId.
     * Order Id
     * @return Returns the String
     */
    @JsonGetter("order_id")
    public String getOrderId() {
        return orderId;
    }

    /**
     * Setter for OrderId.
     * Order Id
     * @param orderId Value for String
     */
    @JsonSetter("order_id")
    public void setOrderId(String orderId) {
        this.orderId = orderId;
    }

    /**
     * Converts this CreateChargeRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateChargeRequest [" + "amount=" + amount + ", payment=" + payment + ", orderId="
                + orderId + ", code=" + code + ", customerId=" + customerId + ", customer="
                + customer + ", metadata=" + metadata + ", dueAt=" + dueAt + ", antifraud="
                + antifraud + "]";
    }

    /**
     * Builds a new {@link CreateChargeRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateChargeRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(amount, payment, orderId);
        builder.code = internalGetCode();
        builder.customerId = internalGetCustomerId();
        builder.customer = internalGetCustomer();
        builder.metadata = internalGetMetadata();
        builder.dueAt = internalGetDueAt();
        builder.antifraud = internalGetAntifraud();
        return builder;
    }

    /**
     * Class to build instances of {@link CreateChargeRequest}.
     */
    public static class Builder {
        private int amount;
        private CreatePaymentRequest payment;
        private String orderId;
        private OptionalNullable<String> code;
        private OptionalNullable<String> customerId;
        private OptionalNullable<CreateCustomerRequest> customer;
        private OptionalNullable<Map<String, String>> metadata;
        private OptionalNullable<LocalDateTime> dueAt;
        private OptionalNullable<CreateAntifraudRequest> antifraud;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  amount  int value for amount.
         * @param  payment  CreatePaymentRequest value for payment.
         * @param  orderId  String value for orderId.
         */
        public Builder(int amount, CreatePaymentRequest payment, String orderId) {
            this.amount = amount;
            this.payment = payment;
            this.orderId = orderId;
        }

        /**
         * Setter for amount.
         * @param  amount  int value for amount.
         * @return Builder
         */
        public Builder amount(int amount) {
            this.amount = amount;
            return this;
        }

        /**
         * Setter for payment.
         * @param  payment  CreatePaymentRequest value for payment.
         * @return Builder
         */
        public Builder payment(CreatePaymentRequest payment) {
            this.payment = payment;
            return this;
        }

        /**
         * Setter for orderId.
         * @param  orderId  String value for orderId.
         * @return Builder
         */
        public Builder orderId(String orderId) {
            this.orderId = orderId;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = OptionalNullable.of(code);
            return this;
        }

        /**
         * UnSetter for code.
         * @return Builder
         */
        public Builder unsetCode() {
            code = null;
            return this;
        }

        /**
         * Setter for customerId.
         * @param  customerId  String value for customerId.
         * @return Builder
         */
        public Builder customerId(String customerId) {
            this.customerId = OptionalNullable.of(customerId);
            return this;
        }

        /**
         * UnSetter for customerId.
         * @return Builder
         */
        public Builder unsetCustomerId() {
            customerId = null;
            return this;
        }

        /**
         * Setter for customer.
         * @param  customer  CreateCustomerRequest value for customer.
         * @return Builder
         */
        public Builder customer(CreateCustomerRequest customer) {
            this.customer = OptionalNullable.of(customer);
            return this;
        }

        /**
         * UnSetter for customer.
         * @return Builder
         */
        public Builder unsetCustomer() {
            customer = null;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = OptionalNullable.of(metadata);
            return this;
        }

        /**
         * UnSetter for metadata.
         * @return Builder
         */
        public Builder unsetMetadata() {
            metadata = null;
            return this;
        }

        /**
         * Setter for dueAt.
         * @param  dueAt  LocalDateTime value for dueAt.
         * @return Builder
         */
        public Builder dueAt(LocalDateTime dueAt) {
            this.dueAt = OptionalNullable.of(dueAt);
            return this;
        }

        /**
         * UnSetter for dueAt.
         * @return Builder
         */
        public Builder unsetDueAt() {
            dueAt = null;
            return this;
        }

        /**
         * Setter for antifraud.
         * @param  antifraud  CreateAntifraudRequest value for antifraud.
         * @return Builder
         */
        public Builder antifraud(CreateAntifraudRequest antifraud) {
            this.antifraud = OptionalNullable.of(antifraud);
            return this;
        }

        /**
         * UnSetter for antifraud.
         * @return Builder
         */
        public Builder unsetAntifraud() {
            antifraud = null;
            return this;
        }

        /**
         * Builds a new {@link CreateChargeRequest} object using the set fields.
         * @return {@link CreateChargeRequest}
         */
        public CreateChargeRequest build() {
            return new CreateChargeRequest(amount, payment, orderId, code, customerId, customer,
                    metadata, dueAt, antifraud);
        }
    }
}
