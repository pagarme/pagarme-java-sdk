/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for GetSellerResponse type.
 */
public class GetSellerResponse {
    private String id;
    private String name;
    private String code;
    private String document;
    private String description;
    private String status;
    private String createdAt;
    private String updatedAt;
    private GetAddressResponse address;
    private Map<String, String> metadata;
    @JsonInclude(JsonInclude.Include.NON_NULL)
    private String deletedAt;

    /**
     * Default constructor.
     */
    public GetSellerResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  name  String value for name.
     * @param  code  String value for code.
     * @param  document  String value for document.
     * @param  description  String value for description.
     * @param  status  String value for status.
     * @param  createdAt  String value for createdAt.
     * @param  updatedAt  String value for updatedAt.
     * @param  address  GetAddressResponse value for address.
     * @param  metadata  Map of String, value for metadata.
     * @param  deletedAt  String value for deletedAt.
     */
    public GetSellerResponse(
            String id,
            String name,
            String code,
            String document,
            String description,
            String status,
            String createdAt,
            String updatedAt,
            GetAddressResponse address,
            Map<String, String> metadata,
            String deletedAt) {
        this.id = id;
        this.name = name;
        this.code = code;
        this.document = document;
        this.description = description;
        this.status = status;
        this.createdAt = createdAt;
        this.updatedAt = updatedAt;
        this.address = address;
        this.metadata = metadata;
        this.deletedAt = deletedAt;
    }

    /**
     * Getter for Id.
     * Identification
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * Identification
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Code.
     * @return Returns the String
     */
    @JsonGetter("code")
    public String getCode() {
        return code;
    }

    /**
     * Setter for Code.
     * @param code Value for String
     */
    @JsonSetter("code")
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    @JsonGetter("document")
    public String getDocument() {
        return document;
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = document;
    }

    /**
     * Getter for Description.
     * Description
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Status.
     * Status
     * @return Returns the String
     */
    @JsonGetter("Status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Status
     * @param status Value for String
     */
    @JsonSetter("Status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for CreatedAt.
     * Creation date
     * @return Returns the String
     */
    @JsonGetter("CreatedAt")
    public String getCreatedAt() {
        return createdAt;
    }

    /**
     * Setter for CreatedAt.
     * Creation date
     * @param createdAt Value for String
     */
    @JsonSetter("CreatedAt")
    public void setCreatedAt(String createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Getter for UpdatedAt.
     * Updated date
     * @return Returns the String
     */
    @JsonGetter("UpdatedAt")
    public String getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Setter for UpdatedAt.
     * Updated date
     * @param updatedAt Value for String
     */
    @JsonSetter("UpdatedAt")
    public void setUpdatedAt(String updatedAt) {
        this.updatedAt = updatedAt;
    }

    /**
     * Getter for Address.
     * Address
     * @return Returns the GetAddressResponse
     */
    @JsonGetter("Address")
    public GetAddressResponse getAddress() {
        return address;
    }

    /**
     * Setter for Address.
     * Address
     * @param address Value for GetAddressResponse
     */
    @JsonSetter("Address")
    public void setAddress(GetAddressResponse address) {
        this.address = address;
    }

    /**
     * Getter for Metadata.
     * Metadata
     * @return Returns the Map of String, String
     */
    @JsonGetter("Metadata")
    public Map<String, String> getMetadata() {
        return metadata;
    }

    /**
     * Setter for Metadata.
     * Metadata
     * @param metadata Value for Map of String, String
     */
    @JsonSetter("Metadata")
    public void setMetadata(Map<String, String> metadata) {
        this.metadata = metadata;
    }

    /**
     * Getter for DeletedAt.
     * Deleted date
     * @return Returns the String
     */
    @JsonGetter("DeletedAt")
    public String getDeletedAt() {
        return deletedAt;
    }

    /**
     * Setter for DeletedAt.
     * Deleted date
     * @param deletedAt Value for String
     */
    @JsonSetter("DeletedAt")
    public void setDeletedAt(String deletedAt) {
        this.deletedAt = deletedAt;
    }

    /**
     * Converts this GetSellerResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetSellerResponse [" + "id=" + id + ", name=" + name + ", code=" + code
                + ", document=" + document + ", description=" + description + ", status=" + status
                + ", createdAt=" + createdAt + ", updatedAt=" + updatedAt + ", address=" + address
                + ", metadata=" + metadata + ", deletedAt=" + deletedAt + "]";
    }

    /**
     * Builds a new {@link GetSellerResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetSellerResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, name, code, document, description, status, createdAt,
                updatedAt, address, metadata)
                .deletedAt(getDeletedAt());
        return builder;
    }

    /**
     * Class to build instances of {@link GetSellerResponse}.
     */
    public static class Builder {
        private String id;
        private String name;
        private String code;
        private String document;
        private String description;
        private String status;
        private String createdAt;
        private String updatedAt;
        private GetAddressResponse address;
        private Map<String, String> metadata;
        private String deletedAt;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  name  String value for name.
         * @param  code  String value for code.
         * @param  document  String value for document.
         * @param  description  String value for description.
         * @param  status  String value for status.
         * @param  createdAt  String value for createdAt.
         * @param  updatedAt  String value for updatedAt.
         * @param  address  GetAddressResponse value for address.
         * @param  metadata  Map of String, value for metadata.
         */
        public Builder(String id, String name, String code, String document, String description,
                String status, String createdAt, String updatedAt, GetAddressResponse address,
                Map<String, String> metadata) {
            this.id = id;
            this.name = name;
            this.code = code;
            this.document = document;
            this.description = description;
            this.status = status;
            this.createdAt = createdAt;
            this.updatedAt = updatedAt;
            this.address = address;
            this.metadata = metadata;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for code.
         * @param  code  String value for code.
         * @return Builder
         */
        public Builder code(String code) {
            this.code = code;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = document;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  String value for createdAt.
         * @return Builder
         */
        public Builder createdAt(String createdAt) {
            this.createdAt = createdAt;
            return this;
        }

        /**
         * Setter for updatedAt.
         * @param  updatedAt  String value for updatedAt.
         * @return Builder
         */
        public Builder updatedAt(String updatedAt) {
            this.updatedAt = updatedAt;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  GetAddressResponse value for address.
         * @return Builder
         */
        public Builder address(GetAddressResponse address) {
            this.address = address;
            return this;
        }

        /**
         * Setter for metadata.
         * @param  metadata  Map of String, value for metadata.
         * @return Builder
         */
        public Builder metadata(Map<String, String> metadata) {
            this.metadata = metadata;
            return this;
        }

        /**
         * Setter for deletedAt.
         * @param  deletedAt  String value for deletedAt.
         * @return Builder
         */
        public Builder deletedAt(String deletedAt) {
            this.deletedAt = deletedAt;
            return this;
        }

        /**
         * Builds a new {@link GetSellerResponse} object using the set fields.
         * @return {@link GetSellerResponse}
         */
        public GetSellerResponse build() {
            return new GetSellerResponse(id, name, code, document, description, status, createdAt,
                    updatedAt, address, metadata, deletedAt);
        }
    }
}
