/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetTokenResponse type.
 */
public class GetTokenResponse {
    private OptionalNullable<String> id;
    private OptionalNullable<String> type;
    private OptionalNullable<LocalDateTime> createdAt;
    private OptionalNullable<String> expiresAt;
    private OptionalNullable<GetCardTokenResponse> card;

    /**
     * Default constructor.
     */
    public GetTokenResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  type  String value for type.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  expiresAt  String value for expiresAt.
     * @param  card  GetCardTokenResponse value for card.
     */
    public GetTokenResponse(
            String id,
            String type,
            LocalDateTime createdAt,
            String expiresAt,
            GetCardTokenResponse card) {
        this.id = OptionalNullable.of(id);
        this.type = OptionalNullable.of(type);
        this.createdAt = OptionalNullable.of(createdAt);
        this.expiresAt = OptionalNullable.of(expiresAt);
        this.card = OptionalNullable.of(card);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetTokenResponse(OptionalNullable<String> id, OptionalNullable<String> type,
            OptionalNullable<LocalDateTime> createdAt, OptionalNullable<String> expiresAt,
            OptionalNullable<GetCardTokenResponse> card) {
        this.id = id;
        this.type = type;
        this.createdAt = createdAt;
        this.expiresAt = expiresAt;
        this.card = card;
    }

    /**
     * Internal Getter for Id.
     * @return Returns the Internal String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    public String getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for ExpiresAt.
     * @return Returns the Internal String
     */
    @JsonGetter("expires_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetExpiresAt() {
        return this.expiresAt;
    }

    /**
     * Getter for ExpiresAt.
     * @return Returns the String
     */
    public String getExpiresAt() {
        return OptionalNullable.getFrom(expiresAt);
    }

    /**
     * Setter for ExpiresAt.
     * @param expiresAt Value for String
     */
    @JsonSetter("expires_at")
    public void setExpiresAt(String expiresAt) {
        this.expiresAt = OptionalNullable.of(expiresAt);
    }

    /**
     * UnSetter for ExpiresAt.
     */
    public void unsetExpiresAt() {
        expiresAt = null;
    }

    /**
     * Internal Getter for Card.
     * @return Returns the Internal GetCardTokenResponse
     */
    @JsonGetter("card")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetCardTokenResponse> internalGetCard() {
        return this.card;
    }

    /**
     * Getter for Card.
     * @return Returns the GetCardTokenResponse
     */
    public GetCardTokenResponse getCard() {
        return OptionalNullable.getFrom(card);
    }

    /**
     * Setter for Card.
     * @param card Value for GetCardTokenResponse
     */
    @JsonSetter("card")
    public void setCard(GetCardTokenResponse card) {
        this.card = OptionalNullable.of(card);
    }

    /**
     * UnSetter for Card.
     */
    public void unsetCard() {
        card = null;
    }

    /**
     * Converts this GetTokenResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetTokenResponse [" + "id=" + id + ", type=" + type + ", createdAt=" + createdAt
                + ", expiresAt=" + expiresAt + ", card=" + card + "]";
    }

    /**
     * Builds a new {@link GetTokenResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetTokenResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.id = internalGetId();
        builder.type = internalGetType();
        builder.createdAt = internalGetCreatedAt();
        builder.expiresAt = internalGetExpiresAt();
        builder.card = internalGetCard();
        return builder;
    }

    /**
     * Class to build instances of {@link GetTokenResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> id;
        private OptionalNullable<String> type;
        private OptionalNullable<LocalDateTime> createdAt;
        private OptionalNullable<String> expiresAt;
        private OptionalNullable<GetCardTokenResponse> card;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for expiresAt.
         * @param  expiresAt  String value for expiresAt.
         * @return Builder
         */
        public Builder expiresAt(String expiresAt) {
            this.expiresAt = OptionalNullable.of(expiresAt);
            return this;
        }

        /**
         * UnSetter for expiresAt.
         * @return Builder
         */
        public Builder unsetExpiresAt() {
            expiresAt = null;
            return this;
        }

        /**
         * Setter for card.
         * @param  card  GetCardTokenResponse value for card.
         * @return Builder
         */
        public Builder card(GetCardTokenResponse card) {
            this.card = OptionalNullable.of(card);
            return this;
        }

        /**
         * UnSetter for card.
         * @return Builder
         */
        public Builder unsetCard() {
            card = null;
            return this;
        }

        /**
         * Builds a new {@link GetTokenResponse} object using the set fields.
         * @return {@link GetTokenResponse}
         */
        public GetTokenResponse build() {
            return new GetTokenResponse(id, type, createdAt, expiresAt, card);
        }
    }
}
