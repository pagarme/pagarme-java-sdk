/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetBalanceResponse type.
 */
public class GetBalanceResponse {
    private String currency;
    private Long availableAmount;
    private OptionalNullable<GetRecipientResponse> recipient;
    private Long transferredAmount;
    private Long waitingFundsAmount;

    /**
     * Default constructor.
     */
    public GetBalanceResponse() {
    }

    /**
     * Initialization constructor.
     * @param  currency  String value for currency.
     * @param  availableAmount  Long value for availableAmount.
     * @param  transferredAmount  Long value for transferredAmount.
     * @param  waitingFundsAmount  Long value for waitingFundsAmount.
     * @param  recipient  GetRecipientResponse value for recipient.
     */
    public GetBalanceResponse(
            String currency,
            Long availableAmount,
            Long transferredAmount,
            Long waitingFundsAmount,
            GetRecipientResponse recipient) {
        this.currency = currency;
        this.availableAmount = availableAmount;
        this.recipient = OptionalNullable.of(recipient);
        this.transferredAmount = transferredAmount;
        this.waitingFundsAmount = waitingFundsAmount;
    }

    /**
     * Internal initialization constructor.
     */
    protected GetBalanceResponse(String currency, Long availableAmount, Long transferredAmount,
            Long waitingFundsAmount, OptionalNullable<GetRecipientResponse> recipient) {
        this.currency = currency;
        this.availableAmount = availableAmount;
        this.recipient = recipient;
        this.transferredAmount = transferredAmount;
        this.waitingFundsAmount = waitingFundsAmount;
    }

    /**
     * Getter for Currency.
     * Currency
     * @return Returns the String
     */
    @JsonGetter("currency")
    public String getCurrency() {
        return currency;
    }

    /**
     * Setter for Currency.
     * Currency
     * @param currency Value for String
     */
    @JsonSetter("currency")
    public void setCurrency(String currency) {
        this.currency = currency;
    }

    /**
     * Getter for AvailableAmount.
     * Amount available for transferring
     * @return Returns the Long
     */
    @JsonGetter("available_amount")
    public Long getAvailableAmount() {
        return availableAmount;
    }

    /**
     * Setter for AvailableAmount.
     * Amount available for transferring
     * @param availableAmount Value for Long
     */
    @JsonSetter("available_amount")
    public void setAvailableAmount(Long availableAmount) {
        this.availableAmount = availableAmount;
    }

    /**
     * Internal Getter for Recipient.
     * Recipient
     * @return Returns the Internal GetRecipientResponse
     */
    @JsonGetter("recipient")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetRecipientResponse> internalGetRecipient() {
        return this.recipient;
    }

    /**
     * Getter for Recipient.
     * Recipient
     * @return Returns the GetRecipientResponse
     */
    public GetRecipientResponse getRecipient() {
        return OptionalNullable.getFrom(recipient);
    }

    /**
     * Setter for Recipient.
     * Recipient
     * @param recipient Value for GetRecipientResponse
     */
    @JsonSetter("recipient")
    public void setRecipient(GetRecipientResponse recipient) {
        this.recipient = OptionalNullable.of(recipient);
    }

    /**
     * UnSetter for Recipient.
     * Recipient
     */
    public void unsetRecipient() {
        recipient = null;
    }

    /**
     * Getter for TransferredAmount.
     * @return Returns the Long
     */
    @JsonGetter("transferred_amount")
    public Long getTransferredAmount() {
        return transferredAmount;
    }

    /**
     * Setter for TransferredAmount.
     * @param transferredAmount Value for Long
     */
    @JsonSetter("transferred_amount")
    public void setTransferredAmount(Long transferredAmount) {
        this.transferredAmount = transferredAmount;
    }

    /**
     * Getter for WaitingFundsAmount.
     * @return Returns the Long
     */
    @JsonGetter("waiting_funds_amount")
    public Long getWaitingFundsAmount() {
        return waitingFundsAmount;
    }

    /**
     * Setter for WaitingFundsAmount.
     * @param waitingFundsAmount Value for Long
     */
    @JsonSetter("waiting_funds_amount")
    public void setWaitingFundsAmount(Long waitingFundsAmount) {
        this.waitingFundsAmount = waitingFundsAmount;
    }

    /**
     * Converts this GetBalanceResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetBalanceResponse [" + "currency=" + currency + ", availableAmount="
                + availableAmount + ", transferredAmount=" + transferredAmount
                + ", waitingFundsAmount=" + waitingFundsAmount + ", recipient=" + recipient + "]";
    }

    /**
     * Builds a new {@link GetBalanceResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetBalanceResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(currency, availableAmount, transferredAmount,
                waitingFundsAmount);
        builder.recipient = internalGetRecipient();
        return builder;
    }

    /**
     * Class to build instances of {@link GetBalanceResponse}.
     */
    public static class Builder {
        private String currency;
        private Long availableAmount;
        private Long transferredAmount;
        private Long waitingFundsAmount;
        private OptionalNullable<GetRecipientResponse> recipient;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  currency  String value for currency.
         * @param  availableAmount  Long value for availableAmount.
         * @param  transferredAmount  Long value for transferredAmount.
         * @param  waitingFundsAmount  Long value for waitingFundsAmount.
         */
        public Builder(String currency, Long availableAmount, Long transferredAmount,
                Long waitingFundsAmount) {
            this.currency = currency;
            this.availableAmount = availableAmount;
            this.transferredAmount = transferredAmount;
            this.waitingFundsAmount = waitingFundsAmount;
        }

        /**
         * Setter for currency.
         * @param  currency  String value for currency.
         * @return Builder
         */
        public Builder currency(String currency) {
            this.currency = currency;
            return this;
        }

        /**
         * Setter for availableAmount.
         * @param  availableAmount  Long value for availableAmount.
         * @return Builder
         */
        public Builder availableAmount(Long availableAmount) {
            this.availableAmount = availableAmount;
            return this;
        }

        /**
         * Setter for transferredAmount.
         * @param  transferredAmount  Long value for transferredAmount.
         * @return Builder
         */
        public Builder transferredAmount(Long transferredAmount) {
            this.transferredAmount = transferredAmount;
            return this;
        }

        /**
         * Setter for waitingFundsAmount.
         * @param  waitingFundsAmount  Long value for waitingFundsAmount.
         * @return Builder
         */
        public Builder waitingFundsAmount(Long waitingFundsAmount) {
            this.waitingFundsAmount = waitingFundsAmount;
            return this;
        }

        /**
         * Setter for recipient.
         * @param  recipient  GetRecipientResponse value for recipient.
         * @return Builder
         */
        public Builder recipient(GetRecipientResponse recipient) {
            this.recipient = OptionalNullable.of(recipient);
            return this;
        }

        /**
         * UnSetter for recipient.
         * @return Builder
         */
        public Builder unsetRecipient() {
            recipient = null;
            return this;
        }

        /**
         * Builds a new {@link GetBalanceResponse} object using the set fields.
         * @return {@link GetBalanceResponse}
         */
        public GetBalanceResponse build() {
            return new GetBalanceResponse(currency, availableAmount, transferredAmount,
                    waitingFundsAmount, recipient);
        }
    }
}
