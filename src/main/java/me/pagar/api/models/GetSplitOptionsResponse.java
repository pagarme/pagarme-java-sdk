/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetSplitOptionsResponse type.
 */
public class GetSplitOptionsResponse {
    private OptionalNullable<Boolean> liable;
    private OptionalNullable<Boolean> chargeProcessingFee;
    private OptionalNullable<String> chargeRemainderFee;

    /**
     * Default constructor.
     */
    public GetSplitOptionsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  liable  Boolean value for liable.
     * @param  chargeProcessingFee  Boolean value for chargeProcessingFee.
     * @param  chargeRemainderFee  String value for chargeRemainderFee.
     */
    public GetSplitOptionsResponse(
            Boolean liable,
            Boolean chargeProcessingFee,
            String chargeRemainderFee) {
        this.liable = OptionalNullable.of(liable);
        this.chargeProcessingFee = OptionalNullable.of(chargeProcessingFee);
        this.chargeRemainderFee = OptionalNullable.of(chargeRemainderFee);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetSplitOptionsResponse(OptionalNullable<Boolean> liable,
            OptionalNullable<Boolean> chargeProcessingFee,
            OptionalNullable<String> chargeRemainderFee) {
        this.liable = liable;
        this.chargeProcessingFee = chargeProcessingFee;
        this.chargeRemainderFee = chargeRemainderFee;
    }

    /**
     * Internal Getter for Liable.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("liable")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetLiable() {
        return this.liable;
    }

    /**
     * Getter for Liable.
     * @return Returns the Boolean
     */
    public Boolean getLiable() {
        return OptionalNullable.getFrom(liable);
    }

    /**
     * Setter for Liable.
     * @param liable Value for Boolean
     */
    @JsonSetter("liable")
    public void setLiable(Boolean liable) {
        this.liable = OptionalNullable.of(liable);
    }

    /**
     * UnSetter for Liable.
     */
    public void unsetLiable() {
        liable = null;
    }

    /**
     * Internal Getter for ChargeProcessingFee.
     * @return Returns the Internal Boolean
     */
    @JsonGetter("charge_processing_fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Boolean> internalGetChargeProcessingFee() {
        return this.chargeProcessingFee;
    }

    /**
     * Getter for ChargeProcessingFee.
     * @return Returns the Boolean
     */
    public Boolean getChargeProcessingFee() {
        return OptionalNullable.getFrom(chargeProcessingFee);
    }

    /**
     * Setter for ChargeProcessingFee.
     * @param chargeProcessingFee Value for Boolean
     */
    @JsonSetter("charge_processing_fee")
    public void setChargeProcessingFee(Boolean chargeProcessingFee) {
        this.chargeProcessingFee = OptionalNullable.of(chargeProcessingFee);
    }

    /**
     * UnSetter for ChargeProcessingFee.
     */
    public void unsetChargeProcessingFee() {
        chargeProcessingFee = null;
    }

    /**
     * Internal Getter for ChargeRemainderFee.
     * @return Returns the Internal String
     */
    @JsonGetter("charge_remainder_fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetChargeRemainderFee() {
        return this.chargeRemainderFee;
    }

    /**
     * Getter for ChargeRemainderFee.
     * @return Returns the String
     */
    public String getChargeRemainderFee() {
        return OptionalNullable.getFrom(chargeRemainderFee);
    }

    /**
     * Setter for ChargeRemainderFee.
     * @param chargeRemainderFee Value for String
     */
    @JsonSetter("charge_remainder_fee")
    public void setChargeRemainderFee(String chargeRemainderFee) {
        this.chargeRemainderFee = OptionalNullable.of(chargeRemainderFee);
    }

    /**
     * UnSetter for ChargeRemainderFee.
     */
    public void unsetChargeRemainderFee() {
        chargeRemainderFee = null;
    }

    /**
     * Converts this GetSplitOptionsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetSplitOptionsResponse [" + "liable=" + liable + ", chargeProcessingFee="
                + chargeProcessingFee + ", chargeRemainderFee=" + chargeRemainderFee + "]";
    }

    /**
     * Builds a new {@link GetSplitOptionsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetSplitOptionsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.liable = internalGetLiable();
        builder.chargeProcessingFee = internalGetChargeProcessingFee();
        builder.chargeRemainderFee = internalGetChargeRemainderFee();
        return builder;
    }

    /**
     * Class to build instances of {@link GetSplitOptionsResponse}.
     */
    public static class Builder {
        private OptionalNullable<Boolean> liable;
        private OptionalNullable<Boolean> chargeProcessingFee;
        private OptionalNullable<String> chargeRemainderFee;



        /**
         * Setter for liable.
         * @param  liable  Boolean value for liable.
         * @return Builder
         */
        public Builder liable(Boolean liable) {
            this.liable = OptionalNullable.of(liable);
            return this;
        }

        /**
         * UnSetter for liable.
         * @return Builder
         */
        public Builder unsetLiable() {
            liable = null;
            return this;
        }

        /**
         * Setter for chargeProcessingFee.
         * @param  chargeProcessingFee  Boolean value for chargeProcessingFee.
         * @return Builder
         */
        public Builder chargeProcessingFee(Boolean chargeProcessingFee) {
            this.chargeProcessingFee = OptionalNullable.of(chargeProcessingFee);
            return this;
        }

        /**
         * UnSetter for chargeProcessingFee.
         * @return Builder
         */
        public Builder unsetChargeProcessingFee() {
            chargeProcessingFee = null;
            return this;
        }

        /**
         * Setter for chargeRemainderFee.
         * @param  chargeRemainderFee  String value for chargeRemainderFee.
         * @return Builder
         */
        public Builder chargeRemainderFee(String chargeRemainderFee) {
            this.chargeRemainderFee = OptionalNullable.of(chargeRemainderFee);
            return this;
        }

        /**
         * UnSetter for chargeRemainderFee.
         * @return Builder
         */
        public Builder unsetChargeRemainderFee() {
            chargeRemainderFee = null;
            return this;
        }

        /**
         * Builds a new {@link GetSplitOptionsResponse} object using the set fields.
         * @return {@link GetSplitOptionsResponse}
         */
        public GetSplitOptionsResponse build() {
            return new GetSplitOptionsResponse(liable, chargeProcessingFee, chargeRemainderFee);
        }
    }
}
