/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.BaseModel;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetDiscountResponse type.
 */
public class GetDiscountResponse {
    private OptionalNullable<String> id;
    private OptionalNullable<Double> value;
    private OptionalNullable<String> discountType;
    private OptionalNullable<String> status;
    private OptionalNullable<LocalDateTime> createdAt;
    private OptionalNullable<Integer> cycles;
    private OptionalNullable<LocalDateTime> deletedAt;
    private OptionalNullable<String> description;
    private OptionalNullable<GetSubscriptionResponse> subscription;
    private OptionalNullable<GetSubscriptionItemResponse> subscriptionItem;

    /**
     * Default constructor.
     */
    public GetDiscountResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  value  Double value for value.
     * @param  discountType  String value for discountType.
     * @param  status  String value for status.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  cycles  Integer value for cycles.
     * @param  deletedAt  LocalDateTime value for deletedAt.
     * @param  description  String value for description.
     * @param  subscription  GetSubscriptionResponse value for subscription.
     * @param  subscriptionItem  GetSubscriptionItemResponse value for subscriptionItem.
     */
    public GetDiscountResponse(
            String id,
            Double value,
            String discountType,
            String status,
            LocalDateTime createdAt,
            Integer cycles,
            LocalDateTime deletedAt,
            String description,
            GetSubscriptionResponse subscription,
            GetSubscriptionItemResponse subscriptionItem) {
        this.id = OptionalNullable.of(id);
        this.value = OptionalNullable.of(value);
        this.discountType = OptionalNullable.of(discountType);
        this.status = OptionalNullable.of(status);
        this.createdAt = OptionalNullable.of(createdAt);
        this.cycles = OptionalNullable.of(cycles);
        this.deletedAt = OptionalNullable.of(deletedAt);
        this.description = OptionalNullable.of(description);
        this.subscription = OptionalNullable.of(subscription);
        this.subscriptionItem = OptionalNullable.of(subscriptionItem);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetDiscountResponse(OptionalNullable<String> id, OptionalNullable<Double> value,
            OptionalNullable<String> discountType, OptionalNullable<String> status,
            OptionalNullable<LocalDateTime> createdAt, OptionalNullable<Integer> cycles,
            OptionalNullable<LocalDateTime> deletedAt, OptionalNullable<String> description,
            OptionalNullable<GetSubscriptionResponse> subscription,
            OptionalNullable<GetSubscriptionItemResponse> subscriptionItem) {
        this.id = id;
        this.value = value;
        this.discountType = discountType;
        this.status = status;
        this.createdAt = createdAt;
        this.cycles = cycles;
        this.deletedAt = deletedAt;
        this.description = description;
        this.subscription = subscription;
        this.subscriptionItem = subscriptionItem;
    }

    /**
     * Internal Getter for Id.
     * @return Returns the Internal String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    public String getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for Value.
     * @return Returns the Internal Double
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Double> internalGetValue() {
        return this.value;
    }

    /**
     * Getter for Value.
     * @return Returns the Double
     */
    public Double getValue() {
        return OptionalNullable.getFrom(value);
    }

    /**
     * Setter for Value.
     * @param value Value for Double
     */
    @JsonSetter("value")
    public void setValue(Double value) {
        this.value = OptionalNullable.of(value);
    }

    /**
     * UnSetter for Value.
     */
    public void unsetValue() {
        value = null;
    }

    /**
     * Internal Getter for DiscountType.
     * @return Returns the Internal String
     */
    @JsonGetter("discount_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDiscountType() {
        return this.discountType;
    }

    /**
     * Getter for DiscountType.
     * @return Returns the String
     */
    public String getDiscountType() {
        return OptionalNullable.getFrom(discountType);
    }

    /**
     * Setter for DiscountType.
     * @param discountType Value for String
     */
    @JsonSetter("discount_type")
    public void setDiscountType(String discountType) {
        this.discountType = OptionalNullable.of(discountType);
    }

    /**
     * UnSetter for DiscountType.
     */
    public void unsetDiscountType() {
        discountType = null;
    }

    /**
     * Internal Getter for Status.
     * @return Returns the Internal String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for Cycles.
     * @return Returns the Internal Integer
     */
    @JsonGetter("cycles")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetCycles() {
        return this.cycles;
    }

    /**
     * Getter for Cycles.
     * @return Returns the Integer
     */
    public Integer getCycles() {
        return OptionalNullable.getFrom(cycles);
    }

    /**
     * Setter for Cycles.
     * @param cycles Value for Integer
     */
    @JsonSetter("cycles")
    public void setCycles(Integer cycles) {
        this.cycles = OptionalNullable.of(cycles);
    }

    /**
     * UnSetter for Cycles.
     */
    public void unsetCycles() {
        cycles = null;
    }

    /**
     * Internal Getter for DeletedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("deleted_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetDeletedAt() {
        return this.deletedAt;
    }

    /**
     * Getter for DeletedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getDeletedAt() {
        return OptionalNullable.getFrom(deletedAt);
    }

    /**
     * Setter for DeletedAt.
     * @param deletedAt Value for LocalDateTime
     */
    @JsonSetter("deleted_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDeletedAt(LocalDateTime deletedAt) {
        this.deletedAt = OptionalNullable.of(deletedAt);
    }

    /**
     * UnSetter for DeletedAt.
     */
    public void unsetDeletedAt() {
        deletedAt = null;
    }

    /**
     * Internal Getter for Description.
     * @return Returns the Internal String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDescription() {
        return this.description;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    public String getDescription() {
        return OptionalNullable.getFrom(description);
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = OptionalNullable.of(description);
    }

    /**
     * UnSetter for Description.
     */
    public void unsetDescription() {
        description = null;
    }

    /**
     * Internal Getter for Subscription.
     * @return Returns the Internal GetSubscriptionResponse
     */
    @JsonGetter("subscription")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetSubscriptionResponse> internalGetSubscription() {
        return this.subscription;
    }

    /**
     * Getter for Subscription.
     * @return Returns the GetSubscriptionResponse
     */
    public GetSubscriptionResponse getSubscription() {
        return OptionalNullable.getFrom(subscription);
    }

    /**
     * Setter for Subscription.
     * @param subscription Value for GetSubscriptionResponse
     */
    @JsonSetter("subscription")
    public void setSubscription(GetSubscriptionResponse subscription) {
        this.subscription = OptionalNullable.of(subscription);
    }

    /**
     * UnSetter for Subscription.
     */
    public void unsetSubscription() {
        subscription = null;
    }

    /**
     * Internal Getter for SubscriptionItem.
     * The subscription item
     * @return Returns the Internal GetSubscriptionItemResponse
     */
    @JsonGetter("subscription_item")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetSubscriptionItemResponse> internalGetSubscriptionItem() {
        return this.subscriptionItem;
    }

    /**
     * Getter for SubscriptionItem.
     * The subscription item
     * @return Returns the GetSubscriptionItemResponse
     */
    public GetSubscriptionItemResponse getSubscriptionItem() {
        return OptionalNullable.getFrom(subscriptionItem);
    }

    /**
     * Setter for SubscriptionItem.
     * The subscription item
     * @param subscriptionItem Value for GetSubscriptionItemResponse
     */
    @JsonSetter("subscription_item")
    public void setSubscriptionItem(GetSubscriptionItemResponse subscriptionItem) {
        this.subscriptionItem = OptionalNullable.of(subscriptionItem);
    }

    /**
     * UnSetter for SubscriptionItem.
     * The subscription item
     */
    public void unsetSubscriptionItem() {
        subscriptionItem = null;
    }

    /**
     * Converts this GetDiscountResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetDiscountResponse [" + "id=" + id + ", value=" + value + ", discountType="
                + discountType + ", status=" + status + ", createdAt=" + createdAt + ", cycles="
                + cycles + ", deletedAt=" + deletedAt + ", description=" + description
                + ", subscription=" + subscription + ", subscriptionItem=" + subscriptionItem + "]";
    }

    /**
     * Builds a new {@link GetDiscountResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetDiscountResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.id = internalGetId();
        builder.value = internalGetValue();
        builder.discountType = internalGetDiscountType();
        builder.status = internalGetStatus();
        builder.createdAt = internalGetCreatedAt();
        builder.cycles = internalGetCycles();
        builder.deletedAt = internalGetDeletedAt();
        builder.description = internalGetDescription();
        builder.subscription = internalGetSubscription();
        builder.subscriptionItem = internalGetSubscriptionItem();
        return builder;
    }

    /**
     * Class to build instances of {@link GetDiscountResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> id;
        private OptionalNullable<Double> value;
        private OptionalNullable<String> discountType;
        private OptionalNullable<String> status;
        private OptionalNullable<LocalDateTime> createdAt;
        private OptionalNullable<Integer> cycles;
        private OptionalNullable<LocalDateTime> deletedAt;
        private OptionalNullable<String> description;
        private OptionalNullable<GetSubscriptionResponse> subscription;
        private OptionalNullable<GetSubscriptionItemResponse> subscriptionItem;



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  Double value for value.
         * @return Builder
         */
        public Builder value(Double value) {
            this.value = OptionalNullable.of(value);
            return this;
        }

        /**
         * UnSetter for value.
         * @return Builder
         */
        public Builder unsetValue() {
            value = null;
            return this;
        }

        /**
         * Setter for discountType.
         * @param  discountType  String value for discountType.
         * @return Builder
         */
        public Builder discountType(String discountType) {
            this.discountType = OptionalNullable.of(discountType);
            return this;
        }

        /**
         * UnSetter for discountType.
         * @return Builder
         */
        public Builder unsetDiscountType() {
            discountType = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for cycles.
         * @param  cycles  Integer value for cycles.
         * @return Builder
         */
        public Builder cycles(Integer cycles) {
            this.cycles = OptionalNullable.of(cycles);
            return this;
        }

        /**
         * UnSetter for cycles.
         * @return Builder
         */
        public Builder unsetCycles() {
            cycles = null;
            return this;
        }

        /**
         * Setter for deletedAt.
         * @param  deletedAt  LocalDateTime value for deletedAt.
         * @return Builder
         */
        public Builder deletedAt(LocalDateTime deletedAt) {
            this.deletedAt = OptionalNullable.of(deletedAt);
            return this;
        }

        /**
         * UnSetter for deletedAt.
         * @return Builder
         */
        public Builder unsetDeletedAt() {
            deletedAt = null;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = OptionalNullable.of(description);
            return this;
        }

        /**
         * UnSetter for description.
         * @return Builder
         */
        public Builder unsetDescription() {
            description = null;
            return this;
        }

        /**
         * Setter for subscription.
         * @param  subscription  GetSubscriptionResponse value for subscription.
         * @return Builder
         */
        public Builder subscription(GetSubscriptionResponse subscription) {
            this.subscription = OptionalNullable.of(subscription);
            return this;
        }

        /**
         * UnSetter for subscription.
         * @return Builder
         */
        public Builder unsetSubscription() {
            subscription = null;
            return this;
        }

        /**
         * Setter for subscriptionItem.
         * @param  subscriptionItem  GetSubscriptionItemResponse value for subscriptionItem.
         * @return Builder
         */
        public Builder subscriptionItem(GetSubscriptionItemResponse subscriptionItem) {
            this.subscriptionItem = OptionalNullable.of(subscriptionItem);
            return this;
        }

        /**
         * UnSetter for subscriptionItem.
         * @return Builder
         */
        public Builder unsetSubscriptionItem() {
            subscriptionItem = null;
            return this;
        }

        /**
         * Builds a new {@link GetDiscountResponse} object using the set fields.
         * @return {@link GetDiscountResponse}
         */
        public GetDiscountResponse build() {
            return new GetDiscountResponse(id, value, discountType, status, createdAt, cycles,
                    deletedAt, description, subscription, subscriptionItem);
        }
    }
}
