/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.time.LocalDateTime;
import me.pagar.api.DateTimeHelper;

/**
 * This is a model class for GetPayableResponse type.
 */
public class GetPayableResponse {
    private OptionalNullable<Long> id;
    private OptionalNullable<String> status;
    private OptionalNullable<Integer> amount;
    private OptionalNullable<Integer> fee;
    private OptionalNullable<Integer> anticipationFee;
    private OptionalNullable<Integer> fraudCoverageFee;
    private OptionalNullable<Integer> installment;
    private OptionalNullable<Integer> gatewayId;
    private OptionalNullable<String> chargeId;
    private OptionalNullable<String> splitId;
    private OptionalNullable<String> bulkAnticipationId;
    private OptionalNullable<String> anticipationId;
    private OptionalNullable<String> recipientId;
    private OptionalNullable<String> originatorModel;
    private OptionalNullable<String> originatorModelId;
    private OptionalNullable<LocalDateTime> paymentDate;
    private OptionalNullable<LocalDateTime> originalPaymentDate;
    private OptionalNullable<String> type;
    private OptionalNullable<String> paymentMethod;
    private OptionalNullable<LocalDateTime> accrualAt;
    private OptionalNullable<LocalDateTime> createdAt;
    private OptionalNullable<String> liquidationArrangementId;

    /**
     * Default constructor.
     */
    public GetPayableResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  Long value for id.
     * @param  status  String value for status.
     * @param  amount  Integer value for amount.
     * @param  fee  Integer value for fee.
     * @param  anticipationFee  Integer value for anticipationFee.
     * @param  fraudCoverageFee  Integer value for fraudCoverageFee.
     * @param  installment  Integer value for installment.
     * @param  gatewayId  Integer value for gatewayId.
     * @param  chargeId  String value for chargeId.
     * @param  splitId  String value for splitId.
     * @param  bulkAnticipationId  String value for bulkAnticipationId.
     * @param  anticipationId  String value for anticipationId.
     * @param  recipientId  String value for recipientId.
     * @param  originatorModel  String value for originatorModel.
     * @param  originatorModelId  String value for originatorModelId.
     * @param  paymentDate  LocalDateTime value for paymentDate.
     * @param  originalPaymentDate  LocalDateTime value for originalPaymentDate.
     * @param  type  String value for type.
     * @param  paymentMethod  String value for paymentMethod.
     * @param  accrualAt  LocalDateTime value for accrualAt.
     * @param  createdAt  LocalDateTime value for createdAt.
     * @param  liquidationArrangementId  String value for liquidationArrangementId.
     */
    public GetPayableResponse(
            Long id,
            String status,
            Integer amount,
            Integer fee,
            Integer anticipationFee,
            Integer fraudCoverageFee,
            Integer installment,
            Integer gatewayId,
            String chargeId,
            String splitId,
            String bulkAnticipationId,
            String anticipationId,
            String recipientId,
            String originatorModel,
            String originatorModelId,
            LocalDateTime paymentDate,
            LocalDateTime originalPaymentDate,
            String type,
            String paymentMethod,
            LocalDateTime accrualAt,
            LocalDateTime createdAt,
            String liquidationArrangementId) {
        this.id = OptionalNullable.of(id);
        this.status = OptionalNullable.of(status);
        this.amount = OptionalNullable.of(amount);
        this.fee = OptionalNullable.of(fee);
        this.anticipationFee = OptionalNullable.of(anticipationFee);
        this.fraudCoverageFee = OptionalNullable.of(fraudCoverageFee);
        this.installment = OptionalNullable.of(installment);
        this.gatewayId = OptionalNullable.of(gatewayId);
        this.chargeId = OptionalNullable.of(chargeId);
        this.splitId = OptionalNullable.of(splitId);
        this.bulkAnticipationId = OptionalNullable.of(bulkAnticipationId);
        this.anticipationId = OptionalNullable.of(anticipationId);
        this.recipientId = OptionalNullable.of(recipientId);
        this.originatorModel = OptionalNullable.of(originatorModel);
        this.originatorModelId = OptionalNullable.of(originatorModelId);
        this.paymentDate = OptionalNullable.of(paymentDate);
        this.originalPaymentDate = OptionalNullable.of(originalPaymentDate);
        this.type = OptionalNullable.of(type);
        this.paymentMethod = OptionalNullable.of(paymentMethod);
        this.accrualAt = OptionalNullable.of(accrualAt);
        this.createdAt = OptionalNullable.of(createdAt);
        this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetPayableResponse(OptionalNullable<Long> id, OptionalNullable<String> status,
            OptionalNullable<Integer> amount, OptionalNullable<Integer> fee,
            OptionalNullable<Integer> anticipationFee, OptionalNullable<Integer> fraudCoverageFee,
            OptionalNullable<Integer> installment, OptionalNullable<Integer> gatewayId,
            OptionalNullable<String> chargeId, OptionalNullable<String> splitId,
            OptionalNullable<String> bulkAnticipationId, OptionalNullable<String> anticipationId,
            OptionalNullable<String> recipientId, OptionalNullable<String> originatorModel,
            OptionalNullable<String> originatorModelId, OptionalNullable<LocalDateTime> paymentDate,
            OptionalNullable<LocalDateTime> originalPaymentDate, OptionalNullable<String> type,
            OptionalNullable<String> paymentMethod, OptionalNullable<LocalDateTime> accrualAt,
            OptionalNullable<LocalDateTime> createdAt,
            OptionalNullable<String> liquidationArrangementId) {
        this.id = id;
        this.status = status;
        this.amount = amount;
        this.fee = fee;
        this.anticipationFee = anticipationFee;
        this.fraudCoverageFee = fraudCoverageFee;
        this.installment = installment;
        this.gatewayId = gatewayId;
        this.chargeId = chargeId;
        this.splitId = splitId;
        this.bulkAnticipationId = bulkAnticipationId;
        this.anticipationId = anticipationId;
        this.recipientId = recipientId;
        this.originatorModel = originatorModel;
        this.originatorModelId = originatorModelId;
        this.paymentDate = paymentDate;
        this.originalPaymentDate = originalPaymentDate;
        this.type = type;
        this.paymentMethod = paymentMethod;
        this.accrualAt = accrualAt;
        this.createdAt = createdAt;
        this.liquidationArrangementId = liquidationArrangementId;
    }

    /**
     * Internal Getter for Id.
     * @return Returns the Internal Long
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Long> internalGetId() {
        return this.id;
    }

    /**
     * Getter for Id.
     * @return Returns the Long
     */
    public Long getId() {
        return OptionalNullable.getFrom(id);
    }

    /**
     * Setter for Id.
     * @param id Value for Long
     */
    @JsonSetter("id")
    public void setId(Long id) {
        this.id = OptionalNullable.of(id);
    }

    /**
     * UnSetter for Id.
     */
    public void unsetId() {
        id = null;
    }

    /**
     * Internal Getter for Status.
     * @return Returns the Internal String
     */
    @JsonGetter("status")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetStatus() {
        return this.status;
    }

    /**
     * Getter for Status.
     * @return Returns the String
     */
    public String getStatus() {
        return OptionalNullable.getFrom(status);
    }

    /**
     * Setter for Status.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = OptionalNullable.of(status);
    }

    /**
     * UnSetter for Status.
     */
    public void unsetStatus() {
        status = null;
    }

    /**
     * Internal Getter for Amount.
     * @return Returns the Internal Integer
     */
    @JsonGetter("amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAmount() {
        return this.amount;
    }

    /**
     * Getter for Amount.
     * @return Returns the Integer
     */
    public Integer getAmount() {
        return OptionalNullable.getFrom(amount);
    }

    /**
     * Setter for Amount.
     * @param amount Value for Integer
     */
    @JsonSetter("amount")
    public void setAmount(Integer amount) {
        this.amount = OptionalNullable.of(amount);
    }

    /**
     * UnSetter for Amount.
     */
    public void unsetAmount() {
        amount = null;
    }

    /**
     * Internal Getter for Fee.
     * @return Returns the Internal Integer
     */
    @JsonGetter("fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFee() {
        return this.fee;
    }

    /**
     * Getter for Fee.
     * @return Returns the Integer
     */
    public Integer getFee() {
        return OptionalNullable.getFrom(fee);
    }

    /**
     * Setter for Fee.
     * @param fee Value for Integer
     */
    @JsonSetter("fee")
    public void setFee(Integer fee) {
        this.fee = OptionalNullable.of(fee);
    }

    /**
     * UnSetter for Fee.
     */
    public void unsetFee() {
        fee = null;
    }

    /**
     * Internal Getter for AnticipationFee.
     * @return Returns the Internal Integer
     */
    @JsonGetter("anticipation_fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAnticipationFee() {
        return this.anticipationFee;
    }

    /**
     * Getter for AnticipationFee.
     * @return Returns the Integer
     */
    public Integer getAnticipationFee() {
        return OptionalNullable.getFrom(anticipationFee);
    }

    /**
     * Setter for AnticipationFee.
     * @param anticipationFee Value for Integer
     */
    @JsonSetter("anticipation_fee")
    public void setAnticipationFee(Integer anticipationFee) {
        this.anticipationFee = OptionalNullable.of(anticipationFee);
    }

    /**
     * UnSetter for AnticipationFee.
     */
    public void unsetAnticipationFee() {
        anticipationFee = null;
    }

    /**
     * Internal Getter for FraudCoverageFee.
     * @return Returns the Internal Integer
     */
    @JsonGetter("fraud_coverage_fee")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetFraudCoverageFee() {
        return this.fraudCoverageFee;
    }

    /**
     * Getter for FraudCoverageFee.
     * @return Returns the Integer
     */
    public Integer getFraudCoverageFee() {
        return OptionalNullable.getFrom(fraudCoverageFee);
    }

    /**
     * Setter for FraudCoverageFee.
     * @param fraudCoverageFee Value for Integer
     */
    @JsonSetter("fraud_coverage_fee")
    public void setFraudCoverageFee(Integer fraudCoverageFee) {
        this.fraudCoverageFee = OptionalNullable.of(fraudCoverageFee);
    }

    /**
     * UnSetter for FraudCoverageFee.
     */
    public void unsetFraudCoverageFee() {
        fraudCoverageFee = null;
    }

    /**
     * Internal Getter for Installment.
     * @return Returns the Internal Integer
     */
    @JsonGetter("installment")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetInstallment() {
        return this.installment;
    }

    /**
     * Getter for Installment.
     * @return Returns the Integer
     */
    public Integer getInstallment() {
        return OptionalNullable.getFrom(installment);
    }

    /**
     * Setter for Installment.
     * @param installment Value for Integer
     */
    @JsonSetter("installment")
    public void setInstallment(Integer installment) {
        this.installment = OptionalNullable.of(installment);
    }

    /**
     * UnSetter for Installment.
     */
    public void unsetInstallment() {
        installment = null;
    }

    /**
     * Internal Getter for GatewayId.
     * @return Returns the Internal Integer
     */
    @JsonGetter("gateway_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetGatewayId() {
        return this.gatewayId;
    }

    /**
     * Getter for GatewayId.
     * @return Returns the Integer
     */
    public Integer getGatewayId() {
        return OptionalNullable.getFrom(gatewayId);
    }

    /**
     * Setter for GatewayId.
     * @param gatewayId Value for Integer
     */
    @JsonSetter("gateway_id")
    public void setGatewayId(Integer gatewayId) {
        this.gatewayId = OptionalNullable.of(gatewayId);
    }

    /**
     * UnSetter for GatewayId.
     */
    public void unsetGatewayId() {
        gatewayId = null;
    }

    /**
     * Internal Getter for ChargeId.
     * @return Returns the Internal String
     */
    @JsonGetter("charge_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetChargeId() {
        return this.chargeId;
    }

    /**
     * Getter for ChargeId.
     * @return Returns the String
     */
    public String getChargeId() {
        return OptionalNullable.getFrom(chargeId);
    }

    /**
     * Setter for ChargeId.
     * @param chargeId Value for String
     */
    @JsonSetter("charge_id")
    public void setChargeId(String chargeId) {
        this.chargeId = OptionalNullable.of(chargeId);
    }

    /**
     * UnSetter for ChargeId.
     */
    public void unsetChargeId() {
        chargeId = null;
    }

    /**
     * Internal Getter for SplitId.
     * @return Returns the Internal String
     */
    @JsonGetter("split_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSplitId() {
        return this.splitId;
    }

    /**
     * Getter for SplitId.
     * @return Returns the String
     */
    public String getSplitId() {
        return OptionalNullable.getFrom(splitId);
    }

    /**
     * Setter for SplitId.
     * @param splitId Value for String
     */
    @JsonSetter("split_id")
    public void setSplitId(String splitId) {
        this.splitId = OptionalNullable.of(splitId);
    }

    /**
     * UnSetter for SplitId.
     */
    public void unsetSplitId() {
        splitId = null;
    }

    /**
     * Internal Getter for BulkAnticipationId.
     * @return Returns the Internal String
     */
    @JsonGetter("bulk_anticipation_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBulkAnticipationId() {
        return this.bulkAnticipationId;
    }

    /**
     * Getter for BulkAnticipationId.
     * @return Returns the String
     */
    public String getBulkAnticipationId() {
        return OptionalNullable.getFrom(bulkAnticipationId);
    }

    /**
     * Setter for BulkAnticipationId.
     * @param bulkAnticipationId Value for String
     */
    @JsonSetter("bulk_anticipation_id")
    public void setBulkAnticipationId(String bulkAnticipationId) {
        this.bulkAnticipationId = OptionalNullable.of(bulkAnticipationId);
    }

    /**
     * UnSetter for BulkAnticipationId.
     */
    public void unsetBulkAnticipationId() {
        bulkAnticipationId = null;
    }

    /**
     * Internal Getter for AnticipationId.
     * @return Returns the Internal String
     */
    @JsonGetter("anticipation_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetAnticipationId() {
        return this.anticipationId;
    }

    /**
     * Getter for AnticipationId.
     * @return Returns the String
     */
    public String getAnticipationId() {
        return OptionalNullable.getFrom(anticipationId);
    }

    /**
     * Setter for AnticipationId.
     * @param anticipationId Value for String
     */
    @JsonSetter("anticipation_id")
    public void setAnticipationId(String anticipationId) {
        this.anticipationId = OptionalNullable.of(anticipationId);
    }

    /**
     * UnSetter for AnticipationId.
     */
    public void unsetAnticipationId() {
        anticipationId = null;
    }

    /**
     * Internal Getter for RecipientId.
     * @return Returns the Internal String
     */
    @JsonGetter("recipient_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetRecipientId() {
        return this.recipientId;
    }

    /**
     * Getter for RecipientId.
     * @return Returns the String
     */
    public String getRecipientId() {
        return OptionalNullable.getFrom(recipientId);
    }

    /**
     * Setter for RecipientId.
     * @param recipientId Value for String
     */
    @JsonSetter("recipient_id")
    public void setRecipientId(String recipientId) {
        this.recipientId = OptionalNullable.of(recipientId);
    }

    /**
     * UnSetter for RecipientId.
     */
    public void unsetRecipientId() {
        recipientId = null;
    }

    /**
     * Internal Getter for OriginatorModel.
     * @return Returns the Internal String
     */
    @JsonGetter("originator_model")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginatorModel() {
        return this.originatorModel;
    }

    /**
     * Getter for OriginatorModel.
     * @return Returns the String
     */
    public String getOriginatorModel() {
        return OptionalNullable.getFrom(originatorModel);
    }

    /**
     * Setter for OriginatorModel.
     * @param originatorModel Value for String
     */
    @JsonSetter("originator_model")
    public void setOriginatorModel(String originatorModel) {
        this.originatorModel = OptionalNullable.of(originatorModel);
    }

    /**
     * UnSetter for OriginatorModel.
     */
    public void unsetOriginatorModel() {
        originatorModel = null;
    }

    /**
     * Internal Getter for OriginatorModelId.
     * @return Returns the Internal String
     */
    @JsonGetter("originator_model_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetOriginatorModelId() {
        return this.originatorModelId;
    }

    /**
     * Getter for OriginatorModelId.
     * @return Returns the String
     */
    public String getOriginatorModelId() {
        return OptionalNullable.getFrom(originatorModelId);
    }

    /**
     * Setter for OriginatorModelId.
     * @param originatorModelId Value for String
     */
    @JsonSetter("originator_model_id")
    public void setOriginatorModelId(String originatorModelId) {
        this.originatorModelId = OptionalNullable.of(originatorModelId);
    }

    /**
     * UnSetter for OriginatorModelId.
     */
    public void unsetOriginatorModelId() {
        originatorModelId = null;
    }

    /**
     * Internal Getter for PaymentDate.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("payment_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetPaymentDate() {
        return this.paymentDate;
    }

    /**
     * Getter for PaymentDate.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getPaymentDate() {
        return OptionalNullable.getFrom(paymentDate);
    }

    /**
     * Setter for PaymentDate.
     * @param paymentDate Value for LocalDateTime
     */
    @JsonSetter("payment_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setPaymentDate(LocalDateTime paymentDate) {
        this.paymentDate = OptionalNullable.of(paymentDate);
    }

    /**
     * UnSetter for PaymentDate.
     */
    public void unsetPaymentDate() {
        paymentDate = null;
    }

    /**
     * Internal Getter for OriginalPaymentDate.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("original_payment_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetOriginalPaymentDate() {
        return this.originalPaymentDate;
    }

    /**
     * Getter for OriginalPaymentDate.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getOriginalPaymentDate() {
        return OptionalNullable.getFrom(originalPaymentDate);
    }

    /**
     * Setter for OriginalPaymentDate.
     * @param originalPaymentDate Value for LocalDateTime
     */
    @JsonSetter("original_payment_date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setOriginalPaymentDate(LocalDateTime originalPaymentDate) {
        this.originalPaymentDate = OptionalNullable.of(originalPaymentDate);
    }

    /**
     * UnSetter for OriginalPaymentDate.
     */
    public void unsetOriginalPaymentDate() {
        originalPaymentDate = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for PaymentMethod.
     * @return Returns the Internal String
     */
    @JsonGetter("payment_method")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetPaymentMethod() {
        return this.paymentMethod;
    }

    /**
     * Getter for PaymentMethod.
     * @return Returns the String
     */
    public String getPaymentMethod() {
        return OptionalNullable.getFrom(paymentMethod);
    }

    /**
     * Setter for PaymentMethod.
     * @param paymentMethod Value for String
     */
    @JsonSetter("payment_method")
    public void setPaymentMethod(String paymentMethod) {
        this.paymentMethod = OptionalNullable.of(paymentMethod);
    }

    /**
     * UnSetter for PaymentMethod.
     */
    public void unsetPaymentMethod() {
        paymentMethod = null;
    }

    /**
     * Internal Getter for AccrualAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("accrual_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetAccrualAt() {
        return this.accrualAt;
    }

    /**
     * Getter for AccrualAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getAccrualAt() {
        return OptionalNullable.getFrom(accrualAt);
    }

    /**
     * Setter for AccrualAt.
     * @param accrualAt Value for LocalDateTime
     */
    @JsonSetter("accrual_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setAccrualAt(LocalDateTime accrualAt) {
        this.accrualAt = OptionalNullable.of(accrualAt);
    }

    /**
     * UnSetter for AccrualAt.
     */
    public void unsetAccrualAt() {
        accrualAt = null;
    }

    /**
     * Internal Getter for CreatedAt.
     * @return Returns the Internal LocalDateTime
     */
    @JsonGetter("created_at")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Rfc8601DateTimeSerializer.class)
    protected OptionalNullable<LocalDateTime> internalGetCreatedAt() {
        return this.createdAt;
    }

    /**
     * Getter for CreatedAt.
     * @return Returns the LocalDateTime
     */
    public LocalDateTime getCreatedAt() {
        return OptionalNullable.getFrom(createdAt);
    }

    /**
     * Setter for CreatedAt.
     * @param createdAt Value for LocalDateTime
     */
    @JsonSetter("created_at")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = OptionalNullable.of(createdAt);
    }

    /**
     * UnSetter for CreatedAt.
     */
    public void unsetCreatedAt() {
        createdAt = null;
    }

    /**
     * Internal Getter for LiquidationArrangementId.
     * @return Returns the Internal String
     */
    @JsonGetter("liquidation_arrangement_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetLiquidationArrangementId() {
        return this.liquidationArrangementId;
    }

    /**
     * Getter for LiquidationArrangementId.
     * @return Returns the String
     */
    public String getLiquidationArrangementId() {
        return OptionalNullable.getFrom(liquidationArrangementId);
    }

    /**
     * Setter for LiquidationArrangementId.
     * @param liquidationArrangementId Value for String
     */
    @JsonSetter("liquidation_arrangement_id")
    public void setLiquidationArrangementId(String liquidationArrangementId) {
        this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
    }

    /**
     * UnSetter for LiquidationArrangementId.
     */
    public void unsetLiquidationArrangementId() {
        liquidationArrangementId = null;
    }

    /**
     * Converts this GetPayableResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetPayableResponse [" + "id=" + id + ", status=" + status + ", amount=" + amount
                + ", fee=" + fee + ", anticipationFee=" + anticipationFee + ", fraudCoverageFee="
                + fraudCoverageFee + ", installment=" + installment + ", gatewayId=" + gatewayId
                + ", chargeId=" + chargeId + ", splitId=" + splitId + ", bulkAnticipationId="
                + bulkAnticipationId + ", anticipationId=" + anticipationId + ", recipientId="
                + recipientId + ", originatorModel=" + originatorModel + ", originatorModelId="
                + originatorModelId + ", paymentDate=" + paymentDate + ", originalPaymentDate="
                + originalPaymentDate + ", type=" + type + ", paymentMethod=" + paymentMethod
                + ", accrualAt=" + accrualAt + ", createdAt=" + createdAt
                + ", liquidationArrangementId=" + liquidationArrangementId + "]";
    }

    /**
     * Builds a new {@link GetPayableResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetPayableResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.id = internalGetId();
        builder.status = internalGetStatus();
        builder.amount = internalGetAmount();
        builder.fee = internalGetFee();
        builder.anticipationFee = internalGetAnticipationFee();
        builder.fraudCoverageFee = internalGetFraudCoverageFee();
        builder.installment = internalGetInstallment();
        builder.gatewayId = internalGetGatewayId();
        builder.chargeId = internalGetChargeId();
        builder.splitId = internalGetSplitId();
        builder.bulkAnticipationId = internalGetBulkAnticipationId();
        builder.anticipationId = internalGetAnticipationId();
        builder.recipientId = internalGetRecipientId();
        builder.originatorModel = internalGetOriginatorModel();
        builder.originatorModelId = internalGetOriginatorModelId();
        builder.paymentDate = internalGetPaymentDate();
        builder.originalPaymentDate = internalGetOriginalPaymentDate();
        builder.type = internalGetType();
        builder.paymentMethod = internalGetPaymentMethod();
        builder.accrualAt = internalGetAccrualAt();
        builder.createdAt = internalGetCreatedAt();
        builder.liquidationArrangementId = internalGetLiquidationArrangementId();
        return builder;
    }

    /**
     * Class to build instances of {@link GetPayableResponse}.
     */
    public static class Builder {
        private OptionalNullable<Long> id;
        private OptionalNullable<String> status;
        private OptionalNullable<Integer> amount;
        private OptionalNullable<Integer> fee;
        private OptionalNullable<Integer> anticipationFee;
        private OptionalNullable<Integer> fraudCoverageFee;
        private OptionalNullable<Integer> installment;
        private OptionalNullable<Integer> gatewayId;
        private OptionalNullable<String> chargeId;
        private OptionalNullable<String> splitId;
        private OptionalNullable<String> bulkAnticipationId;
        private OptionalNullable<String> anticipationId;
        private OptionalNullable<String> recipientId;
        private OptionalNullable<String> originatorModel;
        private OptionalNullable<String> originatorModelId;
        private OptionalNullable<LocalDateTime> paymentDate;
        private OptionalNullable<LocalDateTime> originalPaymentDate;
        private OptionalNullable<String> type;
        private OptionalNullable<String> paymentMethod;
        private OptionalNullable<LocalDateTime> accrualAt;
        private OptionalNullable<LocalDateTime> createdAt;
        private OptionalNullable<String> liquidationArrangementId;



        /**
         * Setter for id.
         * @param  id  Long value for id.
         * @return Builder
         */
        public Builder id(Long id) {
            this.id = OptionalNullable.of(id);
            return this;
        }

        /**
         * UnSetter for id.
         * @return Builder
         */
        public Builder unsetId() {
            id = null;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = OptionalNullable.of(status);
            return this;
        }

        /**
         * UnSetter for status.
         * @return Builder
         */
        public Builder unsetStatus() {
            status = null;
            return this;
        }

        /**
         * Setter for amount.
         * @param  amount  Integer value for amount.
         * @return Builder
         */
        public Builder amount(Integer amount) {
            this.amount = OptionalNullable.of(amount);
            return this;
        }

        /**
         * UnSetter for amount.
         * @return Builder
         */
        public Builder unsetAmount() {
            amount = null;
            return this;
        }

        /**
         * Setter for fee.
         * @param  fee  Integer value for fee.
         * @return Builder
         */
        public Builder fee(Integer fee) {
            this.fee = OptionalNullable.of(fee);
            return this;
        }

        /**
         * UnSetter for fee.
         * @return Builder
         */
        public Builder unsetFee() {
            fee = null;
            return this;
        }

        /**
         * Setter for anticipationFee.
         * @param  anticipationFee  Integer value for anticipationFee.
         * @return Builder
         */
        public Builder anticipationFee(Integer anticipationFee) {
            this.anticipationFee = OptionalNullable.of(anticipationFee);
            return this;
        }

        /**
         * UnSetter for anticipationFee.
         * @return Builder
         */
        public Builder unsetAnticipationFee() {
            anticipationFee = null;
            return this;
        }

        /**
         * Setter for fraudCoverageFee.
         * @param  fraudCoverageFee  Integer value for fraudCoverageFee.
         * @return Builder
         */
        public Builder fraudCoverageFee(Integer fraudCoverageFee) {
            this.fraudCoverageFee = OptionalNullable.of(fraudCoverageFee);
            return this;
        }

        /**
         * UnSetter for fraudCoverageFee.
         * @return Builder
         */
        public Builder unsetFraudCoverageFee() {
            fraudCoverageFee = null;
            return this;
        }

        /**
         * Setter for installment.
         * @param  installment  Integer value for installment.
         * @return Builder
         */
        public Builder installment(Integer installment) {
            this.installment = OptionalNullable.of(installment);
            return this;
        }

        /**
         * UnSetter for installment.
         * @return Builder
         */
        public Builder unsetInstallment() {
            installment = null;
            return this;
        }

        /**
         * Setter for gatewayId.
         * @param  gatewayId  Integer value for gatewayId.
         * @return Builder
         */
        public Builder gatewayId(Integer gatewayId) {
            this.gatewayId = OptionalNullable.of(gatewayId);
            return this;
        }

        /**
         * UnSetter for gatewayId.
         * @return Builder
         */
        public Builder unsetGatewayId() {
            gatewayId = null;
            return this;
        }

        /**
         * Setter for chargeId.
         * @param  chargeId  String value for chargeId.
         * @return Builder
         */
        public Builder chargeId(String chargeId) {
            this.chargeId = OptionalNullable.of(chargeId);
            return this;
        }

        /**
         * UnSetter for chargeId.
         * @return Builder
         */
        public Builder unsetChargeId() {
            chargeId = null;
            return this;
        }

        /**
         * Setter for splitId.
         * @param  splitId  String value for splitId.
         * @return Builder
         */
        public Builder splitId(String splitId) {
            this.splitId = OptionalNullable.of(splitId);
            return this;
        }

        /**
         * UnSetter for splitId.
         * @return Builder
         */
        public Builder unsetSplitId() {
            splitId = null;
            return this;
        }

        /**
         * Setter for bulkAnticipationId.
         * @param  bulkAnticipationId  String value for bulkAnticipationId.
         * @return Builder
         */
        public Builder bulkAnticipationId(String bulkAnticipationId) {
            this.bulkAnticipationId = OptionalNullable.of(bulkAnticipationId);
            return this;
        }

        /**
         * UnSetter for bulkAnticipationId.
         * @return Builder
         */
        public Builder unsetBulkAnticipationId() {
            bulkAnticipationId = null;
            return this;
        }

        /**
         * Setter for anticipationId.
         * @param  anticipationId  String value for anticipationId.
         * @return Builder
         */
        public Builder anticipationId(String anticipationId) {
            this.anticipationId = OptionalNullable.of(anticipationId);
            return this;
        }

        /**
         * UnSetter for anticipationId.
         * @return Builder
         */
        public Builder unsetAnticipationId() {
            anticipationId = null;
            return this;
        }

        /**
         * Setter for recipientId.
         * @param  recipientId  String value for recipientId.
         * @return Builder
         */
        public Builder recipientId(String recipientId) {
            this.recipientId = OptionalNullable.of(recipientId);
            return this;
        }

        /**
         * UnSetter for recipientId.
         * @return Builder
         */
        public Builder unsetRecipientId() {
            recipientId = null;
            return this;
        }

        /**
         * Setter for originatorModel.
         * @param  originatorModel  String value for originatorModel.
         * @return Builder
         */
        public Builder originatorModel(String originatorModel) {
            this.originatorModel = OptionalNullable.of(originatorModel);
            return this;
        }

        /**
         * UnSetter for originatorModel.
         * @return Builder
         */
        public Builder unsetOriginatorModel() {
            originatorModel = null;
            return this;
        }

        /**
         * Setter for originatorModelId.
         * @param  originatorModelId  String value for originatorModelId.
         * @return Builder
         */
        public Builder originatorModelId(String originatorModelId) {
            this.originatorModelId = OptionalNullable.of(originatorModelId);
            return this;
        }

        /**
         * UnSetter for originatorModelId.
         * @return Builder
         */
        public Builder unsetOriginatorModelId() {
            originatorModelId = null;
            return this;
        }

        /**
         * Setter for paymentDate.
         * @param  paymentDate  LocalDateTime value for paymentDate.
         * @return Builder
         */
        public Builder paymentDate(LocalDateTime paymentDate) {
            this.paymentDate = OptionalNullable.of(paymentDate);
            return this;
        }

        /**
         * UnSetter for paymentDate.
         * @return Builder
         */
        public Builder unsetPaymentDate() {
            paymentDate = null;
            return this;
        }

        /**
         * Setter for originalPaymentDate.
         * @param  originalPaymentDate  LocalDateTime value for originalPaymentDate.
         * @return Builder
         */
        public Builder originalPaymentDate(LocalDateTime originalPaymentDate) {
            this.originalPaymentDate = OptionalNullable.of(originalPaymentDate);
            return this;
        }

        /**
         * UnSetter for originalPaymentDate.
         * @return Builder
         */
        public Builder unsetOriginalPaymentDate() {
            originalPaymentDate = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for paymentMethod.
         * @param  paymentMethod  String value for paymentMethod.
         * @return Builder
         */
        public Builder paymentMethod(String paymentMethod) {
            this.paymentMethod = OptionalNullable.of(paymentMethod);
            return this;
        }

        /**
         * UnSetter for paymentMethod.
         * @return Builder
         */
        public Builder unsetPaymentMethod() {
            paymentMethod = null;
            return this;
        }

        /**
         * Setter for accrualAt.
         * @param  accrualAt  LocalDateTime value for accrualAt.
         * @return Builder
         */
        public Builder accrualAt(LocalDateTime accrualAt) {
            this.accrualAt = OptionalNullable.of(accrualAt);
            return this;
        }

        /**
         * UnSetter for accrualAt.
         * @return Builder
         */
        public Builder unsetAccrualAt() {
            accrualAt = null;
            return this;
        }

        /**
         * Setter for createdAt.
         * @param  createdAt  LocalDateTime value for createdAt.
         * @return Builder
         */
        public Builder createdAt(LocalDateTime createdAt) {
            this.createdAt = OptionalNullable.of(createdAt);
            return this;
        }

        /**
         * UnSetter for createdAt.
         * @return Builder
         */
        public Builder unsetCreatedAt() {
            createdAt = null;
            return this;
        }

        /**
         * Setter for liquidationArrangementId.
         * @param  liquidationArrangementId  String value for liquidationArrangementId.
         * @return Builder
         */
        public Builder liquidationArrangementId(String liquidationArrangementId) {
            this.liquidationArrangementId = OptionalNullable.of(liquidationArrangementId);
            return this;
        }

        /**
         * UnSetter for liquidationArrangementId.
         * @return Builder
         */
        public Builder unsetLiquidationArrangementId() {
            liquidationArrangementId = null;
            return this;
        }

        /**
         * Builds a new {@link GetPayableResponse} object using the set fields.
         * @return {@link GetPayableResponse}
         */
        public GetPayableResponse build() {
            return new GetPayableResponse(id, status, amount, fee, anticipationFee,
                    fraudCoverageFee, installment, gatewayId, chargeId, splitId, bulkAnticipationId,
                    anticipationId, recipientId, originatorModel, originatorModelId, paymentDate,
                    originalPaymentDate, type, paymentMethod, accrualAt, createdAt,
                    liquidationArrangementId);
        }
    }
}
