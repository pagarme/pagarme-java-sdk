/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetPixPayerResponse type.
 */
public class GetPixPayerResponse {
    private OptionalNullable<String> name;
    private OptionalNullable<String> document;
    private OptionalNullable<String> documentType;
    private OptionalNullable<GetPixBankAccountResponse> bankAccount;

    /**
     * Default constructor.
     */
    public GetPixPayerResponse() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  document  String value for document.
     * @param  documentType  String value for documentType.
     * @param  bankAccount  GetPixBankAccountResponse value for bankAccount.
     */
    public GetPixPayerResponse(
            String name,
            String document,
            String documentType,
            GetPixBankAccountResponse bankAccount) {
        this.name = OptionalNullable.of(name);
        this.document = OptionalNullable.of(document);
        this.documentType = OptionalNullable.of(documentType);
        this.bankAccount = OptionalNullable.of(bankAccount);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetPixPayerResponse(OptionalNullable<String> name, OptionalNullable<String> document,
            OptionalNullable<String> documentType,
            OptionalNullable<GetPixBankAccountResponse> bankAccount) {
        this.name = name;
        this.document = document;
        this.documentType = documentType;
        this.bankAccount = bankAccount;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for Document.
     * @return Returns the Internal String
     */
    @JsonGetter("document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocument() {
        return this.document;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    public String getDocument() {
        return OptionalNullable.getFrom(document);
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = OptionalNullable.of(document);
    }

    /**
     * UnSetter for Document.
     */
    public void unsetDocument() {
        document = null;
    }

    /**
     * Internal Getter for DocumentType.
     * @return Returns the Internal String
     */
    @JsonGetter("document_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocumentType() {
        return this.documentType;
    }

    /**
     * Getter for DocumentType.
     * @return Returns the String
     */
    public String getDocumentType() {
        return OptionalNullable.getFrom(documentType);
    }

    /**
     * Setter for DocumentType.
     * @param documentType Value for String
     */
    @JsonSetter("document_type")
    public void setDocumentType(String documentType) {
        this.documentType = OptionalNullable.of(documentType);
    }

    /**
     * UnSetter for DocumentType.
     */
    public void unsetDocumentType() {
        documentType = null;
    }

    /**
     * Internal Getter for BankAccount.
     * @return Returns the Internal GetPixBankAccountResponse
     */
    @JsonGetter("bank_account")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetPixBankAccountResponse> internalGetBankAccount() {
        return this.bankAccount;
    }

    /**
     * Getter for BankAccount.
     * @return Returns the GetPixBankAccountResponse
     */
    public GetPixBankAccountResponse getBankAccount() {
        return OptionalNullable.getFrom(bankAccount);
    }

    /**
     * Setter for BankAccount.
     * @param bankAccount Value for GetPixBankAccountResponse
     */
    @JsonSetter("bank_account")
    public void setBankAccount(GetPixBankAccountResponse bankAccount) {
        this.bankAccount = OptionalNullable.of(bankAccount);
    }

    /**
     * UnSetter for BankAccount.
     */
    public void unsetBankAccount() {
        bankAccount = null;
    }

    /**
     * Converts this GetPixPayerResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetPixPayerResponse [" + "name=" + name + ", document=" + document
                + ", documentType=" + documentType + ", bankAccount=" + bankAccount + "]";
    }

    /**
     * Builds a new {@link GetPixPayerResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetPixPayerResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.name = internalGetName();
        builder.document = internalGetDocument();
        builder.documentType = internalGetDocumentType();
        builder.bankAccount = internalGetBankAccount();
        return builder;
    }

    /**
     * Class to build instances of {@link GetPixPayerResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> name;
        private OptionalNullable<String> document;
        private OptionalNullable<String> documentType;
        private OptionalNullable<GetPixBankAccountResponse> bankAccount;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = OptionalNullable.of(document);
            return this;
        }

        /**
         * UnSetter for document.
         * @return Builder
         */
        public Builder unsetDocument() {
            document = null;
            return this;
        }

        /**
         * Setter for documentType.
         * @param  documentType  String value for documentType.
         * @return Builder
         */
        public Builder documentType(String documentType) {
            this.documentType = OptionalNullable.of(documentType);
            return this;
        }

        /**
         * UnSetter for documentType.
         * @return Builder
         */
        public Builder unsetDocumentType() {
            documentType = null;
            return this;
        }

        /**
         * Setter for bankAccount.
         * @param  bankAccount  GetPixBankAccountResponse value for bankAccount.
         * @return Builder
         */
        public Builder bankAccount(GetPixBankAccountResponse bankAccount) {
            this.bankAccount = OptionalNullable.of(bankAccount);
            return this;
        }

        /**
         * UnSetter for bankAccount.
         * @return Builder
         */
        public Builder unsetBankAccount() {
            bankAccount = null;
            return this;
        }

        /**
         * Builds a new {@link GetPixPayerResponse} object using the set fields.
         * @return {@link GetPixPayerResponse}
         */
        public GetPixPayerResponse build() {
            return new GetPixPayerResponse(name, document, documentType, bankAccount);
        }
    }
}
