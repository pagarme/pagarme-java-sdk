/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;
import java.util.List;

/**
 * This is a model class for GetManagingPartnerResponse type.
 */
public class GetManagingPartnerResponse {
    private OptionalNullable<String> name;
    private OptionalNullable<String> email;
    private OptionalNullable<String> document;
    private OptionalNullable<String> type;
    private OptionalNullable<String> motherName;
    private OptionalNullable<String> birthdate;
    private OptionalNullable<String> monthlyIncome;
    private OptionalNullable<String> professionalOccupation;
    private Boolean selfDeclaredRepresentative;
    private OptionalNullable<GetRegisterInformationAddressResponse> address;
    private OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers;

    /**
     * Default constructor.
     */
    public GetManagingPartnerResponse() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  motherName  String value for motherName.
     * @param  birthdate  String value for birthdate.
     * @param  monthlyIncome  String value for monthlyIncome.
     * @param  professionalOccupation  String value for professionalOccupation.
     * @param  selfDeclaredRepresentative  Boolean value for selfDeclaredRepresentative.
     * @param  address  GetRegisterInformationAddressResponse value for address.
     * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
     */
    public GetManagingPartnerResponse(
            String name,
            String email,
            String document,
            String type,
            String motherName,
            String birthdate,
            String monthlyIncome,
            String professionalOccupation,
            Boolean selfDeclaredRepresentative,
            GetRegisterInformationAddressResponse address,
            List<GetPhoneNumberResponse> phoneNumbers) {
        this.name = OptionalNullable.of(name);
        this.email = OptionalNullable.of(email);
        this.document = OptionalNullable.of(document);
        this.type = OptionalNullable.of(type);
        this.motherName = OptionalNullable.of(motherName);
        this.birthdate = OptionalNullable.of(birthdate);
        this.monthlyIncome = OptionalNullable.of(monthlyIncome);
        this.professionalOccupation = OptionalNullable.of(professionalOccupation);
        this.selfDeclaredRepresentative = selfDeclaredRepresentative;
        this.address = OptionalNullable.of(address);
        this.phoneNumbers = OptionalNullable.of(phoneNumbers);
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  email  String value for email.
     * @param  document  String value for document.
     * @param  type  String value for type.
     * @param  motherName  String value for motherName.
     * @param  birthdate  String value for birthdate.
     * @param  monthlyIncome  String value for monthlyIncome.
     * @param  professionalOccupation  String value for professionalOccupation.
     * @param  selfDeclaredRepresentative  Boolean value for selfDeclaredRepresentative.
     * @param  address  GetRegisterInformationAddressResponse value for address.
     * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
     */

    protected GetManagingPartnerResponse(OptionalNullable<String> name,
            OptionalNullable<String> email, OptionalNullable<String> document,
            OptionalNullable<String> type, OptionalNullable<String> motherName,
            OptionalNullable<String> birthdate, OptionalNullable<String> monthlyIncome,
            OptionalNullable<String> professionalOccupation, Boolean selfDeclaredRepresentative,
            OptionalNullable<GetRegisterInformationAddressResponse> address,
            OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers) {
        this.name = name;
        this.email = email;
        this.document = document;
        this.type = type;
        this.motherName = motherName;
        this.birthdate = birthdate;
        this.monthlyIncome = monthlyIncome;
        this.professionalOccupation = professionalOccupation;
        this.selfDeclaredRepresentative = selfDeclaredRepresentative;
        this.address = address;
        this.phoneNumbers = phoneNumbers;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for Email.
     * @return Returns the Internal String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetEmail() {
        return this.email;
    }

    /**
     * Getter for Email.
     * @return Returns the String
     */
    public String getEmail() {
        return OptionalNullable.getFrom(email);
    }

    /**
     * Setter for Email.
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = OptionalNullable.of(email);
    }

    /**
     * UnSetter for Email.
     */
    public void unsetEmail() {
        email = null;
    }

    /**
     * Internal Getter for Document.
     * @return Returns the Internal String
     */
    @JsonGetter("document")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDocument() {
        return this.document;
    }

    /**
     * Getter for Document.
     * @return Returns the String
     */
    public String getDocument() {
        return OptionalNullable.getFrom(document);
    }

    /**
     * Setter for Document.
     * @param document Value for String
     */
    @JsonSetter("document")
    public void setDocument(String document) {
        this.document = OptionalNullable.of(document);
    }

    /**
     * UnSetter for Document.
     */
    public void unsetDocument() {
        document = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Internal Getter for MotherName.
     * @return Returns the Internal String
     */
    @JsonGetter("mother_name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMotherName() {
        return this.motherName;
    }

    /**
     * Getter for MotherName.
     * @return Returns the String
     */
    public String getMotherName() {
        return OptionalNullable.getFrom(motherName);
    }

    /**
     * Setter for MotherName.
     * @param motherName Value for String
     */
    @JsonSetter("mother_name")
    public void setMotherName(String motherName) {
        this.motherName = OptionalNullable.of(motherName);
    }

    /**
     * UnSetter for MotherName.
     */
    public void unsetMotherName() {
        motherName = null;
    }

    /**
     * Internal Getter for Birthdate.
     * @return Returns the Internal String
     */
    @JsonGetter("birthdate")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBirthdate() {
        return this.birthdate;
    }

    /**
     * Getter for Birthdate.
     * @return Returns the String
     */
    public String getBirthdate() {
        return OptionalNullable.getFrom(birthdate);
    }

    /**
     * Setter for Birthdate.
     * @param birthdate Value for String
     */
    @JsonSetter("birthdate")
    public void setBirthdate(String birthdate) {
        this.birthdate = OptionalNullable.of(birthdate);
    }

    /**
     * UnSetter for Birthdate.
     */
    public void unsetBirthdate() {
        birthdate = null;
    }

    /**
     * Internal Getter for MonthlyIncome.
     * @return Returns the Internal String
     */
    @JsonGetter("monthly_income")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetMonthlyIncome() {
        return this.monthlyIncome;
    }

    /**
     * Getter for MonthlyIncome.
     * @return Returns the String
     */
    public String getMonthlyIncome() {
        return OptionalNullable.getFrom(monthlyIncome);
    }

    /**
     * Setter for MonthlyIncome.
     * @param monthlyIncome Value for String
     */
    @JsonSetter("monthly_income")
    public void setMonthlyIncome(String monthlyIncome) {
        this.monthlyIncome = OptionalNullable.of(monthlyIncome);
    }

    /**
     * UnSetter for MonthlyIncome.
     */
    public void unsetMonthlyIncome() {
        monthlyIncome = null;
    }

    /**
     * Internal Getter for ProfessionalOccupation.
     * @return Returns the Internal String
     */
    @JsonGetter("professional_occupation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetProfessionalOccupation() {
        return this.professionalOccupation;
    }

    /**
     * Getter for ProfessionalOccupation.
     * @return Returns the String
     */
    public String getProfessionalOccupation() {
        return OptionalNullable.getFrom(professionalOccupation);
    }

    /**
     * Setter for ProfessionalOccupation.
     * @param professionalOccupation Value for String
     */
    @JsonSetter("professional_occupation")
    public void setProfessionalOccupation(String professionalOccupation) {
        this.professionalOccupation = OptionalNullable.of(professionalOccupation);
    }

    /**
     * UnSetter for ProfessionalOccupation.
     */
    public void unsetProfessionalOccupation() {
        professionalOccupation = null;
    }

    /**
     * Getter for SelfDeclaredRepresentative.
     * @return Returns the Boolean
     */
    @JsonGetter("self_declared_representative")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSelfDeclaredRepresentative() {
        return selfDeclaredRepresentative;
    }

    /**
     * Setter for SelfDeclaredRepresentative.
     * @param selfDeclaredRepresentative Value for Boolean
     */
    @JsonSetter("self_declared_representative")
    public void setSelfDeclaredRepresentative(Boolean selfDeclaredRepresentative) {
        this.selfDeclaredRepresentative = selfDeclaredRepresentative;
    }

    /**
     * Internal Getter for Address.
     * @return Returns the Internal GetRegisterInformationAddressResponse
     */
    @JsonGetter("address")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetRegisterInformationAddressResponse> internalGetAddress() {
        return this.address;
    }

    /**
     * Getter for Address.
     * @return Returns the GetRegisterInformationAddressResponse
     */
    public GetRegisterInformationAddressResponse getAddress() {
        return OptionalNullable.getFrom(address);
    }

    /**
     * Setter for Address.
     * @param address Value for GetRegisterInformationAddressResponse
     */
    @JsonSetter("address")
    public void setAddress(GetRegisterInformationAddressResponse address) {
        this.address = OptionalNullable.of(address);
    }

    /**
     * UnSetter for Address.
     */
    public void unsetAddress() {
        address = null;
    }

    /**
     * Internal Getter for PhoneNumbers.
     * @return Returns the Internal List of GetPhoneNumberResponse
     */
    @JsonGetter("phone_numbers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<GetPhoneNumberResponse>> internalGetPhoneNumbers() {
        return this.phoneNumbers;
    }

    /**
     * Getter for PhoneNumbers.
     * @return Returns the List of GetPhoneNumberResponse
     */
    public List<GetPhoneNumberResponse> getPhoneNumbers() {
        return OptionalNullable.getFrom(phoneNumbers);
    }

    /**
     * Setter for PhoneNumbers.
     * @param phoneNumbers Value for List of GetPhoneNumberResponse
     */
    @JsonSetter("phone_numbers")
    public void setPhoneNumbers(List<GetPhoneNumberResponse> phoneNumbers) {
        this.phoneNumbers = OptionalNullable.of(phoneNumbers);
    }

    /**
     * UnSetter for PhoneNumbers.
     */
    public void unsetPhoneNumbers() {
        phoneNumbers = null;
    }

    /**
     * Converts this GetManagingPartnerResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetManagingPartnerResponse [" + "name=" + name + ", email=" + email + ", document="
                + document + ", type=" + type + ", motherName=" + motherName + ", birthdate="
                + birthdate + ", monthlyIncome=" + monthlyIncome + ", professionalOccupation="
                + professionalOccupation + ", selfDeclaredRepresentative="
                + selfDeclaredRepresentative + ", address=" + address + ", phoneNumbers="
                + phoneNumbers + "]";
    }

    /**
     * Builds a new {@link GetManagingPartnerResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetManagingPartnerResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .selfDeclaredRepresentative(getSelfDeclaredRepresentative());
        builder.name = internalGetName();
        builder.email = internalGetEmail();
        builder.document = internalGetDocument();
        builder.type = internalGetType();
        builder.motherName = internalGetMotherName();
        builder.birthdate = internalGetBirthdate();
        builder.monthlyIncome = internalGetMonthlyIncome();
        builder.professionalOccupation = internalGetProfessionalOccupation();
        builder.address = internalGetAddress();
        builder.phoneNumbers = internalGetPhoneNumbers();
        return builder;
    }

    /**
     * Class to build instances of {@link GetManagingPartnerResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> name;
        private OptionalNullable<String> email;
        private OptionalNullable<String> document;
        private OptionalNullable<String> type;
        private OptionalNullable<String> motherName;
        private OptionalNullable<String> birthdate;
        private OptionalNullable<String> monthlyIncome;
        private OptionalNullable<String> professionalOccupation;
        private Boolean selfDeclaredRepresentative;
        private OptionalNullable<GetRegisterInformationAddressResponse> address;
        private OptionalNullable<List<GetPhoneNumberResponse>> phoneNumbers;



        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = OptionalNullable.of(email);
            return this;
        }

        /**
         * UnSetter for email.
         * @return Builder
         */
        public Builder unsetEmail() {
            email = null;
            return this;
        }

        /**
         * Setter for document.
         * @param  document  String value for document.
         * @return Builder
         */
        public Builder document(String document) {
            this.document = OptionalNullable.of(document);
            return this;
        }

        /**
         * UnSetter for document.
         * @return Builder
         */
        public Builder unsetDocument() {
            document = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Setter for motherName.
         * @param  motherName  String value for motherName.
         * @return Builder
         */
        public Builder motherName(String motherName) {
            this.motherName = OptionalNullable.of(motherName);
            return this;
        }

        /**
         * UnSetter for motherName.
         * @return Builder
         */
        public Builder unsetMotherName() {
            motherName = null;
            return this;
        }

        /**
         * Setter for birthdate.
         * @param  birthdate  String value for birthdate.
         * @return Builder
         */
        public Builder birthdate(String birthdate) {
            this.birthdate = OptionalNullable.of(birthdate);
            return this;
        }

        /**
         * UnSetter for birthdate.
         * @return Builder
         */
        public Builder unsetBirthdate() {
            birthdate = null;
            return this;
        }

        /**
         * Setter for monthlyIncome.
         * @param  monthlyIncome  String value for monthlyIncome.
         * @return Builder
         */
        public Builder monthlyIncome(String monthlyIncome) {
            this.monthlyIncome = OptionalNullable.of(monthlyIncome);
            return this;
        }

        /**
         * UnSetter for monthlyIncome.
         * @return Builder
         */
        public Builder unsetMonthlyIncome() {
            monthlyIncome = null;
            return this;
        }

        /**
         * Setter for professionalOccupation.
         * @param  professionalOccupation  String value for professionalOccupation.
         * @return Builder
         */
        public Builder professionalOccupation(String professionalOccupation) {
            this.professionalOccupation = OptionalNullable.of(professionalOccupation);
            return this;
        }

        /**
         * UnSetter for professionalOccupation.
         * @return Builder
         */
        public Builder unsetProfessionalOccupation() {
            professionalOccupation = null;
            return this;
        }

        /**
         * Setter for selfDeclaredRepresentative.
         * @param  selfDeclaredRepresentative  Boolean value for selfDeclaredRepresentative.
         * @return Builder
         */
        public Builder selfDeclaredRepresentative(Boolean selfDeclaredRepresentative) {
            this.selfDeclaredRepresentative = selfDeclaredRepresentative;
            return this;
        }

        /**
         * Setter for address.
         * @param  address  GetRegisterInformationAddressResponse value for address.
         * @return Builder
         */
        public Builder address(GetRegisterInformationAddressResponse address) {
            this.address = OptionalNullable.of(address);
            return this;
        }

        /**
         * UnSetter for address.
         * @return Builder
         */
        public Builder unsetAddress() {
            address = null;
            return this;
        }

        /**
         * Setter for phoneNumbers.
         * @param  phoneNumbers  List of GetPhoneNumberResponse value for phoneNumbers.
         * @return Builder
         */
        public Builder phoneNumbers(List<GetPhoneNumberResponse> phoneNumbers) {
            this.phoneNumbers = OptionalNullable.of(phoneNumbers);
            return this;
        }

        /**
         * UnSetter for phoneNumbers.
         * @return Builder
         */
        public Builder unsetPhoneNumbers() {
            phoneNumbers = null;
            return this;
        }

        /**
         * Builds a new {@link GetManagingPartnerResponse} object using the set fields.
         * @return {@link GetManagingPartnerResponse}
         */
        public GetManagingPartnerResponse build() {
            return new GetManagingPartnerResponse(name, email, document, type, motherName,
                    birthdate, monthlyIncome, professionalOccupation, selfDeclaredRepresentative,
                    address, phoneNumbers);
        }
    }
}
