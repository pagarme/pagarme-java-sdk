/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetWithdrawSourceResponse type.
 */
public class GetWithdrawSourceResponse {
    private OptionalNullable<String> sourceId;
    private OptionalNullable<String> type;

    /**
     * Default constructor.
     */
    public GetWithdrawSourceResponse() {
    }

    /**
     * Initialization constructor.
     * @param  sourceId  String value for sourceId.
     * @param  type  String value for type.
     */
    public GetWithdrawSourceResponse(
            String sourceId,
            String type) {
        this.sourceId = OptionalNullable.of(sourceId);
        this.type = OptionalNullable.of(type);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetWithdrawSourceResponse(OptionalNullable<String> sourceId,
            OptionalNullable<String> type) {
        this.sourceId = sourceId;
        this.type = type;
    }

    /**
     * Internal Getter for SourceId.
     * @return Returns the Internal String
     */
    @JsonGetter("source_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSourceId() {
        return this.sourceId;
    }

    /**
     * Getter for SourceId.
     * @return Returns the String
     */
    public String getSourceId() {
        return OptionalNullable.getFrom(sourceId);
    }

    /**
     * Setter for SourceId.
     * @param sourceId Value for String
     */
    @JsonSetter("source_id")
    public void setSourceId(String sourceId) {
        this.sourceId = OptionalNullable.of(sourceId);
    }

    /**
     * UnSetter for SourceId.
     */
    public void unsetSourceId() {
        sourceId = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Converts this GetWithdrawSourceResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetWithdrawSourceResponse [" + "sourceId=" + sourceId + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link GetWithdrawSourceResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetWithdrawSourceResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.sourceId = internalGetSourceId();
        builder.type = internalGetType();
        return builder;
    }

    /**
     * Class to build instances of {@link GetWithdrawSourceResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> sourceId;
        private OptionalNullable<String> type;



        /**
         * Setter for sourceId.
         * @param  sourceId  String value for sourceId.
         * @return Builder
         */
        public Builder sourceId(String sourceId) {
            this.sourceId = OptionalNullable.of(sourceId);
            return this;
        }

        /**
         * UnSetter for sourceId.
         * @return Builder
         */
        public Builder unsetSourceId() {
            sourceId = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Builds a new {@link GetWithdrawSourceResponse} object using the set fields.
         * @return {@link GetWithdrawSourceResponse}
         */
        public GetWithdrawSourceResponse build() {
            return new GetWithdrawSourceResponse(sourceId, type);
        }
    }
}
