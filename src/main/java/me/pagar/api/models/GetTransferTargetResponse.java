/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetTransferTargetResponse type.
 */
public class GetTransferTargetResponse {
    private OptionalNullable<String> targetId;
    private OptionalNullable<String> type;

    /**
     * Default constructor.
     */
    public GetTransferTargetResponse() {
    }

    /**
     * Initialization constructor.
     * @param  targetId  String value for targetId.
     * @param  type  String value for type.
     */
    public GetTransferTargetResponse(
            String targetId,
            String type) {
        this.targetId = OptionalNullable.of(targetId);
        this.type = OptionalNullable.of(type);
    }

    /**
     * Internal initialization constructor.
     */
    protected GetTransferTargetResponse(OptionalNullable<String> targetId,
            OptionalNullable<String> type) {
        this.targetId = targetId;
        this.type = type;
    }

    /**
     * Internal Getter for TargetId.
     * @return Returns the Internal String
     */
    @JsonGetter("target_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetTargetId() {
        return this.targetId;
    }

    /**
     * Getter for TargetId.
     * @return Returns the String
     */
    public String getTargetId() {
        return OptionalNullable.getFrom(targetId);
    }

    /**
     * Setter for TargetId.
     * @param targetId Value for String
     */
    @JsonSetter("target_id")
    public void setTargetId(String targetId) {
        this.targetId = OptionalNullable.of(targetId);
    }

    /**
     * UnSetter for TargetId.
     */
    public void unsetTargetId() {
        targetId = null;
    }

    /**
     * Internal Getter for Type.
     * @return Returns the Internal String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetType() {
        return this.type;
    }

    /**
     * Getter for Type.
     * @return Returns the String
     */
    public String getType() {
        return OptionalNullable.getFrom(type);
    }

    /**
     * Setter for Type.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = OptionalNullable.of(type);
    }

    /**
     * UnSetter for Type.
     */
    public void unsetType() {
        type = null;
    }

    /**
     * Converts this GetTransferTargetResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetTransferTargetResponse [" + "targetId=" + targetId + ", type=" + type + "]";
    }

    /**
     * Builds a new {@link GetTransferTargetResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetTransferTargetResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.targetId = internalGetTargetId();
        builder.type = internalGetType();
        return builder;
    }

    /**
     * Class to build instances of {@link GetTransferTargetResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> targetId;
        private OptionalNullable<String> type;



        /**
         * Setter for targetId.
         * @param  targetId  String value for targetId.
         * @return Builder
         */
        public Builder targetId(String targetId) {
            this.targetId = OptionalNullable.of(targetId);
            return this;
        }

        /**
         * UnSetter for targetId.
         * @return Builder
         */
        public Builder unsetTargetId() {
            targetId = null;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = OptionalNullable.of(type);
            return this;
        }

        /**
         * UnSetter for type.
         * @return Builder
         */
        public Builder unsetType() {
            type = null;
            return this;
        }

        /**
         * Builds a new {@link GetTransferTargetResponse} object using the set fields.
         * @return {@link GetTransferTargetResponse}
         */
        public GetTransferTargetResponse build() {
            return new GetTransferTargetResponse(targetId, type);
        }
    }
}
