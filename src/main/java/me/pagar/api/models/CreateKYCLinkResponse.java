/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for CreateKYCLinkResponse type.
 */
public class CreateKYCLinkResponse {
    private OptionalNullable<String> base64;
    private OptionalNullable<String> url;
    private OptionalNullable<String> expirationDate;

    /**
     * Default constructor.
     */
    public CreateKYCLinkResponse() {
    }

    /**
     * Initialization constructor.
     * @param  base64  String value for base64.
     * @param  url  String value for url.
     * @param  expirationDate  String value for expirationDate.
     */
    public CreateKYCLinkResponse(
            String base64,
            String url,
            String expirationDate) {
        this.base64 = OptionalNullable.of(base64);
        this.url = OptionalNullable.of(url);
        this.expirationDate = OptionalNullable.of(expirationDate);
    }

    /**
     * Initialization constructor.
     * @param  base64  String value for base64.
     * @param  url  String value for url.
     * @param  expirationDate  String value for expirationDate.
     */

    protected CreateKYCLinkResponse(OptionalNullable<String> base64, OptionalNullable<String> url,
            OptionalNullable<String> expirationDate) {
        this.base64 = base64;
        this.url = url;
        this.expirationDate = expirationDate;
    }

    /**
     * Internal Getter for Base64.
     * Base64
     * @return Returns the Internal String
     */
    @JsonGetter("base64")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetBase64() {
        return this.base64;
    }

    /**
     * Getter for Base64.
     * Base64
     * @return Returns the String
     */
    public String getBase64() {
        return OptionalNullable.getFrom(base64);
    }

    /**
     * Setter for Base64.
     * Base64
     * @param base64 Value for String
     */
    @JsonSetter("base64")
    public void setBase64(String base64) {
        this.base64 = OptionalNullable.of(base64);
    }

    /**
     * UnSetter for Base64.
     * Base64
     */
    public void unsetBase64() {
        base64 = null;
    }

    /**
     * Internal Getter for Url.
     * URL
     * @return Returns the Internal String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetUrl() {
        return this.url;
    }

    /**
     * Getter for Url.
     * URL
     * @return Returns the String
     */
    public String getUrl() {
        return OptionalNullable.getFrom(url);
    }

    /**
     * Setter for Url.
     * URL
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = OptionalNullable.of(url);
    }

    /**
     * UnSetter for Url.
     * URL
     */
    public void unsetUrl() {
        url = null;
    }

    /**
     * Internal Getter for ExpirationDate.
     * Expiration Date
     * @return Returns the Internal String
     */
    @JsonGetter("expiration_date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetExpirationDate() {
        return this.expirationDate;
    }

    /**
     * Getter for ExpirationDate.
     * Expiration Date
     * @return Returns the String
     */
    public String getExpirationDate() {
        return OptionalNullable.getFrom(expirationDate);
    }

    /**
     * Setter for ExpirationDate.
     * Expiration Date
     * @param expirationDate Value for String
     */
    @JsonSetter("expiration_date")
    public void setExpirationDate(String expirationDate) {
        this.expirationDate = OptionalNullable.of(expirationDate);
    }

    /**
     * UnSetter for ExpirationDate.
     * Expiration Date
     */
    public void unsetExpirationDate() {
        expirationDate = null;
    }

    /**
     * Converts this CreateKYCLinkResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CreateKYCLinkResponse [" + "base64=" + base64 + ", url=" + url + ", expirationDate="
                + expirationDate + "]";
    }

    /**
     * Builds a new {@link CreateKYCLinkResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CreateKYCLinkResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.base64 = internalGetBase64();
        builder.url = internalGetUrl();
        builder.expirationDate = internalGetExpirationDate();
        return builder;
    }

    /**
     * Class to build instances of {@link CreateKYCLinkResponse}.
     */
    public static class Builder {
        private OptionalNullable<String> base64;
        private OptionalNullable<String> url;
        private OptionalNullable<String> expirationDate;



        /**
         * Setter for base64.
         * @param  base64  String value for base64.
         * @return Builder
         */
        public Builder base64(String base64) {
            this.base64 = OptionalNullable.of(base64);
            return this;
        }

        /**
         * UnSetter for base64.
         * @return Builder
         */
        public Builder unsetBase64() {
            base64 = null;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = OptionalNullable.of(url);
            return this;
        }

        /**
         * UnSetter for url.
         * @return Builder
         */
        public Builder unsetUrl() {
            url = null;
            return this;
        }

        /**
         * Setter for expirationDate.
         * @param  expirationDate  String value for expirationDate.
         * @return Builder
         */
        public Builder expirationDate(String expirationDate) {
            this.expirationDate = OptionalNullable.of(expirationDate);
            return this;
        }

        /**
         * UnSetter for expirationDate.
         * @return Builder
         */
        public Builder unsetExpirationDate() {
            expirationDate = null;
            return this;
        }

        /**
         * Builds a new {@link CreateKYCLinkResponse} object using the set fields.
         * @return {@link CreateKYCLinkResponse}
         */
        public CreateKYCLinkResponse build() {
            return new CreateKYCLinkResponse(base64, url, expirationDate);
        }
    }
}
