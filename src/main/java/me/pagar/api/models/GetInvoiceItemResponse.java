/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.OptionalNullable;

/**
 * This is a model class for GetInvoiceItemResponse type.
 */
public class GetInvoiceItemResponse {
    private OptionalNullable<Integer> amount;
    private OptionalNullable<String> description;
    private OptionalNullable<GetPricingSchemeResponse> pricingScheme;
    private OptionalNullable<GetPriceBracketResponse> priceBracket;
    private OptionalNullable<Integer> quantity;
    private OptionalNullable<String> name;
    private OptionalNullable<String> subscriptionItemId;

    /**
     * Default constructor.
     */
    public GetInvoiceItemResponse() {
    }

    /**
     * Initialization constructor.
     * @param  amount  Integer value for amount.
     * @param  description  String value for description.
     * @param  pricingScheme  GetPricingSchemeResponse value for pricingScheme.
     * @param  priceBracket  GetPriceBracketResponse value for priceBracket.
     * @param  quantity  Integer value for quantity.
     * @param  name  String value for name.
     * @param  subscriptionItemId  String value for subscriptionItemId.
     */
    public GetInvoiceItemResponse(
            Integer amount,
            String description,
            GetPricingSchemeResponse pricingScheme,
            GetPriceBracketResponse priceBracket,
            Integer quantity,
            String name,
            String subscriptionItemId) {
        this.amount = OptionalNullable.of(amount);
        this.description = OptionalNullable.of(description);
        this.pricingScheme = OptionalNullable.of(pricingScheme);
        this.priceBracket = OptionalNullable.of(priceBracket);
        this.quantity = OptionalNullable.of(quantity);
        this.name = OptionalNullable.of(name);
        this.subscriptionItemId = OptionalNullable.of(subscriptionItemId);
    }

    /**
     * Initialization constructor.
     * @param  amount  Integer value for amount.
     * @param  description  String value for description.
     * @param  pricingScheme  GetPricingSchemeResponse value for pricingScheme.
     * @param  priceBracket  GetPriceBracketResponse value for priceBracket.
     * @param  quantity  Integer value for quantity.
     * @param  name  String value for name.
     * @param  subscriptionItemId  String value for subscriptionItemId.
     */

    protected GetInvoiceItemResponse(OptionalNullable<Integer> amount,
            OptionalNullable<String> description,
            OptionalNullable<GetPricingSchemeResponse> pricingScheme,
            OptionalNullable<GetPriceBracketResponse> priceBracket,
            OptionalNullable<Integer> quantity, OptionalNullable<String> name,
            OptionalNullable<String> subscriptionItemId) {
        this.amount = amount;
        this.description = description;
        this.pricingScheme = pricingScheme;
        this.priceBracket = priceBracket;
        this.quantity = quantity;
        this.name = name;
        this.subscriptionItemId = subscriptionItemId;
    }

    /**
     * Internal Getter for Amount.
     * @return Returns the Internal Integer
     */
    @JsonGetter("amount")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetAmount() {
        return this.amount;
    }

    /**
     * Getter for Amount.
     * @return Returns the Integer
     */
    public Integer getAmount() {
        return OptionalNullable.getFrom(amount);
    }

    /**
     * Setter for Amount.
     * @param amount Value for Integer
     */
    @JsonSetter("amount")
    public void setAmount(Integer amount) {
        this.amount = OptionalNullable.of(amount);
    }

    /**
     * UnSetter for Amount.
     */
    public void unsetAmount() {
        amount = null;
    }

    /**
     * Internal Getter for Description.
     * @return Returns the Internal String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetDescription() {
        return this.description;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    public String getDescription() {
        return OptionalNullable.getFrom(description);
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = OptionalNullable.of(description);
    }

    /**
     * UnSetter for Description.
     */
    public void unsetDescription() {
        description = null;
    }

    /**
     * Internal Getter for PricingScheme.
     * @return Returns the Internal GetPricingSchemeResponse
     */
    @JsonGetter("pricing_scheme")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetPricingSchemeResponse> internalGetPricingScheme() {
        return this.pricingScheme;
    }

    /**
     * Getter for PricingScheme.
     * @return Returns the GetPricingSchemeResponse
     */
    public GetPricingSchemeResponse getPricingScheme() {
        return OptionalNullable.getFrom(pricingScheme);
    }

    /**
     * Setter for PricingScheme.
     * @param pricingScheme Value for GetPricingSchemeResponse
     */
    @JsonSetter("pricing_scheme")
    public void setPricingScheme(GetPricingSchemeResponse pricingScheme) {
        this.pricingScheme = OptionalNullable.of(pricingScheme);
    }

    /**
     * UnSetter for PricingScheme.
     */
    public void unsetPricingScheme() {
        pricingScheme = null;
    }

    /**
     * Internal Getter for PriceBracket.
     * @return Returns the Internal GetPriceBracketResponse
     */
    @JsonGetter("price_bracket")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<GetPriceBracketResponse> internalGetPriceBracket() {
        return this.priceBracket;
    }

    /**
     * Getter for PriceBracket.
     * @return Returns the GetPriceBracketResponse
     */
    public GetPriceBracketResponse getPriceBracket() {
        return OptionalNullable.getFrom(priceBracket);
    }

    /**
     * Setter for PriceBracket.
     * @param priceBracket Value for GetPriceBracketResponse
     */
    @JsonSetter("price_bracket")
    public void setPriceBracket(GetPriceBracketResponse priceBracket) {
        this.priceBracket = OptionalNullable.of(priceBracket);
    }

    /**
     * UnSetter for PriceBracket.
     */
    public void unsetPriceBracket() {
        priceBracket = null;
    }

    /**
     * Internal Getter for Quantity.
     * @return Returns the Internal Integer
     */
    @JsonGetter("quantity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<Integer> internalGetQuantity() {
        return this.quantity;
    }

    /**
     * Getter for Quantity.
     * @return Returns the Integer
     */
    public Integer getQuantity() {
        return OptionalNullable.getFrom(quantity);
    }

    /**
     * Setter for Quantity.
     * @param quantity Value for Integer
     */
    @JsonSetter("quantity")
    public void setQuantity(Integer quantity) {
        this.quantity = OptionalNullable.of(quantity);
    }

    /**
     * UnSetter for Quantity.
     */
    public void unsetQuantity() {
        quantity = null;
    }

    /**
     * Internal Getter for Name.
     * @return Returns the Internal String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetName() {
        return this.name;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    public String getName() {
        return OptionalNullable.getFrom(name);
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = OptionalNullable.of(name);
    }

    /**
     * UnSetter for Name.
     */
    public void unsetName() {
        name = null;
    }

    /**
     * Internal Getter for SubscriptionItemId.
     * Subscription Item Id
     * @return Returns the Internal String
     */
    @JsonGetter("subscription_item_id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<String> internalGetSubscriptionItemId() {
        return this.subscriptionItemId;
    }

    /**
     * Getter for SubscriptionItemId.
     * Subscription Item Id
     * @return Returns the String
     */
    public String getSubscriptionItemId() {
        return OptionalNullable.getFrom(subscriptionItemId);
    }

    /**
     * Setter for SubscriptionItemId.
     * Subscription Item Id
     * @param subscriptionItemId Value for String
     */
    @JsonSetter("subscription_item_id")
    public void setSubscriptionItemId(String subscriptionItemId) {
        this.subscriptionItemId = OptionalNullable.of(subscriptionItemId);
    }

    /**
     * UnSetter for SubscriptionItemId.
     * Subscription Item Id
     */
    public void unsetSubscriptionItemId() {
        subscriptionItemId = null;
    }

    /**
     * Converts this GetInvoiceItemResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GetInvoiceItemResponse [" + "amount=" + amount + ", description=" + description
                + ", pricingScheme=" + pricingScheme + ", priceBracket=" + priceBracket
                + ", quantity=" + quantity + ", name=" + name + ", subscriptionItemId="
                + subscriptionItemId + "]";
    }

    /**
     * Builds a new {@link GetInvoiceItemResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GetInvoiceItemResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder();
        builder.amount = internalGetAmount();
        builder.description = internalGetDescription();
        builder.pricingScheme = internalGetPricingScheme();
        builder.priceBracket = internalGetPriceBracket();
        builder.quantity = internalGetQuantity();
        builder.name = internalGetName();
        builder.subscriptionItemId = internalGetSubscriptionItemId();
        return builder;
    }

    /**
     * Class to build instances of {@link GetInvoiceItemResponse}.
     */
    public static class Builder {
        private OptionalNullable<Integer> amount;
        private OptionalNullable<String> description;
        private OptionalNullable<GetPricingSchemeResponse> pricingScheme;
        private OptionalNullable<GetPriceBracketResponse> priceBracket;
        private OptionalNullable<Integer> quantity;
        private OptionalNullable<String> name;
        private OptionalNullable<String> subscriptionItemId;



        /**
         * Setter for amount.
         * @param  amount  Integer value for amount.
         * @return Builder
         */
        public Builder amount(Integer amount) {
            this.amount = OptionalNullable.of(amount);
            return this;
        }

        /**
         * UnSetter for amount.
         * @return Builder
         */
        public Builder unsetAmount() {
            amount = null;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = OptionalNullable.of(description);
            return this;
        }

        /**
         * UnSetter for description.
         * @return Builder
         */
        public Builder unsetDescription() {
            description = null;
            return this;
        }

        /**
         * Setter for pricingScheme.
         * @param  pricingScheme  GetPricingSchemeResponse value for pricingScheme.
         * @return Builder
         */
        public Builder pricingScheme(GetPricingSchemeResponse pricingScheme) {
            this.pricingScheme = OptionalNullable.of(pricingScheme);
            return this;
        }

        /**
         * UnSetter for pricingScheme.
         * @return Builder
         */
        public Builder unsetPricingScheme() {
            pricingScheme = null;
            return this;
        }

        /**
         * Setter for priceBracket.
         * @param  priceBracket  GetPriceBracketResponse value for priceBracket.
         * @return Builder
         */
        public Builder priceBracket(GetPriceBracketResponse priceBracket) {
            this.priceBracket = OptionalNullable.of(priceBracket);
            return this;
        }

        /**
         * UnSetter for priceBracket.
         * @return Builder
         */
        public Builder unsetPriceBracket() {
            priceBracket = null;
            return this;
        }

        /**
         * Setter for quantity.
         * @param  quantity  Integer value for quantity.
         * @return Builder
         */
        public Builder quantity(Integer quantity) {
            this.quantity = OptionalNullable.of(quantity);
            return this;
        }

        /**
         * UnSetter for quantity.
         * @return Builder
         */
        public Builder unsetQuantity() {
            quantity = null;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = OptionalNullable.of(name);
            return this;
        }

        /**
         * UnSetter for name.
         * @return Builder
         */
        public Builder unsetName() {
            name = null;
            return this;
        }

        /**
         * Setter for subscriptionItemId.
         * @param  subscriptionItemId  String value for subscriptionItemId.
         * @return Builder
         */
        public Builder subscriptionItemId(String subscriptionItemId) {
            this.subscriptionItemId = OptionalNullable.of(subscriptionItemId);
            return this;
        }

        /**
         * UnSetter for subscriptionItemId.
         * @return Builder
         */
        public Builder unsetSubscriptionItemId() {
            subscriptionItemId = null;
            return this;
        }

        /**
         * Builds a new {@link GetInvoiceItemResponse} object using the set fields.
         * @return {@link GetInvoiceItemResponse}
         */
        public GetInvoiceItemResponse build() {
            return new GetInvoiceItemResponse(amount, description, pricingScheme, priceBracket,
                    quantity, name, subscriptionItemId);
        }
    }
}
