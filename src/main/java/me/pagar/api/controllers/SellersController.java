/*
 * PagarmeApiSDKLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package me.pagar.api.controllers;

import java.io.IOException;
import java.time.LocalDateTime;
import me.pagar.api.exceptions.ApiException;
import me.pagar.api.models.CreateSellerRequest;
import me.pagar.api.models.GetSellerResponse;
import me.pagar.api.models.ListSellerResponse;
import me.pagar.api.models.UpdateMetadataRequest;
import me.pagar.api.models.UpdateSellerRequest;

/**
 * This interface lists all the endpoints of the group.
 * This can be overridden for the mock calls.
 */
public interface SellersController {
    /**
     * @param  request  Required parameter: Seller Model
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetSellerResponse createSeller(
            final CreateSellerRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * @param  sellerId  Required parameter: Seller Id
     * @param  request  Required parameter: Request for updating the charge metadata
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetSellerResponse updateSellerMetadata(
            final String sellerId,
            final UpdateMetadataRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * @param  id  Required parameter: Example:
     * @param  request  Required parameter: Update Seller model
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetSellerResponse updateSeller(
            final String id,
            final UpdateSellerRequest request,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * @param  sellerId  Required parameter: Seller Id
     * @param  idempotencyKey  Optional parameter: Example:
     * @return    Returns the GetSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetSellerResponse deleteSeller(
            final String sellerId,
            final String idempotencyKey) throws ApiException, IOException;

    /**
     * @param  id  Required parameter: Seller Id
     * @return    Returns the GetSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    GetSellerResponse getSellerById(
            final String id) throws ApiException, IOException;

    /**
     * @param  page  Optional parameter: Page number
     * @param  size  Optional parameter: Page size
     * @param  name  Optional parameter: Example:
     * @param  document  Optional parameter: Example:
     * @param  code  Optional parameter: Example:
     * @param  status  Optional parameter: Example:
     * @param  type  Optional parameter: Example:
     * @param  createdSince  Optional parameter: Example:
     * @param  createdUntil  Optional parameter: Example:
     * @return    Returns the ListSellerResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    ListSellerResponse getSellers(
            final Integer page,
            final Integer size,
            final String name,
            final String document,
            final String code,
            final String status,
            final String type,
            final LocalDateTime createdSince,
            final LocalDateTime createdUntil) throws ApiException, IOException;

}